{
    "project": {},
    "files": {
        "Scripts\\core\\game.js": {
            "name": "Scripts\\core\\game.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js": {
            "name": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Graphics": 1
            }
        },
        "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js": {
            "name": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "modules": {},
            "classes": {
                "UID": 1,
                "MouseEvent": 1,
                "Matrix2D": 1,
                "DisplayProps": 1,
                "Point": 1,
                "Rectangle": 1,
                "ButtonHelper": 1,
                "Shadow": 1,
                "SpriteSheet": 1,
                "Graphics": 1,
                "Graphics.LineTo": 1,
                "Graphics.MoveTo": 1,
                "Graphics.ArcTo": 1,
                "Graphics.Arc": 1,
                "Graphics.QuadraticCurveTo": 1,
                "Graphics.BezierCurveTo": 1,
                "Graphics.Rect": 1,
                "Graphics.ClosePath": 1,
                "Graphics.BeginPath": 1,
                "Graphics.Fill": 1,
                "Graphics.Stroke": 1,
                "Graphics.StrokeStyle": 1,
                "Graphics.StrokeDash": 1,
                "Graphics.RoundRect": 1,
                "Graphics.Circle": 1,
                "Graphics.Ellipse": 1,
                "Graphics.PolyStar": 1,
                "Graphics.DisplayObject": 1,
                "Graphics.Container": 1,
                "Graphics.Stage": 1,
                "Graphics.Bitmap": 1,
                "Graphics.Sprite": 1,
                "Graphics.Shape": 1,
                "Graphics.Text": 1,
                "Graphics.BitmapText": 1,
                "Graphics.MovieClip": 1,
                "Graphics.MovieClipPlugin": 1,
                "Graphics.SpriteSheetUtils": 1,
                "Graphics.SpriteSheetBuilder": 1,
                "Graphics.DOMElement": 1,
                "Graphics.Filter": 1,
                "Graphics.BlurFilter": 1,
                "Graphics.AlphaMapFilter": 1,
                "Graphics.AlphaMaskFilter": 1,
                "Graphics.ColorFilter": 1,
                "Graphics.ColorMatrix": 1,
                "Graphics.ColorMatrixFilter": 1,
                "Graphics.Touch": 1,
                "Graphics.EaselJS": 1
            },
            "fors": {},
            "namespaces": {
                "Graphics": 1
            }
        },
        "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js": {
            "name": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js": {
            "name": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "modules": {},
            "classes": {
                "Graphics.SpriteContainer": 1,
                "Graphics.SpriteStage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js": {
            "name": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js": {
            "name": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "modules": {},
            "classes": {
                "Graphics.PreloadJS": 1,
                "Graphics.DomUtils": 1,
                "Graphics.DataUtils": 1,
                "Graphics.LoadQueue": 1,
                "Graphics.TextLoader": 1,
                "Graphics.BinaryLoader": 1,
                "Graphics.CSSLoader": 1,
                "Graphics.ImageLoader": 1,
                "Graphics.JavaScriptLoader": 1,
                "Graphics.JSONLoader": 1,
                "Graphics.JSONPLoader": 1,
                "Graphics.ManifestLoader": 1,
                "Graphics.VideoLoader": 1,
                "Graphics.SpriteSheetLoader": 1,
                "Graphics.SVGLoader": 1,
                "Graphics.XMLLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Graphics.CordovaAudioPlugin": 1
            },
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.min.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "modules": {},
            "classes": {
                "Graphics.CordovaAudioLoader": 1,
                "Graphics.CordovaAudioSoundInstance": 1,
                "Graphics.CordovaAudioPlugin": 1
            },
            "fors": {
                "Graphics.CordovaAudioPlugin": 1
            },
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.min.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Graphics.FlashAudioPlugin": 1
            },
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.min.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "modules": {},
            "classes": {
                "Graphics.FlashAudioLoader": 1,
                "Graphics.FlashAudioSoundInstance": 1,
                "Graphics.FlashAudioPlugin": 1
            },
            "fors": {
                "Graphics.FlashAudioPlugin": 1
            },
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.min.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.min.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "modules": {},
            "classes": {
                "Graphics.ErrorEvent": 1,
                "Graphics.ProgressEvent": 1,
                "Graphics.LoadItem": 1,
                "Graphics.RequestUtils": 1,
                "Graphics.AbstractLoader": 1,
                "Graphics.AbstractMediaLoader": 1,
                "Graphics.AbstractRequest": 1,
                "Graphics.TagRequest": 1,
                "Graphics.MediaTagRequest": 1,
                "Graphics.XHRRequest": 1,
                "Graphics.SoundLoader": 1,
                "Graphics.SoundJS": 1,
                "Graphics.AudioSprite": 1,
                "Graphics.PlayPropsConfig": 1,
                "Graphics.Sound": 1,
                "Graphics.AbstractSoundInstance": 1,
                "Graphics.AbstractPlugin": 1,
                "Graphics.WebAudioLoader": 1,
                "Graphics.WebAudioSoundInstance": 1,
                "Graphics.WebAudioPlugin": 1,
                "Graphics.HTMLAudioTagPool": 1,
                "Graphics.HTMLAudioSoundInstance": 1,
                "Graphics.HTMLAudioPlugin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.min.js": {
            "name": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js": {
            "name": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js": {
            "name": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "modules": {},
            "classes": {
                "Utility Methods": 1,
                "Event": 1,
                "EventDispatcher": 1,
                "Ticker": 1,
                "Graphics.Tween": 1,
                "Graphics.Timeline": 1,
                "Graphics.Ease": 1,
                "Graphics.MotionGuidePlugin": 1,
                "Graphics.TweenJS": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scripts\\objects\\button.js": {
            "name": "Scripts\\objects\\button.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Utility Methods": {
            "name": "Utility Methods",
            "shortname": "Utility Methods",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 72,
            "description": "Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\ncreatejs namespace directly.\n\n<h4>Example</h4>\n\n     myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));",
            "mainName": "Utility Methods",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Event": {
            "name": "Event",
            "shortname": "Event",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 136,
            "description": "Contains properties and methods shared by all events for use with\n{{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\nNote that Event objects are often reused, so you should never\nrely on an event object's state outside of the call stack it was received in.",
            "params": [
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether the event will bubble through the display list.",
                    "type": "Boolean"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the default behaviour of this event can be cancelled.",
                    "type": "Boolean"
                }
            ],
            "is_constructor": 1
        },
        "EventDispatcher": {
            "name": "EventDispatcher",
            "shortname": "EventDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Ticker",
                "Graphics.Sound"
            ],
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 364,
            "description": "EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n\nYou can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\nEventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\n\nTogether with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\nDOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\nbubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n\nEventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\nto create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \n{{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\n{{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\n\nAnother addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\nmethod, which can be used to listeners for all events, or listeners for a specific event. The Event object also \nincludes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\n\n<h4>Example</h4>\nAdd EventDispatcher capabilities to the \"MyClass\" class.\n\n     EventDispatcher.initialize(MyClass.prototype);\n\nAdd an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\n\n     instance.addEventListener(\"eventName\", handlerMethod);\n     function handlerMethod(event) {\n         console.log(event.target + \" Was Clicked\");\n     }\n\n<b>Maintaining proper scope</b><br />\nScope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\nmethod to subscribe to events simplifies this.\n\n     instance.addEventListener(\"click\", function(event) {\n         console.log(instance == this); // false, scope is ambiguous.\n     });\n     \n     instance.on(\"click\", function(event) {\n         console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\n     });\n\nIf you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\nscope.\n\n<b>Browser support</b>\nThe event model in CreateJS can be used separately from the suite in any project, however the inheritance model\nrequires modern browsers (IE9+).",
            "is_constructor": 1
        },
        "Ticker": {
            "name": "Ticker",
            "shortname": "Ticker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 760,
            "description": "The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\nevent to be notified when a set time interval has elapsed.\n\nNote that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\nwhen under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\ncan not be instantiated.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         // Actions carried out each tick (aka frame)\n         if (!event.paused) {\n             // Actions carried out when the Ticker is not paused.\n         }\n     }",
            "uses": [
                "EventDispatcher"
            ],
            "static": 1
        },
        "UID": {
            "name": "UID",
            "shortname": "UID",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1401,
            "description": "Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\nand should not be instantiated.",
            "static": 1
        },
        "MouseEvent": {
            "name": "MouseEvent",
            "shortname": "MouseEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1447,
            "description": "Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\nsee the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.",
            "params": [
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether the event will bubble through the display list.",
                    "type": "Boolean"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the default behaviour of this event can be cancelled.",
                    "type": "Boolean"
                },
                {
                    "name": "stageX",
                    "description": "The normalized x position relative to the stage.",
                    "type": "Number"
                },
                {
                    "name": "stageY",
                    "description": "The normalized y position relative to the stage.",
                    "type": "Number"
                },
                {
                    "name": "nativeEvent",
                    "description": "The native DOM event related to this mouse event.",
                    "type": "MouseEvent"
                },
                {
                    "name": "pointerID",
                    "description": "The unique id for the pointer.",
                    "type": "Number"
                },
                {
                    "name": "primary",
                    "description": "Indicates whether this is the primary pointer in a multitouch environment.",
                    "type": "Boolean"
                },
                {
                    "name": "rawX",
                    "description": "The raw x position relative to the stage.",
                    "type": "Number"
                },
                {
                    "name": "rawY",
                    "description": "The raw y position relative to the stage.",
                    "type": "Number"
                },
                {
                    "name": "relatedTarget",
                    "description": "The secondary target for the event.",
                    "type": "DisplayObject"
                }
            ],
            "extends": "Event",
            "is_constructor": 1
        },
        "Matrix2D": {
            "name": "Matrix2D",
            "shortname": "Matrix2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1618,
            "description": "Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n\nThis matrix can be visualized as:\n\n\t[ a  c  tx\n\t  b  d  ty\n\t  0  0  1  ]\n\nNote the locations of b and c.",
            "params": [
                {
                    "name": "a",
                    "description": "Specifies the a property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "b",
                    "description": "Specifies the b property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "c",
                    "description": "Specifies the c property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "d",
                    "description": "Specifies the d property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "tx",
                    "description": "Specifies the tx property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "ty",
                    "description": "Specifies the ty property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "is_constructor": 1
        },
        "DisplayProps": {
            "name": "DisplayProps",
            "shortname": "DisplayProps",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2132,
            "description": "Used for calculating and encapsulating display related properties.",
            "params": [
                {
                    "name": "visible",
                    "description": "Visible value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "alpha",
                    "description": "Alpha value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "shadow",
                    "description": "A Shadow instance or null.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "compositeOperation",
                    "description": "A compositeOperation value or null.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "matrix",
                    "description": "A transformation matrix. Defaults to a new identity matrix.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2291,
            "description": "Represents a point on a 2 dimensional x / y coordinate system.\n\n<h4>Example</h4>\n\n     var point = new createjs.Point(0, 100);",
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "is_constructor": 1
        },
        "Rectangle": {
            "name": "Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2398,
            "description": "Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\n<h4>Example</h4>\n\n     var rect = new createjs.Rectangle(0, 0, 100, 100);",
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "width",
                    "description": "The width of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "is_constructor": 1
        },
        "ButtonHelper": {
            "name": "ButtonHelper",
            "shortname": "ButtonHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2620,
            "description": "The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n{{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\nautomatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\nto the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\nThe ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\ngarbage collection.\n\nNote that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n     var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n     myInstance.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n         // Click Happened.\n     }",
            "params": [
                {
                    "name": "target",
                    "description": "The instance to manage.",
                    "type": "Sprite|MovieClip"
                },
                {
                    "name": "outLabel",
                    "description": "The label or animation to go to when the user rolls out of the button.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"out\""
                },
                {
                    "name": "overLabel",
                    "description": "The label or animation to go to when the user rolls over the button.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"over\""
                },
                {
                    "name": "downLabel",
                    "description": "The label or animation to go to when the user presses the button.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"down\""
                },
                {
                    "name": "play",
                    "description": "If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\nstates.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "hitArea",
                    "description": "An optional item to use as the hit state for the button. If this is not defined,\nthen the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\nused for the hitState.",
                    "type": "DisplayObject",
                    "optional": true
                },
                {
                    "name": "hitLabel",
                    "description": "The label or animation on the hitArea instance that defines the hitArea bounds. If this is\nnull, then the default state of the hitArea will be used. *",
                    "type": "String",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "Shadow": {
            "name": "Shadow",
            "shortname": "Shadow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2861,
            "description": "This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\nvia its <code>shadow</code> property.\n\n<h4>Example</h4>\n\n     myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "color",
                    "description": "The color of the shadow. This can be any valid CSS color value.",
                    "type": "String"
                },
                {
                    "name": "offsetX",
                    "description": "The x offset of the shadow in pixels.",
                    "type": "Number"
                },
                {
                    "name": "offsetY",
                    "description": "The y offset of the shadow in pixels.",
                    "type": "Number"
                },
                {
                    "name": "blur",
                    "description": "The size of the blurring effect.",
                    "type": "Number"
                }
            ]
        },
        "SpriteSheet": {
            "name": "SpriteSheet",
            "shortname": "SpriteSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2971,
            "description": "Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\nanimation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\nimages could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\nThe data passed to the SpriteSheet constructor defines:\n<ol>\n\t<li> The source image or images to use.</li>\n\t<li> The positions of individual image frames.</li>\n\t<li> Sequences of frames that form named animations. Optional.</li>\n\t<li> The target playback framerate. Optional.</li>\n</ol>\n<h3>SpriteSheet Format</h3>\nSpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n(`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n\n<h4>images</h4>\nAn array of source images. Images can be either an HTMlimage\ninstance, or a uri to an image. The former is recommended to control preloading.\n\n\timages: [image1, \"path/to/image2.png\"],\n\n<h4>frames</h4>\nDefines the individual frames. There are two supported formats for frame data:\nWhen all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\nand `count` properties.\n\n<ul>\n <li>`width` & `height` are required and specify the dimensions of the frames</li>\n <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n <li>`spacing` indicate the spacing between frames</li>\n <li>`margin` specify the margin around the image(s)</li>\n <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n indexes based on their position in the source images (left to right, top to bottom).</li>\n</ul>\n\n \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n\nIf the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\nwith 4 required and 3 optional entries, in the order:\n\n<ul>\n <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n</ul>\n\n\tframes: [\n\t\t// x, y, width, height, imageIndex*, regX*, regY*\n\t\t[64, 0, 96, 64],\n\t\t[0, 0, 64, 64, 1, 32, 32]\n\t\t// etc.\n\t]\n\n<h4>animations</h4>\nOptional. An object defining sequences of frames to play as named animations. Each property corresponds to an\nanimation of the same name. Each animation must specify the frames to play, and may\nalso include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\nthe name of the `next` animation to sequence to after it completes.\n\nThere are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n<ol>\n\t<li>for a single frame animation, you can simply specify the frame index\n\n\t\tanimations: {\n\t\t\tsit: 7\n\t\t}\n\n</li>\n<li>\n     for an animation of consecutive frames, you can use an array with two required, and two optional entries\n\t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n\n\t\tanimations: {\n\t\t\t// start, end, next*, speed*\n\t\t\trun: [0, 8],\n\t\t\tjump: [9, 12, \"run\", 2]\n\t\t}\n\n </li>\n <li>\n    for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n    indexes to play in order. The object can also specify `next` and `speed` properties.\n\n\t\tanimations: {\n\t\t\twalk: {\n\t\t\t\tframes: [1,2,3,3,2,1]\n\t\t\t},\n\t\t\tshoot: {\n\t\t\t\tframes: [1,4,5,6],\n\t\t\t\tnext: \"walk\",\n\t\t\t\tspeed: 0.5\n\t\t\t}\n\t\t}\n\n </li>\n</ol>\n<strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\nproperty instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\nearlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n\n<h4>framerate</h4>\nOptional. Indicates the default framerate to play this spritesheet at in frames per second. See\n{{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n\n\t\tframerate: 20\n\nNote that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\n\t\tcreatejs.Ticker.on(\"tick\", handleTick);\n\t\tfunction handleTick(event) {\n\t\t\tstage.update(event);\n\t\t}\n\n<h3>Example</h3>\nTo define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\nanimations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\nsequencing back to run.\n\n\t\tvar data = {\n\t\t\timages: [\"sprites.jpg\"],\n\t\t\tframes: {width:50, height:50},\n\t\t\tanimations: {\n\t\t\t\tstand:0,\n\t\t\t\trun:[1,5],\n\t\t\t\tjump:[6,8,\"run\"]\n\t\t\t}\n\t\t};\n\t\tvar spriteSheet = new createjs.SpriteSheet(data);\n\t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n\n<h3>Generating SpriteSheet Images</h3>\nSpritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\ncoordinates manually, however there are a number of tools that facilitate this.\n<ul>\n    <li>Exporting SpriteSheets or HTML5 content from Flash Pro supports the EaselJS SpriteSheet format.</li>\n    <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n    EaselJS support.\n    <li>SWF animations in Flash can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n</ul>\n\n<h3>Cross Origin Issues</h3>\n<strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\nusing:\n<ul>\n    <li>a mouse</li>\n    <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n    <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n    <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n</ul>\nYou can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\nsetting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n\n\t\tvar image = new Image();\n\t\timg.crossOrigin=\"Anonymous\";\n\t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n\nIf you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\nsupport cross-origin requests, or this will not work. For more information, check out\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "An object describing the SpriteSheet data.",
                    "type": "Object"
                }
            ],
            "extends": "EventDispatcher"
        },
        "Graphics": {
            "name": "Graphics",
            "shortname": "Graphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3568,
            "description": "The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\nspecified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\ndirectly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\ncontext of an EaselJS display list.\n\nThere are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\ninstantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\nThe former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n\n     var g = new createjs.Graphics();\n     g.setStrokeStyle(1);\n     g.beginStroke(\"#000000\");\n     g.beginFill(\"red\");\n     g.drawCircle(0,0,30);\n\nAll drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\nthe following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n\n     myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n\nEach graphics API call generates a command object (see below). The last command to be created can be accessed via\n{{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n\n     var fillCommand = myGraphics.beginFill(\"red\").command;\n     // ... later, update the fill style/color:\n     fillCommand.style = \"blue\";\n     // or change it to a bitmap fill:\n     fillCommand.bitmap(myImage);\n\nFor more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\nneed to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n\n     // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n     myGraphics.append(createjs.Graphics.beginCmd);\n     // we need to define the path before applying the fill:\n     var circle = new createjs.Graphics.Circle(0,0,30);\n     myGraphics.append(circle);\n     // fill the path we just defined:\n     var fill = new createjs.Graphics.Fill(\"red\");\n     myGraphics.append(fill);\n\nThese approaches can be used together, for example to insert a custom command:\n\n     myGraphics.beginFill(\"red\");\n     var customCommand = new CustomSpiralCommand(etc);\n     myGraphics.append(customCommand);\n     myGraphics.beginFill(\"blue\");\n     myGraphics.drawCircle(0, 0, 30);\n\nSee {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n\n<h4>Tiny API</h4>\nThe Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\nGraphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\nto generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\ndescriptions in the docs.\n\n<table>\n    <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n    <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n    <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n    <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n    <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n    <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n    <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n    <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n    <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n    <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n    <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n    <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n    <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n    <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n    <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n    <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n    <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n    <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n    <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n    <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n    <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n    <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n    <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n    <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n    <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n    <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n    <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n</table>\n\nHere is the above example, using the tiny API instead.\n\n     myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);",
            "is_constructor": 1
        },
        "Graphics.LineTo": {
            "name": "Graphics.LineTo",
            "shortname": "LineTo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5163,
            "description": "Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.MoveTo": {
            "name": "Graphics.MoveTo",
            "shortname": "MoveTo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5187,
            "description": "Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.ArcTo": {
            "name": "Graphics.ArcTo",
            "shortname": "ArcTo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5211,
            "description": "Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.Arc": {
            "name": "Graphics.Arc",
            "shortname": "Arc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5252,
            "description": "Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "anticlockwise",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.QuadraticCurveTo": {
            "name": "Graphics.QuadraticCurveTo",
            "shortname": "QuadraticCurveTo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5299,
            "description": "Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.BezierCurveTo": {
            "name": "Graphics.BezierCurveTo",
            "shortname": "BezierCurveTo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5334,
            "description": "Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cp1x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.Rect": {
            "name": "Graphics.Rect",
            "shortname": "Rect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5380,
            "description": "Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.ClosePath": {
            "name": "Graphics.ClosePath",
            "shortname": "ClosePath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5415,
            "description": "Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1
        },
        "Graphics.BeginPath": {
            "name": "Graphics.BeginPath",
            "shortname": "BeginPath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5428,
            "description": "Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1
        },
        "Graphics.Fill": {
            "name": "Graphics.Fill",
            "shortname": "Fill",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5441,
            "description": "Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "style",
                    "description": "A valid Context2D fillStyle.",
                    "type": "Object"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ]
        },
        "Graphics.Stroke": {
            "name": "Graphics.Stroke",
            "shortname": "Stroke",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5530,
            "description": "Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "style",
                    "description": "A valid Context2D fillStyle.",
                    "type": "Object"
                },
                {
                    "name": "ignoreScale",
                    "description": "",
                    "type": "Boolean"
                }
            ]
        },
        "Graphics.StrokeStyle": {
            "name": "Graphics.StrokeStyle",
            "shortname": "StrokeStyle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5601,
            "description": "Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "caps",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "butt"
                },
                {
                    "name": "joints",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "miter"
                },
                {
                    "name": "miterLimit",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "ignoreScale",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ]
        },
        "Graphics.StrokeDash": {
            "name": "Graphics.StrokeDash",
            "shortname": "StrokeDash",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5650,
            "description": "Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "segments",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "Graphics.RoundRect": {
            "name": "Graphics.RoundRect",
            "shortname": "RoundRect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5690,
            "description": "Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radiusTL",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radiusTR",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radiusBR",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radiusBL",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.Circle": {
            "name": "Graphics.Circle",
            "shortname": "Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5771,
            "description": "Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.Ellipse": {
            "name": "Graphics.Ellipse",
            "shortname": "Ellipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5801,
            "description": "Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.PolyStar": {
            "name": "Graphics.PolyStar",
            "shortname": "PolyStar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5853,
            "description": "Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "sides",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pointSize",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "Graphics.DisplayObject": {
            "name": "Graphics.DisplayObject",
            "shortname": "DisplayObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5937,
            "description": "DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n{{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\nDisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\nmethods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\ncaching, and mouse handlers.",
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "Graphics.Container": {
            "name": "Graphics.Container",
            "shortname": "Container",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7197,
            "description": "A Container is a nestable display list that allows you to work with compound display elements. For  example you could\ngroup arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\ntransform them as a group, while still being able to move the individual parts relative to each other. Children of\ncontainers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\nContainer.\n\nFor example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\nand <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\nContainers have some overhead, so you generally shouldn't create a Container to hold a single child.\n\n<h4>Example</h4>\n\n     var container = new createjs.Container();\n     container.addChild(bitmapInstance, shapeInstance);\n     container.x = 100;",
            "extends": "DisplayObject",
            "is_constructor": 1
        },
        "Graphics.Stage": {
            "name": "Graphics.Stage",
            "shortname": "Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7863,
            "description": "A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\nmethod is called, it will render its display list to its target canvas.\n\n<h4>Example</h4>\nThis example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\nand redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\n     var stage = new createjs.Stage(\"canvasElementId\");\n     var image = new createjs.Bitmap(\"imagePath.png\");\n     stage.addChild(image);\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         image.x += 10;\n         stage.update();\n     }",
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvas",
                    "description": "A canvas object that the Stage will render to, or the string id\nof a canvas object in the current document.",
                    "type": "HTMLCanvasElement | String | Object"
                }
            ]
        },
        "Graphics.Bitmap": {
            "name": "Graphics.Bitmap",
            "shortname": "Bitmap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8710,
            "description": "A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\nHTML element, or a string.\n\n<h4>Example</h4>\n\n     var bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n\n<strong>Notes:</strong>\n<ol>\n    <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n     will be displayed.</li>\n    <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n    the Bitmap can be cached.</li>\n    <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n    happens in all browsers except recent Firefox builds.</li>\n    <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n    methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n    `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n</ol>",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageOrUri",
                    "description": "The source object or URI to an image to\ndisplay. This can be either an Image, Canvas, or Video object, or a string URI to an image file to load and use.\nIf it is a URI, a new Image object will be constructed and assigned to the .image property.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | String"
                }
            ]
        },
        "Graphics.Sprite": {
            "name": "Graphics.Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8900,
            "description": "Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\nimages (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\nimages could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\nplay frames as an animation, and even sequence animations together.\n\nSee the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n\n<h4>Example</h4>\n\n     var instance = new createjs.Sprite(spriteSheet);\n     instance.gotoAndStop(\"frameName\");\n\nUntil {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\nonly the first defined frame defined in the sprite sheet will be displayed.",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "The SpriteSheet instance to play back. This includes the source image(s), frame\ndimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.",
                    "type": "SpriteSheet"
                },
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation to play initially.",
                    "type": "String|Number",
                    "optional": true
                }
            ]
        },
        "Graphics.Shape": {
            "name": "Graphics.Shape",
            "shortname": "Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9349,
            "description": "A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\ninstance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\ninstances to display the same vector graphics with different positions or transforms.\n\nIf the vector art will not\nchange between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\nrendering cost.\n\n<h4>Example</h4>\n\n     var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n     var shape = new createjs.Shape(graphics);\n\n     //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n     var shape = new createjs.Shape();\n     shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "graphics",
                    "description": "Optional. The graphics instance to display. If null, a new Graphics instance will be created.",
                    "type": "Graphics"
                }
            ]
        },
        "Graphics.Text": {
            "name": "Graphics.Text",
            "shortname": "Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9456,
            "description": "Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\nlineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\ntext above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\nmethod, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n\n<b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\nmultiple font styles, you will need to create multiple text instances, and position them manually.\n\n<h4>Example</h4>\n\n     var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n     text.x = 100;\n     text.textBaseline = \"alphabetic\";\n\nCreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\nbefore it can be displayed.\n\n<strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\nbrowsers will render Text exactly the same.",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "text",
                    "description": "The text to display.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "font",
                    "description": "The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n36px Arial\").",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "color",
                    "description": "The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\"#F00\", \"red\", or \"#FF0000\").",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "Graphics.BitmapText": {
            "name": "Graphics.BitmapText",
            "shortname": "BitmapText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9849,
            "description": "Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported\nusing new line characters, but automatic wrapping is not supported. See the \n{{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\nproperty for more information on defining glyphs.\n\n<strong>Important:</strong> BitmapText extends Container, but is not designed to be used as one.\nAs such, methods like addChild and removeChild are disabled.",
            "extends": "DisplayObject",
            "params": [
                {
                    "name": "text",
                    "description": "The text to display.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"\""
                },
                {
                    "name": "spriteSheet",
                    "description": "The spritesheet that defines the character glyphs.",
                    "type": "SpriteSheet",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1
        },
        "Graphics.MovieClip": {
            "name": "Graphics.MovieClip",
            "shortname": "MovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10169,
            "description": "The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\nyou to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\ncomplexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\nin the main EaselJS library.\n\nCurrently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\nbeen made to support time-based timelines in the future.\n\n<h4>Example</h4>\nThis example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\nthe animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n\n     var stage = new createjs.Stage(\"canvas\");\n     createjs.Ticker.addEventListener(\"tick\", stage);\n\n     var mc = new createjs.MovieClip(null, 0, true, {start:20});\n     stage.addChild(mc);\n\n     var child1 = new createjs.Shape(\n         new createjs.Graphics().beginFill(\"#999999\")\n             .drawCircle(30,30,30));\n     var child2 = new createjs.Shape(\n         new createjs.Graphics().beginFill(\"#5a9cfb\")\n             .drawCircle(30,30,30));\n\n     mc.timeline.addTween(\n         createjs.Tween.get(child1)\n             .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n     mc.timeline.addTween(\n         createjs.Tween.get(child2)\n             .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n\n     mc.gotoAndPlay(\"start\");\n\nIt is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\nimmediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n<code>tween.set()</code> method to affect properties will likely not provide the desired result.",
            "mainName": "MovieClip",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mode",
                    "description": "Initial value for the mode property. One of {{#crossLink \"MovieClip/INDEPENDENT:property\"}}{{/crossLink}},\n{{#crossLink \"MovieClip/SINGLE_FRAME:property\"}}{{/crossLink}}, or {{#crossLink \"MovieClip/SYNCHED:property\"}}{{/crossLink}}.\nThe default is {{#crossLink \"MovieClip/INDEPENDENT:property\"}}{{/crossLink}}.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "independent"
                },
                {
                    "name": "startPosition",
                    "description": "Initial value for the {{#crossLink \"MovieClip/startPosition:property\"}}{{/crossLink}}\nproperty.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "loop",
                    "description": "Initial value for the {{#crossLink \"MovieClip/loop:property\"}}{{/crossLink}}\nproperty. The default is `true`.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "labels",
                    "description": "A hash of labels to pass to the {{#crossLink \"MovieClip/timeline:property\"}}{{/crossLink}}\ninstance associated with this MovieClip. Labels only need to be passed if they need to be used.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null"
                }
            ]
        },
        "Graphics.MovieClipPlugin": {
            "name": "Graphics.MovieClipPlugin",
            "shortname": "MovieClipPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10773,
            "description": "This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\nproperty from tweening.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1
        },
        "Graphics.SpriteSheetUtils": {
            "name": "Graphics.SpriteSheetUtils",
            "shortname": "SpriteSheetUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10847,
            "description": "The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\nA sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\nexample, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\nby 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.",
            "static": 1
        },
        "Graphics.SpriteSheetBuilder": {
            "name": "Graphics.SpriteSheetBuilder",
            "shortname": "SpriteSheetBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11047,
            "description": "The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\nfrom any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\nrender them at run time as SpriteSheets for better performance.\n\nSpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\nwithout locking the UI.\n\nNote that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\nsized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\nor {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "framerate",
                    "description": "The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n{{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "Graphics.DOMElement": {
            "name": "Graphics.DOMElement",
            "shortname": "DOMElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11573,
            "description": "<b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n\nA DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\nwithin the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\nnot rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\ndrawn in front of or behind the canvas).\n\nThe position of a DOMElement is relative to their parent node in the DOM. It is recommended that\nthe DOM Object be added to a div that also contains the canvas so that they share the same position\non the page.\n\nDOMElement is useful for positioning HTML elements over top of canvas content, and for elements\nthat you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\ncontent.\n\n<h4>Mouse Interaction</h4>\n\nDOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\nevents or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\nthe htmlElement (note, this does not support EventDispatcher)\n\n     var domElement = new createjs.DOMElement(htmlElement);\n     domElement.htmlElement.onclick = function() {\n         console.log(\"clicked\");\n     }",
            "extends": "DisplayObject",
            "is_constructor": 1,
            "params": [
                {
                    "name": "htmlElement",
                    "description": "A reference or id for the DOM element to manage.",
                    "type": "HTMLElement"
                }
            ]
        },
        "Graphics.Filter": {
            "name": "Graphics.Filter",
            "shortname": "Filter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11818,
            "description": "Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\nthe {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n{{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n\n<h4>Example</h4>\n\n     myInstance.filters = [\n         new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n         new createjs.BlurFilter(5, 5, 10)\n     ];\n     myInstance.cache(0,0, 100, 100);\n\nNote that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\nmargins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\nwill cause an object to feather outwards, resulting in a margin around the shape.\n\n<h4>EaselJS Filters</h4>\nEaselJS comes with a number of pre-built filters:\n<ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n     <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n     <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n     <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n     <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n</ul>",
            "is_constructor": 1
        },
        "Graphics.BlurFilter": {
            "name": "Graphics.BlurFilter",
            "shortname": "BlurFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11946,
            "description": "Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\nset higher than 1.\n\n<h4>Example</h4>\nThis example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\nmethod to account for the spread that the blur causes.\n\n     var shape = new createjs.Shape().set({x:100,y:100});\n     shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\n     var blurFilter = new createjs.BlurFilter(5, 5, 1);\n     shape.filters = [blurFilter];\n     var bounds = blurFilter.getBounds();\n\n     shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "blurX",
                    "description": "The horizontal blur radius in pixels.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "blurY",
                    "description": "The vertical blur radius in pixels.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "quality",
                    "description": "The number of blur iterations.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ]
        },
        "Graphics.AlphaMapFilter": {
            "name": "Graphics.AlphaMapFilter",
            "shortname": "AlphaMapFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12270,
            "description": "Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\nbe copied from the red channel of the map, and the RGB channels will be copied from the target.\n\nGenerally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\nbetter performance.\n\n<h4>Example</h4>\nThis example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n\n      var box = new createjs.Shape();\n      box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n      box.graphics.drawRect(0, 0, 100, 100);\n      box.cache(0, 0, 100, 100);\n\n      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n      bmp.filters = [\n          new createjs.AlphaMapFilter(box.cacheCanvas)\n      ];\n      bmp.cache(0, 0, 100, 100);\n      stage.addChild(bmp);\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "alphaMap",
                    "description": "The greyscale image (or canvas) to use as the alpha value for the\nresult. This should be exactly the same dimensions as the target.",
                    "type": "HTMLImageElement|HTMLCanvasElement"
                }
            ]
        },
        "Graphics.AlphaMaskFilter": {
            "name": "Graphics.AlphaMaskFilter",
            "shortname": "AlphaMaskFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12410,
            "description": "Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\nbe derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\napply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\nalpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\n<b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\n<h4>Example</h4>\nThis example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n\n     var box = new createjs.Shape();\n     box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n     box.graphics.drawRect(0, 0, 100, 100);\n     box.cache(0, 0, 100, 100);\n\n     var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n     bmp.filters = [\n         new createjs.AlphaMaskFilter(box.cacheCanvas)\n     ];\n     bmp.cache(0, 0, 100, 100);\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.",
            "extends": "Filter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mask",
                    "description": "",
                    "type": "HTMLImageElement|HTMLCanvasElement"
                }
            ]
        },
        "Graphics.ColorFilter": {
            "name": "Graphics.ColorFilter",
            "shortname": "ColorFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12516,
            "description": "Applies a color transform to DisplayObjects.\n\n<h4>Example</h4>\nThis example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\nto 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n\n     var shape = new createjs.Shape().set({x:100,y:100});\n     shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\n     shape.filters = [\n         new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n     ];\n     shape.cache(-50, -50, 100, 100);\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.",
            "params": [
                {
                    "name": "redMultiplier",
                    "description": "The amount to multiply against the red channel. This is a range between 0 and 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "greenMultiplier",
                    "description": "The amount to multiply against the green channel. This is a range between 0 and 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "blueMultiplier",
                    "description": "The amount to multiply against the blue channel. This is a range between 0 and 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "alphaMultiplier",
                    "description": "The amount to multiply against the alpha channel. This is a range between 0 and 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "redOffset",
                    "description": "The amount to add to the red channel after it has been multiplied. This is a range\nbetween -255 and 255.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "greenOffset",
                    "description": "The amount to add to the green channel after it has been multiplied. This is a range\nbetween -255 and 255.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "blueOffset",
                    "description": "The amount to add to the blue channel after it has been multiplied. This is a range\nbetween -255 and 255.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "alphaOffset",
                    "description": "The amount to add to the alpha channel after it has been multiplied. This is a range\nbetween -255 and 255.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "is_constructor": 1,
            "extends": "Filter"
        },
        "Graphics.ColorMatrix": {
            "name": "Graphics.ColorMatrix",
            "shortname": "ColorMatrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12655,
            "description": "Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\nMost methods return the instance to facilitate chained calls.\n\n<h4>Example</h4>\n\n     myColorMatrix.adjustHue(20).adjustBrightness(50);\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\nfor an example of how to use ColorMatrix to change a DisplayObject's color.",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "Graphics.ColorMatrixFilter": {
            "name": "Graphics.ColorMatrixFilter",
            "shortname": "ColorMatrixFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13013,
            "description": "Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n{{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\nconsider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n\n<h4>Example</h4>\nThis example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n\n     var shape = new createjs.Shape().set({x:100,y:100});\n     shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\n     var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n     shape.filters = [\n         new createjs.ColorMatrixFilter(matrix)\n     ];\n\n     shape.cache(-50, -50, 100, 100);\n\nSee {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.",
            "is_constructor": 1,
            "extends": "Filter",
            "params": [
                {
                    "name": "matrix",
                    "description": "A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\nclass.",
                    "type": "Array | ColorMatrix"
                }
            ]
        },
        "Graphics.Touch": {
            "name": "Graphics.Touch",
            "shortname": "Touch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13106,
            "description": "Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\nmodern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n\nEnsure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\nto check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n\n<h4>Example</h4>\n\n     var stage = new createjs.Stage(\"canvasId\");\n     createjs.Touch.enable(stage);\n\n<strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n\n     createjs.Touch.disable(stage);",
            "static": 1
        },
        "Graphics.EaselJS": {
            "name": "Graphics.EaselJS",
            "shortname": "EaselJS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13390,
            "description": "Static class holding library specific information such as the version and buildDate of\nthe library."
        },
        "Graphics.SpriteContainer": {
            "name": "Graphics.SpriteContainer",
            "shortname": "SpriteContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 40,
            "description": "A SpriteContainer is a nestable display list that enables aggressively optimized rendering of bitmap content.\nIn order to accomplish these optimizations, SpriteContainer enforces a few restrictions on its content.\n\nRestrictions:\n    - only Sprite, SpriteContainer, BitmapText and DOMElement are allowed to be added as children.\n    - a spriteSheet MUST be either be passed into the constructor or defined on the first child added.\n    - all children (with the exception of DOMElement) MUST use the same spriteSheet.\n\n<h4>Example</h4>\n\n     var data = {\n         images: [\"sprites.jpg\"],\n         frames: {width:50, height:50},\n         animations: {run:[0,4], jump:[5,8,\"run\"]}\n     };\n     var spriteSheet = new createjs.SpriteSheet(data);\n     var container = new createjs.SpriteContainer(spriteSheet);\n     container.addChild(spriteInstance, spriteInstance2);\n     container.x = 100;\n\n<strong>Note:</strong> SpriteContainer is not included in the minified version of EaselJS.",
            "extends": "Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "The spriteSheet to use for this SpriteContainer and its children.",
                    "type": "SpriteSheet",
                    "optional": true
                }
            ]
        },
        "Graphics.SpriteStage": {
            "name": "Graphics.SpriteStage",
            "shortname": "SpriteStage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 210,
            "description": "A sprite stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for an aggressively optimized display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\nmethod is called, it will render its display list to its target canvas. WebGL content is fully compatible with the existing Context2D renderer.\nOn devices or browsers that don't support WebGL, content will automatically be rendered via canvas 2D.\n\nRestrictions:\n    - only Sprite, SpriteContainer, BitmapText, Bitmap and DOMElement are allowed to be added to the display list.\n    - a child being added (with the exception of DOMElement) MUST have an image or spriteSheet defined on it.\n    - a child's image/spriteSheet MUST never change while being on the display list.\n\n<h4>Example</h4>\nThis example creates a sprite stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\nand redraw the stage using {{#crossLink \"SpriteStage/update\"}}{{/crossLink}}.\n\n     var stage = new createjs.SpriteStage(\"canvasElementId\", false, false);\n     stage.updateViewport(800, 600);\n     var image = new createjs.Bitmap(\"imagePath.png\");\n     stage.addChild(image);\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         image.x += 10;\n         stage.update();\n     }\n\n<strong>Note:</strong> SpriteStage is not included in the minified version of EaselJS.",
            "extends": "Stage",
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvas",
                    "description": "A canvas object that the SpriteStage will render to, or the string id\nof a canvas object in the current document.",
                    "type": "HTMLCanvasElement | String | Object"
                },
                {
                    "name": "preserveDrawingBuffer",
                    "description": "If true, the canvas is NOT auto-cleared by WebGL (spec discourages true). Useful if you want to use p.autoClear = false.",
                    "type": "Boolean"
                },
                {
                    "name": "antialias",
                    "description": "Specifies whether or not the browser's WebGL implementation should try to perform antialiasing.",
                    "type": "Boolean"
                }
            ]
        },
        "Graphics.PreloadJS": {
            "name": "Graphics.PreloadJS",
            "shortname": "PreloadJS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 39,
            "description": "Static class holding library specific information such as the version and buildDate of the library."
        },
        "Graphics.ErrorEvent": {
            "name": "Graphics.ErrorEvent",
            "shortname": "ErrorEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 927,
            "description": "A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.",
            "params": [
                {
                    "name": "title",
                    "description": "The error title",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "message",
                    "description": "The error description",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Additional error data",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "Graphics.ProgressEvent": {
            "name": "Graphics.ProgressEvent",
            "shortname": "ProgressEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 980,
            "description": "A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.",
            "params": [
                {
                    "name": "loaded",
                    "description": "The amount that has been loaded. This can be any number relative to the total.",
                    "type": "Number"
                },
                {
                    "name": "total",
                    "description": "The total amount that will load. This will default to 1, so if the `loaded` value is\na percentage (between 0 and 1), it can be omitted.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "todo": [
                "Consider having this event be a \"fileprogress\" event as well"
            ],
            "is_constructor": 1
        },
        "Graphics.DomUtils": {
            "name": "Graphics.DomUtils",
            "shortname": "DomUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 1892,
            "description": "A few utilities for interacting with the dom."
        },
        "Graphics.DataUtils": {
            "name": "Graphics.DataUtils",
            "shortname": "DataUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 1920,
            "description": "A few data utilities for formatting different data types."
        },
        "Graphics.LoadItem": {
            "name": "Graphics.LoadItem",
            "shortname": "LoadItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1040,
            "description": "All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\nit will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\nstring path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n{{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}",
            "is_constructor": 1,
            "since": "0.6.0"
        },
        "Graphics.RequestUtils": {
            "name": "Graphics.RequestUtils",
            "shortname": "RequestUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1236,
            "description": "Utilities that assist with parsing load items, and determining file types, etc."
        },
        "Graphics.AbstractLoader": {
            "name": "Graphics.AbstractLoader",
            "shortname": "AbstractLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1536,
            "description": "The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\nincluding the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "The item to be loaded.",
                    "type": "LoadItem|object|string"
                },
                {
                    "name": "preferXHR",
                    "description": "Determines if the LoadItem should <em>try</em> and load using XHR, or take a\ntag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\nother, so this is a suggested directive.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "type",
                    "description": "The type of loader. Loader types are defined as constants on the AbstractLoader class,\nsuch as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.",
                    "type": "String",
                    "optional": true
                }
            ],
            "extends": "EventDispatcher"
        },
        "Graphics.AbstractMediaLoader": {
            "name": "Graphics.AbstractMediaLoader",
            "shortname": "AbstractMediaLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2266,
            "description": "The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\nhandle HTML media elements, such as Video and Audio.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "preferXHR",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "type",
                    "description": "The type of media to load. Usually \"video\" or \"audio\".",
                    "type": "String"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.AbstractRequest": {
            "name": "Graphics.AbstractRequest",
            "shortname": "AbstractRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2367,
            "description": "A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\nand {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\nhood to get data.",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "LoadItem"
                }
            ],
            "is_constructor": 1
        },
        "Graphics.TagRequest": {
            "name": "Graphics.TagRequest",
            "shortname": "TagRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2414,
            "description": "An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem"
                },
                {
                    "name": "tag",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "srcAttribute",
                    "description": "The tag attribute that specifies the source, such as \"src\", \"href\", etc.",
                    "type": "String"
                }
            ]
        },
        "Graphics.MediaTagRequest": {
            "name": "Graphics.MediaTagRequest",
            "shortname": "MediaTagRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2601,
            "description": "An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem"
                },
                {
                    "name": "tag",
                    "description": "",
                    "type": "HTMLAudioElement|HTMLVideoElement"
                },
                {
                    "name": "srcAttribute",
                    "description": "The tag attribute that specifies the source, such as \"src\", \"href\", etc.",
                    "type": "String"
                }
            ],
            "is_constructor": 1
        },
        "Graphics.XHRRequest": {
            "name": "Graphics.XHRRequest",
            "shortname": "XHRRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2693,
            "description": "A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\nfor cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\nXHR requests load the content as text or binary data, provide progress and consistent completion events, and\ncan be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\ncross-domain loading.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "item",
                    "description": "The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nfor an overview of supported file properties.",
                    "type": "Object"
                }
            ],
            "extends": "AbstractLoader"
        },
        "Graphics.LoadQueue": {
            "name": "Graphics.LoadQueue",
            "shortname": "LoadQueue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4194,
            "description": "The LoadQueue class is the main API for preloading content. LoadQueue is a load manager, which can preload either\na single file, or queue of files.\n\n<b>Creating a Queue</b><br />\nTo use LoadQueue, create a LoadQueue instance. If you want to force tag loading where possible, set the preferXHR\nargument to false.\n\n     var queue = new createjs.LoadQueue(true);\n\n<b>Listening for Events</b><br />\nAdd any listeners you want to the queue. Since PreloadJS 0.3.0, the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}\nlets you add as many listeners as you want for events. You can subscribe to the following events:<ul>\n    <li>{{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}: fired when a queue completes loading all\n    files</li>\n    <li>{{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}: fired when the queue encounters an error with\n    any file.</li>\n    <li>{{#crossLink \"AbstractLoader/progress:event\"}}{{/crossLink}}: Progress for the entire queue has\n    changed.</li>\n    <li>{{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}: A single file has completed loading.</li>\n    <li>{{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}: Progress for a single file has changes. Note\n    that only files loaded with XHR (or possibly by plugins) will fire progress events other than 0 or 100%.</li>\n</ul>\n\n     queue.on(\"fileload\", handleFileLoad, this);\n     queue.on(\"complete\", handleComplete, this);\n\n<b>Adding files and manifests</b><br />\nAdd files you want to load using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or add multiple files at a\ntime using a list or a manifest definition using {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. Files are\nappended to the end of the active queue, so you can use these methods as many times as you like, whenever you\nlike.\n\n     queue.loadFile(\"filePath/file.jpg\");\n     queue.loadFile({id:\"image\", src:\"filePath/file.jpg\"});\n     queue.loadManifest([\"filePath/file.jpg\", {id:\"image\", src:\"filePath/file.jpg\"}]);\n\n     // Use an external manifest\n     queue.loadManifest(\"path/to/manifest.json\");\n     queue.loadManifest({src:\"manifest.json\", type:\"manifest\"});\n\nIf you pass `false` as the `loadNow` parameter, the queue will not kick of the load of the files, but it will not\nstop if it has already been started. Call the {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}} method to begin\na paused queue. Note that a paused queue will automatically resume when new files are added to it with a\n`loadNow` argument of `true`.\n\n     queue.load();\n\n<b>File Types</b><br />\nThe file type of a manifest item is auto-determined by the file extension. The pattern matching in PreloadJS\nshould handle the majority of standard file and url formats, and works with common file extensions. If you have\neither a non-standard file extension, or are serving the file using a proxy script, then you can pass in a\n<code>type</code> property with any manifest item.\n\n     queue.loadFile({src:\"path/to/myFile.mp3x\", type:createjs.AbstractLoader.SOUND});\n\n     // Note that PreloadJS will not read a file extension from the query string\n     queue.loadFile({src:\"http://server.com/proxy?file=image.jpg\", type:createjs.AbstractLoader.IMAGE});\n\nSupported types are defined on the {{#crossLink \"AbstractLoader\"}}{{/crossLink}} class, and include:\n<ul>\n    <li>{{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}}: Raw binary data via XHR</li>\n    <li>{{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}}: CSS files</li>\n    <li>{{#crossLink \"AbstractLoader/IMAGE:property\"}}{{/crossLink}}: Common image formats</li>\n    <li>{{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}}: JavaScript files</li>\n    <li>{{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}}: JSON data</li>\n    <li>{{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}}: JSON files cross-domain</li>\n    <li>{{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}: A list of files to load in JSON format, see\n    {{#crossLink \"AbstractLoader/loadManifest\"}}{{/crossLink}}</li>\n    <li>{{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}: Audio file formats</li>\n    <li>{{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}: JSON SpriteSheet definitions. This\n    will also load sub-images, and provide a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance.</li>\n    <li>{{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}}: SVG files</li>\n    <li>{{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}}: Text files - XHR only</li>\n    <li>{{#crossLink \"AbstractLoader/VIDEO:property\"}}{{/crossLink}}: Video objects</li>\n    <li>{{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}}: XML data</li>\n</ul>\n\n<em>Note: Loader types used to be defined on LoadQueue, but have been moved to AbstractLoader for better\nportability of loader classes, which can be used individually now. The properties on LoadQueue still exist, but\nare deprecated.</em>\n\n<b>Handling Results</b><br />\nWhen a file is finished downloading, a {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event is\ndispatched. In an example above, there is an event listener snippet for fileload. Loaded files are usually a\nformatted object that can be used immediately, including:\n<ul>\n    <li>Binary: The binary loaded result</li>\n    <li>CSS: A &lt;link /&gt; tag</li>\n    <li>Image: An &lt;img /&gt; tag</li>\n    <li>JavaScript: A &lt;script /&gt; tag</li>\n    <li>JSON/JSONP: A formatted JavaScript Object</li>\n    <li>Manifest: A JavaScript object.\n    <li>Sound: An &lt;audio /&gt; tag</a>\n    <li>SpriteSheet: A {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance, containing loaded images.\n    <li>SVG: An &lt;object /&gt; tag</li>\n    <li>Text: Raw text</li>\n    <li>Video: A Video DOM node</li>\n    <li>XML: An XML DOM node</li>\n</ul>\n\n     function handleFileLoad(event) {\n         var item = event.item; // A reference to the item that was passed in to the LoadQueue\n         var type = item.type;\n\n         // Add any images to the page body.\n         if (type == createjs.LoadQueue.IMAGE) {\n             document.body.appendChild(event.result);\n         }\n     }\n\nAt any time after the file has been loaded (usually after the queue has completed), any result can be looked up\nvia its \"id\" using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}. If no id was provided, then the\n\"src\" or file path can be used instead, including the `path` defined by a manifest, but <strong>not including</strong>\na base path defined on the LoadQueue. It is recommended to always pass an id if you want to look up content.\n\n     var image = queue.getResult(\"image\");\n     document.body.appendChild(image);\n\nRaw loaded content can be accessed using the <code>rawResult</code> property of the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\nevent, or can be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}, passing `true` as the 2nd\nargument. This is only applicable for content that has been parsed for the browser, specifically: JavaScript,\nCSS, XML, SVG, and JSON objects, or anything loaded with XHR.\n\n     var image = queue.getResult(\"image\", true); // load the binary image data loaded with XHR.\n\n<b>Plugins</b><br />\nLoadQueue has a simple plugin architecture to help process and preload content. For example, to preload audio,\nmake sure to install the <a href=\"http://soundjs.com\">SoundJS</a> Sound class, which will help load HTML audio,\nFlash audio, and WebAudio files. This should be installed <strong>before</strong> loading any audio files.\n\n     queue.installPlugin(createjs.Sound);\n\n<h4>Known Browser Issues</h4>\n<ul>\n    <li>Browsers without audio support can not load audio files.</li>\n    <li>Safari on Mac OS X can only play HTML audio if QuickTime is installed</li>\n    <li>HTML Audio tags will only download until their <code>canPlayThrough</code> event is fired. Browsers other\n    than Chrome will continue to download in the background.</li>\n    <li>When loading scripts using tags, they are automatically added to the document.</li>\n    <li>Scripts loaded via XHR may not be properly inspectable with browser tools.</li>\n    <li>IE6 and IE7 (and some other browsers) may not be able to load XML, Text, or JSON, since they require\n    XHR to work.</li>\n    <li>Content loaded via tags will not show progress, and will continue to download in the background when\n    canceled, although no events will be dispatched.</li>\n</ul>",
            "params": [
                {
                    "name": "preferXHR",
                    "description": "Determines whether the preload instance will favor loading with XHR (XML HTTP\nRequests), or HTML tags. When this is `false`, the queue will use tag loading when possible, and fall back on XHR\nwhen necessary.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "basePath",
                    "description": "A path that will be prepended on to the source parameter of all items in the queue\nbefore they are loaded.  Sources beginning with a protocol such as `http://` or a relative path such as `../`\nwill not receive a base path.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"\""
                },
                {
                    "name": "crossOrigin",
                    "description": "An optional flag to support images loaded from a CORS-enabled server. To\nuse it, set this value to `true`, which will default the crossOrigin property on images to \"Anonymous\". Any\nstring value will be passed through, but only \"\" and \"Anonymous\" are recommended. <strong>Note: The crossOrigin\nparameter is deprecated. Use LoadItem.crossOrigin instead</strong>",
                    "type": "String|Boolean",
                    "optional": true,
                    "optdefault": "\"\""
                }
            ],
            "is_constructor": 1,
            "extends": "AbstractLoader"
        },
        "Graphics.TextLoader": {
            "name": "Graphics.TextLoader",
            "shortname": "TextLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6048,
            "description": "A loader for Text files.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.BinaryLoader": {
            "name": "Graphics.BinaryLoader",
            "shortname": "BinaryLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6089,
            "description": "A loader for binary files. This is useful for loading web audio, or content that requires an ArrayBuffer.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.CSSLoader": {
            "name": "Graphics.CSSLoader",
            "shortname": "CSSLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6142,
            "description": "A loader for CSS files.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "preferXHR",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.ImageLoader": {
            "name": "Graphics.ImageLoader",
            "shortname": "ImageLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6226,
            "description": "A loader for image files.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "preferXHR",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.JavaScriptLoader": {
            "name": "Graphics.JavaScriptLoader",
            "shortname": "JavaScriptLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6384,
            "description": "A loader for JavaScript files.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "preferXHR",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.JSONLoader": {
            "name": "Graphics.JSONLoader",
            "shortname": "JSONLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6449,
            "description": "A loader for JSON files. To load JSON cross-domain, use JSONP and the {{#crossLink \"JSONPLoader\"}}{{/crossLink}}\ninstead. To load JSON-formatted manifests, use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to\nload EaselJS SpriteSheets, use {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.JSONPLoader": {
            "name": "Graphics.JSONPLoader",
            "shortname": "JSONPLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6516,
            "description": "A loader for JSONP files, which are JSON-formatted text files, wrapped in a callback. To load regular JSON\nwithout a callback use the {{#crossLink \"JSONLoader\"}}{{/crossLink}} instead. To load JSON-formatted manifests,\nuse {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to load EaselJS SpriteSheets, use\n{{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n\nJSONP is a format that provides a solution for loading JSON files cross-domain <em>without</em> requiring CORS.\nJSONP files are loaded as JavaScript, and the \"callback\" is executed once they are loaded. The callback in the\nJSONP must match the callback passed to the loadItem.\n\n<h4>Example JSONP</h4>\n\n\t\tcallbackName({\n\t\t\t\"name\": \"value\",\n\t \t\t\"num\": 3,\n\t\t\t\"obj\": { \"bool\":true }\n\t\t});\n\n<h4>Example</h4>\n\n\t\tvar loadItem = {id:\"json\", type:\"jsonp\", src:\"http://server.com/text.json\", callback:\"callbackName\"}\n\t\tvar queue = new createjs.LoadQueue();\n\t\tqueue.on(\"complete\", handleComplete);\n\t\tqueue.loadItem(loadItem);\n\n\t\tfunction handleComplete(event) }\n\t\t\tvar json = queue.getResult(\"json\");\n\t\t\tconsole.log(json.obj.bool); // true\n\t\t}\n\nNote that JSONP files loaded concurrently require a <em>unique</em> callback. To ensure JSONP files are loaded\nin order, either use the {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} method (set to 1),\nor set {{#crossLink \"LoadItem/maintainOrder:property\"}}{{/crossLink}} on items with the same callback.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.ManifestLoader": {
            "name": "Graphics.ManifestLoader",
            "shortname": "ManifestLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6667,
            "description": "A loader for JSON manifests. Items inside the manifest are loaded before the loader completes. To load manifests\nusing JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}} as part of the\n{{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\nThe list of files in the manifest must be defined on the top-level JSON object in a `manifest` property. This\nexample shows a sample manifest definition, as well as how to to include a sub-manifest.\n\n\t\t{\n\t\t\t\"path\": \"assets/\",\n\t \t    \"manifest\": [\n\t\t\t\t\"image.png\",\n\t\t\t\t{\"src\": \"image2.png\", \"id\":\"image2\"},\n\t\t\t\t{\"src\": \"sub-manifest.json\", \"type\":\"manifest\", \"callback\":\"jsonCallback\"}\n\t \t    ]\n\t \t}\n\nWhen a ManifestLoader has completed loading, the parent loader (usually a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\nbut could also be another ManifestLoader) will inherit all the loaded items, so you can access them directly.\n\nNote that the {{#crossLink \"JSONLoader\"}}{{/crossLink}} and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are\nhigher priority loaders, so manifests <strong>must</strong> set the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n{{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property to {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.SoundLoader": {
            "name": "Graphics.SoundLoader",
            "shortname": "SoundLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3227,
            "description": "A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\nshould be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\nexternal framework that handles audio playback. To load content that can be played by WebAudio, use the\n{{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "preferXHR",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "extends": "AbstractMediaLoader",
            "is_constructor": 1
        },
        "Graphics.VideoLoader": {
            "name": "Graphics.VideoLoader",
            "shortname": "VideoLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6936,
            "description": "A loader for video files.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "preferXHR",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "extends": "AbstractMediaLoader",
            "is_constructor": 1
        },
        "Graphics.SpriteSheetLoader": {
            "name": "Graphics.SpriteSheetLoader",
            "shortname": "SpriteSheetLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6997,
            "description": "A loader for EaselJS SpriteSheets. Images inside the spritesheet definition are loaded before the loader\ncompletes. To load SpriteSheets using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\nas part of the {{#crossLink \"LoadItem\"}}{{/crossLink}}. Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}}\nand {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are higher priority loaders, so SpriteSheets <strong>must</strong>\nset the {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property\nto {{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}.\n\nThe {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/crossOrigin:property\"}}{{/crossLink}} as well\nas the {{#crossLink \"LoadQueue's\"}}{{/crossLink}} `basePath` argument and {{#crossLink \"LoadQueue/_preferXHR\"}}{{/crossLink}}\nproperty supplied to the {{#crossLink \"LoadQueue\"}}{{/crossLink}} are passed on to the sub-manifest that loads\nthe SpriteSheet images.\n\nNote that the SpriteSheet JSON does not respect the {{#crossLink \"LoadQueue/_preferXHR:property\"}}{{/crossLink}}\nproperty, which should instead be determined by the presence of a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\nproperty on the SpriteSheet load item. This is because the JSON loaded will have a different format depending on\nif it is loaded as JSON, so just changing `preferXHR` is not enough to change how it is loaded.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.SVGLoader": {
            "name": "Graphics.SVGLoader",
            "shortname": "SVGLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7175,
            "description": "A loader for SVG files.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "preferXHR",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.XMLLoader": {
            "name": "Graphics.XMLLoader",
            "shortname": "XMLLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7256,
            "description": "A loader for CSS files.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "",
                    "type": "LoadItem|Object"
                }
            ],
            "extends": "AbstractLoader",
            "is_constructor": 1
        },
        "Graphics.CordovaAudioLoader": {
            "name": "Graphics.CordovaAudioLoader",
            "shortname": "CordovaAudioLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 39,
            "description": "Loader provides a mechanism to preload Cordova audio content via PreloadJS or internally. Instances are returned to\nthe preloader, and the load method is called when the asset needs to be requested.\nCurrently files are assumed to be local and no loading actually takes place.  This class exists to more easily support\nthe existing architecture.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "The item to be loaded",
                    "type": "String"
                }
            ],
            "extends": "XHRRequest",
            "access": "protected",
            "tagname": ""
        },
        "Graphics.CordovaAudioSoundInstance": {
            "name": "Graphics.CordovaAudioSoundInstance",
            "shortname": "CordovaAudioSoundInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 137,
            "description": "CordovaAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n{{#crossLink \"CordovaAudioPlugin\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "src",
                    "description": "The path to and file name of the sound.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "Audio sprite property used to apply an offset, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Audio sprite property used to set the time the clip plays for, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "playbackResource",
                    "description": "Any resource needed by plugin to support audio playback.",
                    "type": "Object"
                }
            ],
            "extends": "AbstractSoundInstance",
            "is_constructor": 1
        },
        "Graphics.CordovaAudioPlugin": {
            "name": "Graphics.CordovaAudioPlugin",
            "shortname": "CordovaAudioPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 397,
            "description": "Play sounds using Cordova Media plugin, which will work with a Cordova app and tools that utilize Cordova such as PhoneGap or Ionic.\nThis plugin is not used by default, and must be registered manually in {{#crossLink \"Sound\"}}{{/crossLink}}\nusing the {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\nThis plugin is recommended when building a Cordova based app, but is not required.\n\n<b>NOTE the <a href=\"http://plugins.cordova.io/#/package/org.apache.cordova.media\" target=\"_blank\">Cordova Media plugin</a> is required</b>\n\n\t\tcordova plugin add org.apache.cordova.media\n\n<h4>Known Issues</h4>\n<b>Audio Position</b>\n<ul>Audio position is calculated asynchronusly by Media.  The SoundJS solution to this problem is two-fold:\n<li>Provide {{#crossLink \"CordovaAudioSoundInstance/getCurrentPosition\"}}{{/crossLink}} that maps directly to media.getCurrentPosition.</li>\n<li>Provide a best guess position based on elapsed time since playback started, which is synchronized with actual position when the audio is paused or stopped.\nTesting showed this to be fairly reliable within 200ms.</li></ul>\n<b>Cordova Media Docs</b>\n<ul><li>See the <a href=\"http://plugins.cordova.io/#/package/org.apache.cordova.media\" target=\"_blank\">Cordova Media Docs</a> for various known OS issues.</li></ul>\n<br />",
            "extends": "AbstractPlugin",
            "is_constructor": 1
        },
        "Graphics.FlashAudioLoader": {
            "name": "Graphics.FlashAudioLoader",
            "shortname": "FlashAudioLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 821,
            "description": "Loader provides a mechanism to preload Flash content via PreloadJS or internally. Instances are returned to\nthe preloader, and the load method is called when the asset needs to be requested.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "The item to be loaded",
                    "type": "String"
                },
                {
                    "name": "flash",
                    "description": "The flash instance that will do the preloading.",
                    "type": "Object"
                }
            ],
            "extends": "AbstractLoader",
            "access": "protected",
            "tagname": ""
        },
        "Graphics.FlashAudioSoundInstance": {
            "name": "Graphics.FlashAudioSoundInstance",
            "shortname": "FlashAudioSoundInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 951,
            "description": "FlashAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n{{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\nNOTE audio control is shuttled to a flash player instance via the flash reference.",
            "params": [
                {
                    "name": "src",
                    "description": "The path to and file name of the sound.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "Audio sprite property used to apply an offset, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Audio sprite property used to set the time the clip plays for, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "playbackResource",
                    "description": "Any resource needed by plugin to support audio playback.",
                    "type": "Object"
                }
            ],
            "extends": "AbstractSoundInstance",
            "is_constructor": 1
        },
        "Graphics.FlashAudioPlugin": {
            "name": "Graphics.FlashAudioPlugin",
            "shortname": "FlashAudioPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1152,
            "description": "Play sounds using a Flash instance. This plugin is not used by default, and must be registered manually in\n{{#crossLink \"Sound\"}}{{/crossLink}} using the {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method. This\nplugin is recommended to be included if sound support is required in older browsers such as IE8.\n\nThis plugin requires FlashAudioPlugin.swf and swfObject.js, which is compiled\ninto the minified FlashAudioPlugin-X.X.X.min.js file. You must ensure that {{#crossLink \"FlashAudioPlugin/swfPath:property\"}}{{/crossLink}}\nis set when using this plugin, so that the script can find the swf.\n\n<h4>Example</h4>\n\n     createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n     createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n     // Adds FlashAudioPlugin as a fallback if WebAudio and HTMLAudio do not work.\n\nNote that the SWF is embedded into a container DIV (with an id and classname of \"SoundJSFlashContainer\"), and\nwill have an id of \"flashAudioContainer\". The container DIV is positioned 1 pixel off-screen to the left to avoid\nshowing the 1x1 pixel white square.\n\n<h4>Known Browser and OS issues for Flash Audio</h4>\n<b>All browsers</b><br />\n<ul><li> There can be a delay in flash player starting playback of audio.  This has been most noticeable in Firefox.\nUnfortunely this is an issue with the flash player and the browser and therefore cannot be addressed by SoundJS.</li></ul>",
            "extends": "AbstractPlugin",
            "is_constructor": 1
        },
        "Graphics.SoundJS": {
            "name": "Graphics.SoundJS",
            "shortname": "SoundJS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 38,
            "description": "Static class holding library specific information such as the version and buildDate of the library.\nThe SoundJS class has been renamed {{#crossLink \"Sound\"}}{{/crossLink}}.  Please see {{#crossLink \"Sound\"}}{{/crossLink}}\nfor information on using sound."
        },
        "Graphics.AudioSprite": {
            "name": "Graphics.AudioSprite",
            "shortname": "AudioSprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3293,
            "description": "<strong>Note: AudioSprite is not a class, but its usage is easily lost in the documentation, so it has been called\nout here for quick reference.</strong>\n\nAudio sprites are much like CSS sprites or image sprite sheets: multiple audio assets grouped into a single file.\nAudio sprites work around limitations in certain browsers, where only a single sound can be loaded and played at a\ntime. We recommend at least 300ms of silence between audio clips to deal with HTML audio tag inaccuracy, and to prevent\naccidentally playing bits of the neighbouring clips.\n\n<strong>Benefits of Audio Sprites:</strong>\n<ul>\n    <li>More robust support for older browsers and devices that only allow a single audio instance, such as iOS 5.</li>\n    <li>They provide a work around for the Internet Explorer 9 audio tag limit, which restricts how many different\n    sounds that could be loaded at once.</li>\n    <li>Faster loading by only requiring a single network request for several sounds, especially on mobile devices\nwhere the network round trip for each file can add significant latency.</li>\n</ul>\n\n<strong>Drawbacks of Audio Sprites</strong>\n<ul>\n    <li>No guarantee of smooth looping when using HTML or Flash audio. If you have a track that needs to loop\n\t\tsmoothly and you are supporting non-web audio browsers, do not use audio sprites for that sound if you can avoid\n\t\tit.</li>\n    <li>No guarantee that HTML audio will play back immediately, especially the first time. In some browsers\n    (Chrome!), HTML audio will only load enough to play through at the current download speed – so we rely on the\n    `canplaythrough` event to determine if the audio is loaded. Since audio sprites must jump ahead to play specific\n    sounds, the audio may not yet have downloaded fully.</li>\n    <li>Audio sprites share the same core source, so if you have a sprite with 5 sounds and are limited to 2\n\t\tconcurrently playing instances, you can only play 2 of the sounds at the same time.</li>\n</ul>\n\n<h4>Example</h4>\n\n\t\tcreatejs.Sound.initializeDefaultPlugins();\n\t\tvar assetsPath = \"./assets/\";\n\t\tvar sounds = [{\n\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n\t\t\t\taudioSprite: [\n\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n\t\t\t\t]}\n\t\t\t}\n\t\t];\n\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n\t\t// after load is complete\n\t\tcreatejs.Sound.play(\"sound2\");\n\nYou can also create audio sprites on the fly by setting the startTime and duration when creating an new AbstractSoundInstance.\n\n\t\tcreatejs.Sound.play(\"MyAudioSprite\", {startTime: 1000, duration: 400});\n\nThe excellent CreateJS community has created a tool to create audio sprites, available at\n<a href=\"https://github.com/tonistiigi/audiosprite\" target=\"_blank\">https://github.com/tonistiigi/audiosprite</a>,\nas well as a <a href=\"http://jsfiddle.net/bharat_battu/g8fFP/12/\" target=\"_blank\">jsfiddle</a> to convert the output\nto SoundJS format.",
            "since": "0.6.0"
        },
        "Graphics.PlayPropsConfig": {
            "name": "Graphics.PlayPropsConfig",
            "shortname": "PlayPropsConfig",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3364,
            "description": "A class to store the optional play properties passed in {{#crossLink \"Sound/play\"}}{{/crossLink}} and\n{{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} calls.\n\nOptional Play Properties Include:\n<ul>\n<li>interrupt - How to interrupt any currently playing instances of audio with the same source,\nif the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\nconstants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.</li>\n<li>delay - The amount of time to delay the start of audio playback, in milliseconds.</li>\n<li>offset - The offset from the start of the audio to begin playback, in milliseconds.</li>\n<li>loop - How many times the audio loops when it reaches the end of playback. The default is 0 (no\nloops), and -1 can be used for infinite playback.</li>\n<li>volume - The volume of the sound, between 0 and 1. Note that the master volume is applied\nagainst the individual volume.</li>\n<li>pan - The left-right pan of the sound (if supported), between -1 (left) and 1 (right).</li>\n<li>startTime - To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.</li>\n<li>duration - To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.</li>\n</ul>\n\n<h4>Example</h4>\n\n\tvar ppc = new createjs.PlayPropsConfig().set({interrupt: createjs.Sound.INTERRUPT_ANY, loop: -1, volume: 0.5})\n\tcreatejs.Sound.play(\"mySound\", ppc);\n\tmySoundInstance.play(ppc);",
            "is_constructor": 1,
            "since": "0.6.1"
        },
        "Graphics.Sound": {
            "name": "Graphics.Sound",
            "shortname": "Sound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3525,
            "description": "The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\nAll Sound APIs on this class are static.\n\n<b>Registering and Preloading</b><br />\nBefore you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\nor register multiple sounds using {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}. If you don't register a\nsound prior to attempting to play it using {{#crossLink \"Sound/play\"}}{{/crossLink}} or create it using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}},\nthe sound source will be automatically registered but playback will fail as the source will not be ready. If you use\n<a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>, registration is handled for you when the sound is\npreloaded. It is recommended to preload sounds either internally using the register functions or externally using\nPreloadJS so they are ready when you want to use them.\n\n<b>Playback</b><br />\nTo play a sound once it's been registered and preloaded, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\nThis method returns a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\nPlease see the {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n\n<b>Plugins</b><br />\nBy default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\nare used (when available), although developers can change plugin priority or add new plugins (such as the\nprovided {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}). Please see the {{#crossLink \"Sound\"}}{{/crossLink}} API\nmethods for more on the playback and plugin APIs. To install plugins, or specify a different plugin order, see\n{{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n     createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n     createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.FlashAudioPlugin]);\n     createjs.Sound.alternateExtensions = [\"mp3\"];\n     createjs.Sound.on(\"fileload\", this.loadHandler, this);\n     createjs.Sound.registerSound(\"path/to/mySound.ogg\", \"sound\");\n     function loadHandler(event) {\n         // This is fired for each sound that is registered.\n         var instance = createjs.Sound.play(\"sound\");  // play using id.  Could also use full source path or event.src.\n         instance.on(\"complete\", this.handleComplete, this);\n         instance.volume = 0.5;\n     }\n\nThe maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\nof {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.  Note that if not specified, the active plugin will apply\na default limit.  Currently HTMLAudioPlugin sets a default limit of 2, while WebAudioPlugin and FlashAudioPlugin set a\ndefault limit of 100.\n\n     createjs.Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n\nSound can be used as a plugin with PreloadJS to help preload audio properly. Audio preloaded with PreloadJS is\nautomatically registered with the Sound class. When audio is not preloaded, Sound will do an automatic internal\nload. As a result, it may fail to play the first time play is called if the audio is not finished loading. Use\nthe {{#crossLink \"Sound/fileload:event\"}}{{/crossLink}} event to determine when a sound has finished internally\npreloading. It is recommended that all audio is preloaded before it is played.\n\n     var queue = new createjs.LoadQueue();\n\t\tqueue.installPlugin(createjs.Sound);\n\n<b>Audio Sprites</b><br />\nSoundJS has added support for {{#crossLink \"AudioSprite\"}}{{/crossLink}}, available as of version 0.6.0.\nFor those unfamiliar with audio sprites, they are much like CSS sprites or sprite sheets: multiple audio assets\ngrouped into a single file.\n\n<h4>Example</h4>\n\n\t\tvar assetsPath = \"./assets/\";\n\t\tvar sounds = [{\n\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n\t\t\t\taudioSprite: [\n\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n\t\t\t\t]}\n\t\t\t}\n\t\t];\n\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n\t\t// after load is complete\n\t\tcreatejs.Sound.play(\"sound2\");\n\n<b>Mobile Playback</b><br />\nDevices running iOS require the WebAudio context to be \"unlocked\" by playing at least one sound inside of a user-\ninitiated event (such as touch/click). Earlier versions of SoundJS included a \"MobileSafe\" sample, but this is no\nlonger necessary as of SoundJS 0.6.2.\n<ul>\n    <li>\n        In SoundJS 0.4.1 and above, you can either initialize plugins or use the {{#crossLink \"WebAudioPlugin/playEmptySound\"}}{{/crossLink}}\n        method in the call stack of a user input event to manually unlock the audio context.\n    </li>\n    <li>\n        In SoundJS 0.6.2 and above, SoundJS will automatically listen for the first document-level \"mousedown\"\n        and \"touchend\" event, and unlock WebAudio. This will continue to check these events until the WebAudio\n        context becomes \"unlocked\" (changes from \"suspended\" to \"running\")\n    </li>\n    <li>\n        Both the \"mousedown\" and \"touchend\" events can be used to unlock audio in iOS9+, the \"touchstart\" event\n        will work in iOS8 and below. The \"touchend\" event will only work in iOS9 when the gesture is interpreted\n        as a \"click\", so if the user long-presses the button, it will no longer work.\n    </li>\n    <li>\n        When using the <a href=\"http://www.createjs.com/docs/easeljs/classes/Touch.html\">EaselJS Touch class</a>,\n        the \"mousedown\" event will not fire when a canvas is clicked, since MouseEvents are prevented, to ensure\n        only touch events fire. To get around this, you can either rely on \"touchend\", or:\n        <ol>\n            <li>Set the `allowDefault` property on the Touch class constructor to `true` (defaults to `false`).</li>\n            <li>Set the `preventSelection` property on the EaselJS `Stage` to `false`.</li>\n        </ol>\n        These settings may change how your application behaves, and are not recommended.\n    </li>\n</ul>\n\n<b>Loading Alternate Paths and Extension-less Files</b><br />\nSoundJS supports loading alternate paths and extension-less files by passing an object instead of a string for\nthe `src` property, which is a hash using the format `{extension:\"path\", extension2:\"path2\"}`. These labels are\nhow SoundJS determines if the browser will support the sound. This also enables multiple formats to live in\ndifferent folders, or on CDNs, which often has completely different filenames for each file.\n\nPriority is determined by the property order (first property is tried first).  This is supported by both internal loading\nand loading with PreloadJS.\n\n<em>Note: an id is required for playback.</em>\n\n<h4>Example</h4>\n\n\t\tvar sounds = {path:\"./audioPath/\",\n\t\t\t\tmanifest: [\n\t\t\t\t{id: \"cool\", src: {mp3:\"mp3/awesome.mp3\", ogg:\"noExtensionOggFile\"}}\n\t\t]};\n\n\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t\tcreatejs.Sound.addEventListener(\"fileload\", handleLoad);\n\t\tcreatejs.Sound.registerSounds(sounds);\n\n<h3>Known Browser and OS issues</h3>\n<b>IE 9 HTML Audio limitations</b><br />\n<ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\nmuted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\nwhen or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n<li>MP3 encoding will not always work for audio tags, particularly in Internet Explorer. We've found default\nencoding with 64kbps works.</li>\n<li>Occasionally very short samples will get cut off.</li>\n<li>There is a limit to how many audio tags you can load and play at once, which appears to be determined by\nhardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe\nestimate.</li></ul>\n\n<b>Firefox 25 Web Audio limitations</b>\n<ul><li>mp3 audio files do not load properly on all windows machines, reported\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>. </br>\nFor this reason it is recommended to pass another FF supported type (ie ogg) first until this bug is resolved, if\npossible.</li></ul>\n\n<b>Safari limitations</b><br />\n<ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\n<b>iOS 6 Web Audio limitations</b><br />\n<ul><li>Sound is initially locked, and must be unlocked via a user-initiated event. Please see the section on\nMobile Playback above.</li>\n<li>A bug exists that will distort un-cached web audio when a video element is present in the DOM that has audio\nat a different sampleRate.</li>\n</ul>\n\n<b>Android HTML Audio limitations</b><br />\n<ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n<li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use\na delay.</li></ul>\n\n<b>Web Audio and PreloadJS</b><br />\n<ul><li>Web Audio must be loaded through XHR, therefore when used with PreloadJS, tag loading is not possible.\nThis means that tag loading can not be used to avoid cross domain issues.</li><ul>",
            "static": 1,
            "uses": [
                "EventDispatcher"
            ]
        },
        "Graphics.AbstractSoundInstance": {
            "name": "Graphics.AbstractSoundInstance",
            "shortname": "AbstractSoundInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5300,
            "description": "A AbstractSoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n{{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The AbstractSoundInstance is returned by the active plugin\nfor control by the user.\n\n<h4>Example</h4>\n\n     var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n\nA number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\nAPI method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n\nOnce a AbstractSoundInstance is created, a reference can be stored that can be used to control the audio directly through\nthe AbstractSoundInstance. If the reference is not stored, the AbstractSoundInstance will play out its audio (and any loops), and\nis then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\nplayback has completed, a simple call to the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} instance method\nwill rebuild the references the Sound class need to control it.\n\n     var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\", {loop:2});\n     myInstance.on(\"loop\", handleLoop);\n     function handleLoop(event) {\n         myInstance.volume = myInstance.volume * 0.5;\n     }\n\nEvents are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n\n     var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n     myInstance.on(\"complete\", handleComplete);\n     myInstance.on(\"loop\", handleLoop);\n     myInstance.on(\"failed\", handleFailed);",
            "params": [
                {
                    "name": "src",
                    "description": "The path to and file name of the sound.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "Audio sprite property used to apply an offset, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Audio sprite property used to set the time the clip plays for, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "playbackResource",
                    "description": "Any resource needed by plugin to support audio playback.",
                    "type": "Object"
                }
            ],
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "Graphics.AbstractPlugin": {
            "name": "Graphics.AbstractPlugin",
            "shortname": "AbstractPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6212,
            "description": "A default plugin class used as a base for all other plugins.",
            "is_constructor": 1,
            "since": "0.6.0"
        },
        "Graphics.WebAudioLoader": {
            "name": "Graphics.WebAudioLoader",
            "shortname": "WebAudioLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6506,
            "description": "Loader provides a mechanism to preload Web Audio content via PreloadJS or internally. Instances are returned to\nthe preloader, and the load method is called when the asset needs to be requested.",
            "params": [
                {
                    "name": "loadItem",
                    "description": "The item to be loaded",
                    "type": "String"
                }
            ],
            "extends": "XHRRequest",
            "access": "protected",
            "tagname": ""
        },
        "Graphics.WebAudioSoundInstance": {
            "name": "Graphics.WebAudioSoundInstance",
            "shortname": "WebAudioSoundInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6574,
            "description": "WebAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n{{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n\nWebAudioSoundInstance exposes audioNodes for advanced users.",
            "params": [
                {
                    "name": "src",
                    "description": "The path to and file name of the sound.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "Audio sprite property used to apply an offset, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Audio sprite property used to set the time the clip plays for, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "playbackResource",
                    "description": "Any resource needed by plugin to support audio playback.",
                    "type": "Object"
                }
            ],
            "extends": "AbstractSoundInstance",
            "is_constructor": 1
        },
        "Graphics.WebAudioPlugin": {
            "name": "Graphics.WebAudioPlugin",
            "shortname": "WebAudioPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6889,
            "description": "Play sounds using Web Audio in the browser. The WebAudioPlugin is currently the default plugin, and will be used\nanywhere that it is supported. To change plugin priority, check out the Sound API\n{{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n\n<h4>Known Browser and OS issues for Web Audio</h4>\n<b>Firefox 25</b>\n<li>\n    mp3 audio files do not load properly on all windows machines, reported <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>.\n    <br />For this reason it is recommended to pass another FireFox-supported type (i.e. ogg) as the default\n    extension, until this bug is resolved\n</li>\n\n<b>Webkit (Chrome and Safari)</b>\n<li>\n    AudioNode.disconnect does not always seem to work.  This can cause the file size to grow over time if you\n\t   are playing a lot of audio files.\n</li>\n\n<b>iOS 6 limitations</b>\n<ul>\n    <li>\n        Sound is initially muted and will only unmute through play being called inside a user initiated event\n        (touch/click). Please read the mobile playback notes in the the {{#crossLink \"Sound\"}}{{/crossLink}}\n        class for a full overview of the limitations, and how to get around them.\n    </li>\n\t   <li>\n\t       A bug exists that will distort un-cached audio when a video element is present in the DOM. You can avoid\n\t       this bug by ensuring the audio and video audio share the same sample rate.\n\t   </li>\n</ul>",
            "extends": "AbstractPlugin",
            "is_constructor": 1,
            "since": "0.4.0"
        },
        "Graphics.HTMLAudioTagPool": {
            "name": "Graphics.HTMLAudioTagPool",
            "shortname": "HTMLAudioTagPool",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7275,
            "description": "HTMLAudioTagPool is an object pool for HTMLAudio tag instances.",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the channel.",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": ""
        },
        "Graphics.HTMLAudioSoundInstance": {
            "name": "Graphics.HTMLAudioSoundInstance",
            "shortname": "HTMLAudioSoundInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7474,
            "description": "HTMLAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n{{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "src",
                    "description": "The path to and file name of the sound.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "Audio sprite property used to apply an offset, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Audio sprite property used to set the time the clip plays for, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "playbackResource",
                    "description": "Any resource needed by plugin to support audio playback.",
                    "type": "Object"
                }
            ],
            "extends": "AbstractSoundInstance",
            "is_constructor": 1
        },
        "Graphics.HTMLAudioPlugin": {
            "name": "Graphics.HTMLAudioPlugin",
            "shortname": "HTMLAudioPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7723,
            "description": "Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\nby default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.  For older browsers that do not support html\naudio, include and install the {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\n<h4>Known Browser and OS issues for HTML Audio</h4>\n<b>All browsers</b><br />\nTesting has shown in all browsers there is a limit to how many audio tag instances you are allowed.  If you exceed\nthis limit, you can expect to see unpredictable results. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\na guide to how many total audio tags you can safely use in all browsers.  This issue is primarily limited to IE9.\n\n<b>IE html limitations</b><br />\n<ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\nmuted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\nwhen or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n<li>MP3 encoding will not always work for audio tags if it's not default.  We've found default encoding with\n64kbps works.</li>\n<li>Occasionally very short samples will get cut off.</li>\n<li>There is a limit to how many audio tags you can load or play at once, which appears to be determined by\nhardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe estimate.\nNote that audio sprites can be used as a solution to this issue.</li></ul>\n\n<b>Safari limitations</b><br />\n<ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\n<b>iOS 6 limitations</b><br />\n<ul><li>can only have one &lt;audio&gt; tag</li>\n\t\t<li>can not preload or autoplay the audio</li>\n\t\t<li>can not cache the audio</li>\n\t\t<li>can not play the audio except inside a user initiated event.</li>\n\t\t<li>Note it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+)</li>\n\t\t<li>audio sprites can be used to mitigate some of these issues and are strongly recommended on iOS</li>\n</ul>\n\n<b>Android Native Browser limitations</b><br />\n<ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n     <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use a delay.</li></ul>\n<b> Android Chrome 26.0.1410.58 specific limitations</b><br />\n<ul> <li>Can only play 1 sound at a time.</li>\n     <li>Sound is not cached.</li>\n     <li>Sound can only be loaded in a user initiated touch/click event.</li>\n     <li>There is a delay before a sound is played, presumably while the src is loaded.</li>\n</ul>\n\nSee {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.",
            "extends": "AbstractPlugin",
            "is_constructor": 1
        },
        "Graphics.Tween": {
            "name": "Graphics.Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1373,
            "description": "A Tween instance tweens properties for a single target. Instance methods can be chained for easy construction and sequencing:\n\n<h4>Example</h4>\n\n     target.alpha = 1;\n\t    createjs.Tween.get(target)\n\t         .wait(500)\n\t         .to({alpha:0, visible:false}, 1000)\n\t         .call(handleComplete);\n\t    function handleComplete() {\n\t    \t//Tween complete\n\t    }\n\nMultiple tweens can point to the same instance, however if they affect the same properties there could be unexpected\nbehaviour. To stop all tweens on an object, use {{#crossLink \"Tween/removeTweens\"}}{{/crossLink}} or pass `override:true`\nin the props argument.\n\n     createjs.Tween.get(target, {override:true}).to({x:100});\n\nSubscribe to the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event to get notified when a property of the\ntarget is changed.\n\n     createjs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n     function handleChange(event) {\n         // The tween changed.\n     }\n\nSee the Tween {{#crossLink \"Tween/get\"}}{{/crossLink}} method for additional param documentation.",
            "params": [
                {
                    "name": "target",
                    "description": "The target object that will have its properties tweened.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this tween instance (ex. `{loop:true, paused:true}`.\nAll properties default to false. Supported props are:<UL>\n   <LI> loop: sets the loop property on this tween.</LI>\n   <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n   <LI> ignoreGlobalPause: sets the {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}} property on this tween.</LI>\n   <LI> override: if true, `Tween.removeTweens(target)` will be called to remove any other tweens with the same target.\n   <LI> paused: indicates whether to start the tween paused.</LI>\n   <LI> position: indicates the initial position for this tween.</LI>\n   <LI> onChange: specifies a listener for the \"change\" event.</LI>\n</UL>",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "pluginData",
                    "description": "An object containing data for use by installed plugins. See individual\nplugins' documentation for details.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "Graphics.Timeline": {
            "name": "Graphics.Timeline",
            "shortname": "Timeline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2248,
            "description": "The Timeline class synchronizes multiple tweens and allows them to be controlled as a group. Please note that if a\ntimeline is looping, the tweens on it may appear to loop even if the \"loop\" property of the tween is false.",
            "params": [
                {
                    "name": "tweens",
                    "description": "An array of Tweens to add to this timeline. See {{#crossLink \"Timeline/addTween\"}}{{/crossLink}}\nfor more info.",
                    "type": "Array"
                },
                {
                    "name": "labels",
                    "description": "An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.\nSee {{#crossLink \"Timeline/setLabels\"}}{{/crossLink}}\nfor details.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this tween instance (ex. `{loop:true}`). All properties\ndefault to false. Supported props are:<UL>\n   <LI> loop: sets the loop property on this tween.</LI>\n   <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n   <LI> ignoreGlobalPause: sets the ignoreGlobalPause property on this tween.</LI>\n   <LI> paused: indicates whether to start the tween paused.</LI>\n   <LI> position: indicates the initial position for this timeline.</LI>\n   <LI> onChange: specifies a listener to add for the {{#crossLink \"Timeline/change:event\"}}{{/crossLink}} event.</LI>\n</UL>",
                    "type": "Object"
                }
            ],
            "extends": "EventDispatcher",
            "is_constructor": 1
        },
        "Graphics.Ease": {
            "name": "Graphics.Ease",
            "shortname": "Ease",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2661,
            "description": "The Ease class provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\neasing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n\nMost methods on Ease can be passed directly as easing functions:\n\n     Tween.get(target).to({x:100}, 500, Ease.linear);\n\nHowever, methods beginning with \"get\" will return an easing function based on parameter values:\n\n     Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n\nPlease see the <a href=\"http://www.createjs.com/Demos/TweenJS/Tween_SparkTable\">spark table demo</a> for an\noverview of the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n\n<em>Equations derived from work by Robert Penner.</em>",
            "static": 1
        },
        "Graphics.MotionGuidePlugin": {
            "name": "Graphics.MotionGuidePlugin",
            "shortname": "MotionGuidePlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3095,
            "description": "A TweenJS plugin for working with motion guides.\n\nTo use, install the plugin after TweenJS has loaded. Next tween the 'guide' property with an object as detailed below.\n\n      createjs.MotionGuidePlugin.install();\n\n<h4>Example</h4>\n\n     // Using a Motion Guide\n\t    createjs.Tween.get(target).to({guide:{ path:[0,0, 0,200,200,200, 200,0,0,0] }},7000);\n\t    // Visualizing the line\n\t    graphics.moveTo(0,0).curveTo(0,200,200,200).curveTo(200,0,0,0);\n\nEach path needs pre-computation to ensure there's fast performance. Because of the pre-computation there's no\nbuilt in support for path changes mid tween. These are the Guide Object's properties:<UL>\n     <LI> path: Required, Array : The x/y points used to draw the path with a moveTo and 1 to n curveTo calls.</LI>\n     <LI> start: Optional, 0-1 : Initial position, default 0 except for when continuing along the same path.</LI>\n     <LI> end: Optional, 0-1 : Final position, default 1 if not specified.</LI>\n     <LI> orient: Optional, string : \"fixed\"/\"auto\"/\"cw\"/\"ccw\"<UL>\n\t\t\t\t<LI>\"fixed\" forces the object to face down the path all movement (relative to start rotation),</LI>\n     \t\t<LI>\"auto\" rotates the object along the path relative to the line.</LI>\n     \t\t<LI>\"cw\"/\"ccw\" force clockwise or counter clockwise rotations including flash like behaviour</LI>\n\t\t</UL></LI>\n</UL>\nGuide objects should not be shared between tweens even if all properties are identical, the library stores\ninformation on these objects in the background and sharing them can cause unexpected behaviour. Values\noutside 0-1 range of tweens will be a \"best guess\" from the appropriate part of the defined curve.",
            "is_constructor": 1
        },
        "Graphics.TweenJS": {
            "name": "Graphics.TweenJS",
            "shortname": "TweenJS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Graphics",
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3398,
            "description": "Static class holding library specific information such as the version and buildDate of\nthe library."
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "Scripts\\core\\game.js",
            "line": 22,
            "description": "this is the main game function",
            "methdos": ": main",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "Utility Methods"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 40,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 76,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 136,
            "description": "Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\nthat value.  Returns -1 if value is not found.\n\n     var i = createjs.indexOf(myArray, myElementToFind);",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "array",
                    "description": "Array to search for searchElement",
                    "type": "Array"
                },
                {
                    "name": "searchElement",
                    "description": "Element to find in array."
                }
            ],
            "return": {
                "description": "The first index of searchElement in array.",
                "type": "Number"
            },
            "class": "Utility Methods"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 184,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 191,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 200,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 212,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 225,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 234,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 244,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 253,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 263,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 273,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 283,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 294,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 308,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 318,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 327,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 337,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 351,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 360,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 373,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 454,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 461,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 470,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 485,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 509,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 542,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 588,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 618,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 632,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 654,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 708,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 719,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 739,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 749,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 820,
            "description": "In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\nuses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\ndispatches the tick when the time is within a certain threshold.\n\nThis mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\nbut does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\ngaining the benefits of that API (screen synch, background throttling).\n\nVariance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\nframerates of 10, 12, 15, 20, and 30 work well.\n\nFalls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF_SYNCHED",
            "static": 1,
            "type": "{String}",
            "default": "\"synched\"",
            "readonly": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 842,
            "description": "In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\nBecause requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\nYou can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object's \"delta\" properties to make this easier.\n\nFalls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF",
            "static": 1,
            "type": "{String}",
            "default": "\"raf\"",
            "readonly": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 858,
            "description": "In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\nprovide the benefits of requestAnimationFrame (screen synch, background throttling).",
            "itemtype": "property",
            "name": "TIMEOUT",
            "static": 1,
            "type": "{String}",
            "default": "\"timeout\"",
            "readonly": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 871,
            "description": "Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n{{#crossLink \"Ticker/setPaused\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         console.log(\"Paused:\", event.paused, event.delta);\n     }",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether the ticker is currently paused.",
                    "type": "Boolean"
                },
                {
                    "name": "delta",
                    "description": "The time elapsed in ms since the last tick.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The total time in ms since Ticker was initialized.",
                    "type": "Number"
                },
                {
                    "name": "runTime",
                    "description": "The total time in ms that Ticker was not paused since it was initialized. For example,\n\tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 895,
            "description": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}, and will be removed in a future version. If true, timingMode will\nuse {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} by default.",
            "deprecated": true,
            "deprecationMessage": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "useRAF",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 906,
            "description": "Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n{{#crossLink \"Ticker/TIMEOUT\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF\"}}{{/crossLink}}, and\n{{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} for mode details.",
            "itemtype": "property",
            "name": "timingMode",
            "static": 1,
            "type": "{String}",
            "default": "Ticker.TIMEOUT",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 917,
            "description": "Specifies a maximum value for the delta property in the tick event object. This is useful when building time\nbased animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\nalert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n(ex. maxDelta=50 when running at 40fps).\n\nThis does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\nwhen using both delta and other values.\n\nIf 0, there is no maximum.",
            "itemtype": "property",
            "name": "maxDelta",
            "static": 1,
            "type": "{number}",
            "default": "0",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 934,
            "description": "When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\nof the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n{{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\ninfo.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     createjs.Ticker.paused = true;\n     function handleTick(event) {\n         console.log(event.paused,\n         \tcreatejs.Ticker.getTime(false),\n         \tcreatejs.Ticker.getTime(true));\n     }",
            "itemtype": "property",
            "name": "paused",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 974,
            "itemtype": "property",
            "name": "_inited",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 982,
            "itemtype": "property",
            "name": "_startTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 990,
            "itemtype": "property",
            "name": "_pausedTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 998,
            "description": "The number of ticks that have passed",
            "itemtype": "property",
            "name": "_ticks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1007,
            "description": "The number of ticks that have passed while Ticker has been paused",
            "itemtype": "property",
            "name": "_pausedTicks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1016,
            "itemtype": "property",
            "name": "_interval",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1024,
            "itemtype": "property",
            "name": "_lastTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1032,
            "itemtype": "property",
            "name": "_times",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1040,
            "itemtype": "property",
            "name": "_tickTimes",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1048,
            "description": "Stores the timeout or requestAnimationFrame id.",
            "itemtype": "property",
            "name": "_timerId",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1057,
            "description": "True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\nif that property changed and a tick hasn't fired.",
            "itemtype": "property",
            "name": "_raf",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1069,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setInterval",
            "static": 1,
            "params": [
                {
                    "name": "interval",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1082,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getInterval",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1093,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setFPS",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1104,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getFPS",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1115,
            "description": "Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\nNote that actual time between ticks may be more than specified depending on CPU load.\nThis property is ignored if the ticker is using the `RAF` timing mode.",
            "itemtype": "property",
            "name": "interval",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1124,
            "description": "Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n`framerate == 1000/interval`.",
            "itemtype": "property",
            "name": "framerate",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1140,
            "description": "Starts the tick. This is called automatically when the first listener is added.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1155,
            "description": "Stops the Ticker and removes all listeners. Use init() to restart the Ticker.",
            "itemtype": "method",
            "name": "reset",
            "static": 1,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1173,
            "description": "Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\nbecause it only measures the time spent within the tick execution stack. \n\nExample 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \nthe end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \nthere may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\nExample 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\none tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\nother than the tick is using ~80ms (another script, DOM rendering, etc).",
            "itemtype": "method",
            "name": "getMeasuredTickTime",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the average time spent in a tick.\nDefaults to the number of ticks per second. To get only the last tick's time, pass in 1.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The average time spent in a tick in milliseconds.",
                "type": "Number"
            },
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1200,
            "description": "Returns the actual frames / ticks per second.",
            "itemtype": "method",
            "name": "getMeasuredFPS",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the actual frames / ticks per second.\nDefaults to the number of ticks per second.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The actual frames / ticks per second. Depending on performance, this may differ\nfrom the target frames per second.",
                "type": "Number"
            },
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1218,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setPaused",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1230,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "deprecated": true,
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1242,
            "description": "Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\nReturns -1 if Ticker has not been initialized. For example, you could use\nthis in a time synchronized animation to determine the exact amount of time that has elapsed.",
            "itemtype": "method",
            "name": "getTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "If true only time elapsed while Ticker was not paused will be returned.\nIf false, the value returned will be total time elapsed since the first tick event listener was added.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Number of milliseconds that have elapsed since Ticker was initialized or -1.",
                "type": "Number"
            },
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1256,
            "description": "Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object.",
            "itemtype": "method",
            "name": "getEventTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "[runTime=false] If true, the runTime property will be returned instead of time.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The time or runTime property from the most recent tick event or -1.",
                "type": "Number"
            },
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1268,
            "description": "Returns the number of ticks that have been broadcast by Ticker.",
            "itemtype": "method",
            "name": "getTicks",
            "static": 1,
            "params": [
                {
                    "name": "pauseable",
                    "description": "Indicates whether to include ticks that would have been broadcast\nwhile Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\nIf false, tick events that would have been broadcast while Ticker was paused will be included in the return\nvalue. The default value is false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "of ticks that have been broadcast.",
                "type": "Number"
            },
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1284,
            "itemtype": "method",
            "name": "_handleSynch",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1299,
            "itemtype": "method",
            "name": "_handleRAF",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1310,
            "itemtype": "method",
            "name": "_handleTimeout",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1321,
            "itemtype": "method",
            "name": "_setupTick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1342,
            "itemtype": "method",
            "name": "_tick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1376,
            "itemtype": "method",
            "name": "_getTime",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1413,
            "itemtype": "property",
            "name": "_nextID",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "class": "UID"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1422,
            "description": "Returns the next unique id.",
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "The next unique id",
                "type": "Number"
            },
            "static": 1,
            "class": "UID"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1470,
            "description": "The normalized x position on the stage. This will always be within the range 0 to stage width.",
            "itemtype": "property",
            "name": "stageX",
            "type": "Number",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1477,
            "description": "The normalized y position on the stage. This will always be within the range 0 to stage height.",
            "itemtype": "property",
            "name": "stageY",
            "type": "Number",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1484,
            "description": "The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\nstage.mouseMoveOutside is true and the pointer is outside of the stage bounds.",
            "itemtype": "property",
            "name": "rawX",
            "type": "Number",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1492,
            "description": "The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\nstage.mouseMoveOutside is true and the pointer is outside of the stage bounds.",
            "itemtype": "property",
            "name": "rawY",
            "type": "Number",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1500,
            "description": "The native MouseEvent generated by the browser. The properties and API for this\nevent may differ between browsers. This property will be null if the\nEaselJS property was not directly generated from a native MouseEvent.",
            "itemtype": "property",
            "name": "nativeEvent",
            "type": "HtmlMouseEvent",
            "default": "null",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1510,
            "description": "The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\nsupplied id value.",
            "itemtype": "property",
            "name": "pointerID",
            "type": "{Number}",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1518,
            "description": "Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\nFor touch pointers, the first pointer in the current stack will be considered the primary pointer.",
            "itemtype": "property",
            "name": "primary",
            "type": "{Boolean}",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1526,
            "description": "The secondary target for the event, if applicable. This is used for mouseout/rollout\nevents to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\nand stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\nOnly valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).",
            "itemtype": "property",
            "name": "relatedTarget",
            "type": "{DisplayObject}",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1544,
            "description": "Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).",
            "itemtype": "property",
            "name": "localX",
            "type": "{Number}",
            "readonly": "",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1554,
            "description": "Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).",
            "itemtype": "property",
            "name": "localY",
            "type": "{Number}",
            "readonly": "",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1564,
            "description": "Indicates whether the event was generated by a touch input (versus a mouse input).",
            "itemtype": "property",
            "name": "isTouch",
            "type": "{Boolean}",
            "readonly": "",
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1585,
            "description": "Returns a clone of the MouseEvent instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the MouseEvent instance.",
                "type": "MouseEvent"
            },
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1594,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "MouseEvent"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1643,
            "description": "Position (0, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "a",
            "type": "Number",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1649,
            "description": "Position (0, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "b",
            "type": "Number",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1655,
            "description": "Position (1, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "c",
            "type": "Number",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1661,
            "description": "Position (1, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "d",
            "type": "Number",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1667,
            "description": "Position (2, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "tx",
            "type": "Number",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1673,
            "description": "Position (2, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "ty",
            "type": "Number",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1681,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1696,
            "description": "Multiplier for converting degrees to radians. Used internally by Matrix2D.",
            "itemtype": "property",
            "name": "DEG_TO_RAD",
            "static": 1,
            "final": 1,
            "type": "Number",
            "readonly": "",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1708,
            "description": "An identity matrix, representing a null transformation.",
            "itemtype": "property",
            "name": "identity",
            "static": 1,
            "type": "Matrix2D",
            "readonly": "",
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1719,
            "description": "Sets the specified values on this instance.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "a",
                    "description": "Specifies the a property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "b",
                    "description": "Specifies the b property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "c",
                    "description": "Specifies the c property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "d",
                    "description": "Specifies the d property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "tx",
                    "description": "Specifies the tx property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "ty",
                    "description": "Specifies the ty property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1741,
            "description": "Appends the specified matrix properties to this matrix. All parameters are required.\nThis is the equivalent of multiplying `(this matrix) * (specified matrix)`.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1769,
            "description": "Prepends the specified matrix properties to this matrix.\nThis is the equivalent of multiplying `(specified matrix) * (this matrix)`.\nAll parameters are required.",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1796,
            "description": "Appends the specified matrix to this matrix.\nThis is the equivalent of multiplying `(this matrix) * (specified matrix)`.",
            "itemtype": "method",
            "name": "appendMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1807,
            "description": "Prepends the specified matrix to this matrix.\nThis is the equivalent of multiplying `(specified matrix) * (this matrix)`.\nFor example, you could calculate the combined transformation for a child object using:\n\n\tvar o = myDisplayObject;\n\tvar mtx = o.getMatrix();\n\twhile (o = o.parent) {\n\t\t// prepend each parent's transformation in turn:\n\t\to.prependMatrix(o.getMatrix());\n\t}",
            "itemtype": "method",
            "name": "prependMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1826,
            "description": "Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\nFor example, you can use this to generate a matrix representing the transformations of a display object:\n\n\tvar mtx = new createjs.Matrix2D();\n\tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);",
            "itemtype": "method",
            "name": "appendTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "Optional.",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "Optional.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1872,
            "description": "Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\nFor example, you could calculate the combined transformation for a child object using:\n\n\tvar o = myDisplayObject;\n\tvar mtx = new createjs.Matrix2D();\n\tdo  {\n\t\t// prepend each parent's transformation in turn:\n\t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t} while (o = o.parent);\n\t\n\tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.",
            "itemtype": "method",
            "name": "prependTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "Optional.",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "Optional.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1923,
            "description": "Applies a clockwise rotation transformation to the matrix.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1944,
            "description": "Applies a skew transformation to the matrix.",
            "itemtype": "method",
            "name": "skew",
            "params": [
                {
                    "name": "skewX",
                    "description": "The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "The amount to skew vertically in degrees.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1958,
            "description": "Applies a scale transformation to the matrix.",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "x",
                    "description": "The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The amount to scale vertically.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1975,
            "description": "Translates the matrix on the x and y axes.",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1988,
            "description": "Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).",
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 1999,
            "description": "Inverts the matrix, causing it to perform the opposite transformation.",
            "itemtype": "method",
            "name": "invert",
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2021,
            "description": "Returns true if the matrix is an identity matrix.",
            "itemtype": "method",
            "name": "isIdentity",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2030,
            "description": "Returns true if this matrix is equal to the specified matrix (all property values are equal).",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "matrix",
                    "description": "The matrix to compare.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2040,
            "description": "Transforms a point according to this matrix.",
            "itemtype": "method",
            "name": "transformPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x component of the point to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y component of the point to transform.",
                    "type": "Number"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a generic object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Point"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2055,
            "description": "Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\nmay not match the transform properties you used to generate the matrix, though they will produce the same visual\nresults.",
            "itemtype": "method",
            "name": "decompose",
            "params": [
                {
                    "name": "target",
                    "description": "The object to apply the transform properties to. If null, then a new object will be returned.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The target, or a new generic object with the transform properties applied.",
                "type": "Object"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2088,
            "description": "Copies all properties from the specified matrix to this matrix.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "matrix",
                    "description": "The matrix to copy properties from.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2098,
            "description": "Returns a clone of the Matrix2D instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Matrix2D instance.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2107,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Matrix2D"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2147,
            "description": "Property representing the alpha that will be applied to a display object.",
            "itemtype": "property",
            "name": "alpha",
            "type": "Number",
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2153,
            "description": "Property representing the shadow that will be applied to a display object.",
            "itemtype": "property",
            "name": "shadow",
            "type": "Shadow",
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2159,
            "description": "Property representing the compositeOperation that will be applied to a display object.\nYou can find a list of valid composite operations at:\n<a href=\"https://developer.mozilla.org/en/Canvas_tutorial/Compositing\">https://developer.mozilla.org/en/Canvas_tutorial/Compositing</a>",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "String",
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2167,
            "description": "Property representing the value for visible that will be applied to a display object.",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2173,
            "description": "The transformation matrix that will be applied to a display object.",
            "itemtype": "property",
            "name": "matrix",
            "type": "Matrix2D",
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2182,
            "description": "Reinitializes the instance with the specified values.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "visible",
                    "description": "Visible value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "alpha",
                    "description": "Alpha value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "shadow",
                    "description": "A Shadow instance or null.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "compositeOperation",
                    "description": "A compositeOperation value or null.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "matrix",
                    "description": "A transformation matrix. Defaults to an identity matrix.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2203,
            "description": "Appends the specified display properties. This is generally used to apply a child's properties its parent's.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "visible",
                    "description": "desired visible value",
                    "type": "Boolean"
                },
                {
                    "name": "alpha",
                    "description": "desired alpha value",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "desired shadow value",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "desired composite operation value",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "a Matrix2D instance",
                    "type": "Matrix2D",
                    "optional": true
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2223,
            "description": "Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\nFor example, to get the combined display properties that would be applied to a child, you could use:\n\n\tvar o = myDisplayObject;\n\tvar props = new createjs.DisplayProps();\n\tdo {\n\t\t// prepend each parent's props in turn:\n\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t} while (o = o.parent);",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "visible",
                    "description": "desired visible value",
                    "type": "Boolean"
                },
                {
                    "name": "alpha",
                    "description": "desired alpha value",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "desired shadow value",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "desired composite operation value",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "a Matrix2D instance",
                    "type": "Matrix2D",
                    "optional": true
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2252,
            "description": "Resets this instance and its matrix to default values.",
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2266,
            "description": "Returns a clone of the DisplayProps instance. Clones the associated matrix.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the DisplayProps instance.",
                "type": "DisplayProps"
            },
            "class": "DisplayProps"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2309,
            "description": "X position.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Point"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2315,
            "description": "Y position.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Point"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2323,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Point"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2338,
            "description": "Sets the specified values on this instance.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Point"
            },
            "chainable": 1,
            "class": "Point"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2352,
            "description": "Copies all properties from the specified point to this point.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "point",
                    "description": "The point to copy properties from.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "This point. Useful for chaining method calls.",
                "type": "Point"
            },
            "chainable": 1,
            "class": "Point"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2365,
            "description": "Returns a clone of the Point instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Point instance.",
                "type": "Point"
            },
            "class": "Point"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2374,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Point"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2418,
            "description": "X position.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2424,
            "description": "Y position.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2430,
            "description": "Width.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2436,
            "description": "Height.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2444,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2459,
            "description": "Sets the specified values on this instance.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "width",
                    "description": "The width of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2478,
            "description": "Extends the rectangle's bounds to include the described point or rectangle.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "x",
                    "description": "X position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2498,
            "description": "Adds the specified padding to the rectangle's bounds.",
            "itemtype": "method",
            "name": "pad",
            "params": [
                {
                    "name": "top",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "left",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2516,
            "description": "Copies all properties from the specified rectangle to this rectangle.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "rectangle",
                    "description": "The rectangle to copy properties from.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "This rectangle. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2527,
            "description": "Returns true if this rectangle fully encloses the described point or rectangle.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "X position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "True if the described point or rectangle is contained within this rectangle.",
                "type": "Boolean"
            },
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2542,
            "description": "Returns a new rectangle which contains this rectangle and the specified rectangle.",
            "itemtype": "method",
            "name": "union",
            "params": [
                {
                    "name": "rect",
                    "description": "The rectangle to calculate a union with.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "A new rectangle describing the union.",
                "type": "Rectangle"
            },
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2552,
            "description": "Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\nor null if they do not intersect.",
            "itemtype": "method",
            "name": "intersection",
            "params": [
                {
                    "name": "rect",
                    "description": "The rectangle to calculate an intersection with.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "A new rectangle describing the intersection or null.",
                "type": "Rectangle"
            },
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2568,
            "description": "Returns true if the specified rectangle intersects (has any overlap) with this rectangle.",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "rect",
                    "description": "The rectangle to compare.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "True if the rectangles intersect.",
                "type": "Boolean"
            },
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2578,
            "description": "Returns true if the width or height are equal or less than 0.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "True if the rectangle is empty.",
                "type": "Boolean"
            },
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2587,
            "description": "Returns a clone of the Rectangle instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Rectangle instance.",
                "type": "Rectangle"
            },
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2596,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Rectangle"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2658,
            "description": "The target for this button helper.",
            "itemtype": "property",
            "name": "target",
            "type": "MovieClip | Sprite",
            "readonly": "",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2666,
            "description": "The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".",
            "itemtype": "property",
            "name": "overLabel",
            "type": "String | Number",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2673,
            "description": "The label name or frame number to display when the user mouses over the target. Defaults to \"out\".",
            "itemtype": "property",
            "name": "outLabel",
            "type": "String | Number",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2680,
            "description": "The label name or frame number to display when the user presses on the target. Defaults to \"down\".",
            "itemtype": "property",
            "name": "downLabel",
            "type": "String | Number",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2687,
            "description": "If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.",
            "itemtype": "property",
            "name": "play",
            "default": "false",
            "type": "Boolean",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2697,
            "itemtype": "property",
            "name": "_isPressed",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2704,
            "itemtype": "property",
            "name": "_isOver",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2711,
            "itemtype": "property",
            "name": "_enabled",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2732,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2747,
            "description": "Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2773,
            "description": "Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getEnabled",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "deprecated": true,
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2783,
            "description": "Enables or disables the button functionality on the target.",
            "itemtype": "property",
            "name": "enabled",
            "type": "{Boolean}",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2796,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2807,
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "evt",
                    "description": "The mouse event to handle.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2834,
            "description": "Injected into target. Preserves the paused state through a reset.",
            "itemtype": "method",
            "name": "_reset",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2880,
            "description": "The color of the shadow. This can be any valid CSS color value.",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "default": "null",
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2888,
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2895,
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2902,
            "itemtype": "property",
            "name": "blur",
            "type": "Number",
            "default": "0",
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2911,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2926,
            "description": "An identity shadow object (all properties are set to 0).",
            "itemtype": "property",
            "name": "identity",
            "type": "Shadow",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2938,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 2947,
            "description": "Returns a clone of this Shadow instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Shadow instance.",
                "type": "Shadow"
            },
            "class": "Shadow"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3144,
            "description": "Indicates whether all images are finished loading.",
            "itemtype": "property",
            "name": "complete",
            "type": "Boolean",
            "readonly": "",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3152,
            "description": "Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n{{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.",
            "itemtype": "property",
            "name": "framerate",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3162,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3169,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3176,
            "itemtype": "property",
            "name": "_images",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3183,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3190,
            "itemtype": "property",
            "name": "_loadCount",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3198,
            "itemtype": "property",
            "name": "_frameHeight",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3205,
            "itemtype": "property",
            "name": "_frameWidth",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3212,
            "itemtype": "property",
            "name": "_numFrames",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3219,
            "itemtype": "property",
            "name": "_regX",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3226,
            "itemtype": "property",
            "name": "_regY",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3233,
            "itemtype": "property",
            "name": "_spacing",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3240,
            "itemtype": "property",
            "name": "_margin",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3257,
            "description": "Dispatched when all images are loaded.  Note that this only fires if the images\nwere not fully loaded when the sprite sheet was initialized. You should check the complete property\nto prior to adding a listener. Ex.\n\n\tvar sheet = new createjs.SpriteSheet(data);\n\tif (!sheet.complete) {\n\t\t// not preloaded, listen for the complete event:\n\t\tsheet.addEventListener(\"complete\", handler);\n\t}",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3274,
            "description": "Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\nwhen doing on-demand rendering.",
            "itemtype": "event",
            "name": "getframe",
            "params": [
                {
                    "name": "index",
                    "description": "The frame index.",
                    "type": "Number"
                },
                {
                    "name": "frame",
                    "description": "The frame object that getFrame will return.",
                    "type": "Object"
                }
            ],
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3282,
            "description": "Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\nencounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\nevent once all images are finished processing, even if an error is encountered.",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the image that failed to load.",
                    "type": "String"
                }
            ],
            "since": "0.8.2",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3293,
            "description": "Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getAnimations",
            "return": {
                "description": "",
                "type": "Array"
            },
            "deprecated": true,
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3303,
            "description": "Returns an array of all available animation names available on this sprite sheet as strings.",
            "itemtype": "property",
            "name": "animations",
            "type": "{Array}",
            "readonly": "",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3317,
            "description": "Returns the total number of frames in the specified animation, or in the whole sprite\nsheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\nthe images have not been fully loaded.",
            "itemtype": "method",
            "name": "getNumFrames",
            "params": [
                {
                    "name": "animation",
                    "description": "The name of the animation to get a frame count for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.",
                "type": "Number"
            },
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3335,
            "description": "Returns an object defining the specified animation. The returned object contains:<UL>\n\t<li>frames: an array of the frame ids in the animation</li>\n\t<li>speed: the playback speed for this animation</li>\n\t<li>name: the name of the animation</li>\n\t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\tsame.</li>\n</UL>",
            "itemtype": "method",
            "name": "getAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a generic object with frames, speed, name, and next properties.",
                "type": "Object"
            },
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3351,
            "description": "Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\timage.</li>\n\t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n</UL>",
            "itemtype": "method",
            "name": "getFrame",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "The index of the frame.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a generic object with image and rect properties. Returns null if the frame does not exist.",
                "type": "Object"
            },
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3368,
            "description": "Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\nto the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\n\t[x=-50, y=-40, width=90, height=70]",
            "itemtype": "method",
            "name": "getFrameBounds",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "The index of the frame.",
                    "type": "Number"
                },
                {
                    "name": "rectangle",
                    "description": "A Rectangle instance to copy the values into. By default a new instance is created.",
                    "type": "Rectangle",
                    "optional": true
                }
            ],
            "return": {
                "description": "A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.",
                "type": "Rectangle"
            },
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3384,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3393,
            "description": "SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.",
            "itemtype": "method",
            "name": "clone",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3402,
            "itemtype": "method",
            "name": "_parseData",
            "params": [
                {
                    "name": "data",
                    "description": "An object describing the SpriteSheet data.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3489,
            "itemtype": "method",
            "name": "_handleImageLoad",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3501,
            "itemtype": "method",
            "name": "_handleImageError",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3516,
            "itemtype": "method",
            "name": "_calculateFrames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3667,
            "description": "Holds a reference to the last command that was created or appended. For example, you could retain a reference\nto a Fill command in order to dynamically update the color later by using:\n\n\t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t// update color later:\n\t\tmyFill.style = \"yellow\";",
            "itemtype": "property",
            "name": "command",
            "type": "Object",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3682,
            "itemtype": "property",
            "name": "_stroke",
            "access": "protected",
            "tagname": "",
            "type": "{Stroke}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3689,
            "itemtype": "property",
            "name": "_strokeStyle",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeStyle}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3696,
            "itemtype": "property",
            "name": "_oldStrokeStyle",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeStyle}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3703,
            "itemtype": "property",
            "name": "_strokeDash",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeDash}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3710,
            "itemtype": "property",
            "name": "_oldStrokeDash",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeDash}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3717,
            "itemtype": "property",
            "name": "_strokeIgnoreScale",
            "access": "protected",
            "tagname": "",
            "type": "Boolean",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3724,
            "itemtype": "property",
            "name": "_fill",
            "access": "protected",
            "tagname": "",
            "type": "{Fill}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3731,
            "itemtype": "property",
            "name": "_instructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3738,
            "description": "Indicates the last instruction index that was committed.",
            "itemtype": "property",
            "name": "_commitIndex",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3746,
            "description": "Uncommitted instructions.",
            "itemtype": "property",
            "name": "_activeInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3754,
            "description": "This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.",
            "itemtype": "property",
            "name": "_dirty",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3763,
            "description": "Index to draw from if a store operation has happened.",
            "itemtype": "property",
            "name": "_storeIndex",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3778,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3793,
            "description": "Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\n     createjs.Graphics.getRGB(50, 100, 150, 0.5);\n     // Returns \"rgba(50,100,150,0.5)\"\n\nIt also supports passing a single hex color value as the first param, and an optional alpha value as the second\nparam. For example,\n\n     createjs.Graphics.getRGB(0xFF00FF, 0.2);\n     // Returns \"rgba(255,0,255,0.2)\"",
            "itemtype": "method",
            "name": "getRGB",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "The red component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "The green component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "The blue component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "The alpha component for the color where 0 is fully transparent and 1 is fully opaque.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A CSS compatible color string based on the specified RGB numeric color values in the format\n\"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".",
                "type": "String"
            },
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3829,
            "description": "Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\nor if alpha is null then in the format \"hsl(360,100,100)\".\n\n     createjs.Graphics.getHSL(150, 100, 70);\n     // Returns \"hsl(150,100,70)\"",
            "itemtype": "method",
            "name": "getHSL",
            "static": 1,
            "params": [
                {
                    "name": "hue",
                    "description": "The hue component for the color, between 0 and 360.",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "The saturation component for the color, between 0 and 100.",
                    "type": "Number"
                },
                {
                    "name": "lightness",
                    "description": "The lightness component for the color, between 0 and 100.",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "The alpha component for the color where 0 is fully transparent and 1 is fully opaque.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A CSS compatible color string based on the specified HSL numeric color values in the format\n\"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".",
                "type": "String"
            },
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3855,
            "description": "A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\nunnecessary instantiation.",
            "itemtype": "property",
            "name": "beginCmd",
            "type": "{Graphics.BeginPath}",
            "static": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3864,
            "description": "Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "BASE_64",
            "static": 1,
            "final": 1,
            "readonly": "",
            "type": "{Object}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3874,
            "description": "Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\ncorresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\"butt\", 1 to \"round\", and 2 to \"square\".\nFor example, to set the line caps to \"square\":\n\n     myGraphics.ss(16, 2);",
            "itemtype": "property",
            "name": "STROKE_CAPS_MAP",
            "static": 1,
            "final": 1,
            "readonly": "",
            "type": "{Array}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3890,
            "description": "Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\ncorresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\"miter\", 1 to \"round\", and 2 to \"bevel\".\nFor example, to set the line joints to \"bevel\":\n\n     myGraphics.ss(16, 0, 2);",
            "itemtype": "property",
            "name": "STROKE_JOINTS_MAP",
            "static": 1,
            "final": 1,
            "readonly": "",
            "type": "{Array}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3906,
            "itemtype": "property",
            "name": "_ctx",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{CanvasRenderingContext2D}",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3920,
            "description": "Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getInstructions",
            "return": {
                "description": "",
                "type": "Array"
            },
            "deprecated": true,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3931,
            "description": "Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\nModifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\nThis property is mainly intended for introspection of the instructions (ex. for graphics export).",
            "itemtype": "property",
            "name": "instructions",
            "type": "{Array}",
            "readonly": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3948,
            "description": "Returns true if this Graphics instance has no drawing commands.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "Returns true if this Graphics instance has no drawing commands.",
                "type": "Boolean"
            },
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3957,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "data",
                    "description": "Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.",
                    "type": "Object"
                }
            ],
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3974,
            "description": "Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\nstroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "drawAsPath",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 3993,
            "description": "Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should move to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should move to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4005,
            "description": "Draws a line from the current drawing point to the specified position, which become the new current drawing\npoint. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\nA tiny API method \"lt\" also exists.\n\nFor detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\nwhatwg spec</a>.",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should draw to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should draw to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4023,
            "description": "Draws an arc with the specified control points and radius.  For detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\nwhatwg spec</a>. A tiny API method \"at\" also exists.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4040,
            "description": "Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\nexample, to draw a full circle with a radius of 20 centered at (100, 100):\n\n     arc(100, 100, 20, 0, Math.PI*2);\n\nFor detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\nA tiny API method \"a\" also exists.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "anticlockwise",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4063,
            "description": "Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\ninformation, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\nwhatwg spec</a>. A tiny API method \"qt\" also exists.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4079,
            "description": "Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\ncp2y). For detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\nwhatwg spec</a>. A tiny API method \"bt\" also exists.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4098,
            "description": "Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\nFor detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\nwhatwg spec</a>. A tiny API method \"r\" also exists.",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4115,
            "description": "Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\nsince the fill or stroke was last set. A tiny API method \"cp\" also exists.",
            "itemtype": "method",
            "name": "closePath",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4128,
            "description": "Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\nto be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4142,
            "description": "Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.",
            "itemtype": "method",
            "name": "beginFill",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no fill.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4154,
            "description": "Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\nexample, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\nsquare to display it:\n\n     myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\nA tiny API method \"lf\" also exists.",
            "itemtype": "method",
            "name": "beginLinearGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\ndrawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\nthe first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4178,
            "description": "Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\nblue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\n     myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\nA tiny API method \"rf\" also exists.",
            "itemtype": "method",
            "name": "beginRadialGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4203,
            "description": "Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\nexists.",
            "itemtype": "method",
            "name": "beginBitmapFill",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "Optional. Specifies a transformation matrix for the bitmap fill. This transformation\nwill be applied relative to the parent transform.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4221,
            "description": "Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\nA tiny API method \"ef\" also exists.",
            "itemtype": "method",
            "name": "endFill",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4232,
            "description": "Sets the stroke style. Like all drawing methods, this can be chained, so you can define\nthe stroke style and color in a single line of code like so:\n\n\tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\nA tiny API method \"ss\" also exists.",
            "itemtype": "method",
            "name": "setStrokeStyle",
            "params": [
                {
                    "name": "thickness",
                    "description": "The width of the stroke.",
                    "type": "Number"
                },
                {
                    "name": "caps",
                    "description": "Indicates the type of caps to use at the end of lines. One of butt,\nround, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\nthe tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "joints",
                    "description": "Specifies the type of joints that should be used where two lines meet.\nOne of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\nfor use with the tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "miterLimit",
                    "description": "If joints is set to \"miter\", then you can specify a miter limit ratio which\ncontrols at what point a mitered joint will be clipped.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "ignoreScale",
                    "description": "If true, the stroke will be drawn at the specified thickness regardless\nof active transformations.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4264,
            "description": "Sets or clears the stroke dash pattern.\n\n\tmyGraphics.setStrokeDash([20, 10], 0);\n\nA tiny API method `sd` also exists.",
            "itemtype": "method",
            "name": "setStrokeDash",
            "params": [
                {
                    "name": "[segments] An array specifying the dash pattern, alternating between line and gap.\nFor example, `[20,10]",
                    "description": "` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\nPassing null or an empty array will clear the existing stroke dash.",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4284,
            "description": "Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.",
            "itemtype": "method",
            "name": "beginStroke",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no stroke.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4296,
            "description": "Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\nexample, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\nsquare to display it:\n\n     myGraphics.setStrokeStyle(10).\n         beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\nA tiny API method \"ls\" also exists.",
            "itemtype": "method",
            "name": "beginLinearGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4321,
            "description": "Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\nblue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\n     myGraphics.setStrokeStyle(10)\n         .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n         .drawRect(50, 90, 150, 110);\n\nA tiny API method \"rs\" also exists.",
            "itemtype": "method",
            "name": "beginRadialGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\nto 100%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4349,
            "description": "Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\nstrokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\nalso exists.",
            "itemtype": "method",
            "name": "beginBitmapStroke",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of\n\"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".",
                    "type": "String",
                    "optional": true,
                    "optdefault": "repeat"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4366,
            "description": "Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\nA tiny API method \"es\" also exists.",
            "itemtype": "method",
            "name": "endStroke",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4377,
            "description": "Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4390,
            "description": "Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n method.",
            "itemtype": "method",
            "name": "drawRect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4404,
            "description": "Draws a rounded rectangle with all corners with the specified radius.",
            "itemtype": "method",
            "name": "drawRoundRect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4419,
            "description": "Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\nmethod \"rc\" also exists.",
            "itemtype": "method",
            "name": "drawRoundRectComplex",
            "params": [
                {
                    "name": "x",
                    "description": "The horizontal coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The vertical coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The width of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The height of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "radiusTL",
                    "description": "Top left corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusTR",
                    "description": "Top right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBR",
                    "description": "Bottom right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBL",
                    "description": "Bottom left corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4438,
            "description": "Draws a circle with the specified radius at (x, y).\n\n     var g = new createjs.Graphics();\n\t    g.setStrokeStyle(1);\n\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t    g.drawCircle(0,0,3);\n\n\t    var s = new createjs.Shape(g);\n\t\ts.x = 100;\n\t\ts.y = 100;\n\n\t    stage.addChild(s);\n\t    stage.update();\n\nA tiny API method \"dc\" also exists.",
            "itemtype": "method",
            "name": "drawCircle",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Radius of circle.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4466,
            "description": "Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\nexcept the width and height can be different. A tiny API method \"de\" also exists.",
            "itemtype": "method",
            "name": "drawEllipse",
            "params": [
                {
                    "name": "x",
                    "description": "The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from center.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from the center.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\nnumber.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4484,
            "description": "Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\npoints. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\nradius of 50:\n\n     myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n     // Note: -90 makes the first point vertical\n\nA tiny API method \"dp\" also exists.",
            "itemtype": "method",
            "name": "drawPolyStar",
            "params": [
                {
                    "name": "x",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The outer radius of the shape.",
                    "type": "Number"
                },
                {
                    "name": "sides",
                    "description": "The number of points on the star or sides on the polygon.",
                    "type": "Number"
                },
                {
                    "name": "pointSize",
                    "description": "The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\npolygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "The angle of the first point / corner. For example a value of 0 will draw the first point\ndirectly to the right of the center.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4511,
            "description": "Removed in favour of using custom command objects with {{#crossLink \"Graphics/append\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "inject",
            "deprecated": true,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4517,
            "description": "Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\nthat accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n{{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\nThis method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\nbuilt-in or custom graphics commands. For example:\n\n\t\t// attach data to our shape, so we can access it during the draw:\n\t\tmyShape.color = \"red\";\n\n\t\t// append a Circle command object:\n\t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\n\t\t// append a custom command object with an exec method that sets the fill style\n\t\t// based on the shape's data, and then fills the circle.\n\t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t\t\tctx.fillStyle = shape.color;\n\t\t\tctx.fill();\n\t\t}});",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "command",
                    "description": "A graphics command object exposing an \"exec\" method.",
                    "type": "Object"
                },
                {
                    "name": "clean",
                    "description": "The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4551,
            "description": "Decodes a compact encoded path string into a series of draw instructions.\nThis format is not intended to be human readable, and is meant for use by authoring tools.\nThe format uses a base64 character set, with each character representing 6 bits, to define a series of draw\ncommands.\n\nEach command is comprised of a single \"header\" character followed by a variable number of alternating x and y\nposition values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\ntype of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\nindicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\nlatter. Bits 5 and 6 are currently unused.\n\nFollowing the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\nparameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\nby an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\ncase of move operations which are absolute, this value is a delta from the previous x or y position (as\nappropriate).\n\nFor example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n<br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\nparameter.\n<br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\nindicate 1500 tenths of a pixel.\n<br />AA - 000000000000. Absolute y position of 0.\n<br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n<br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\nprovide an absolute position of +150.0px.\n<br />AAA - 000000000000000000. A y delta value of 0.\n\nA tiny API method \"p\" also exists.",
            "itemtype": "method",
            "name": "decodePath",
            "params": [
                {
                    "name": "str",
                    "description": "The path string to decode.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4623,
            "description": "Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\nthe existing store. This also affects `drawAsPath()`.\n\nThis is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\nthat only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\nof the vector instructions for later use (ex. scaling, modifying, or exporting).\n\nNote that calling store() will force the active path (if any) to be ended in a manner similar to changing\nthe fill or stroke.\n\nFor example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\nsegments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\nand then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n\n\t// set up cache:\n\tmyShape.cache(0,0,500,500,scale);\n\n\t// when the user drags, draw a new line:\n\tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t// then draw it into the existing cache:\n\tmyShape.updateCache(\"source-over\");\n\t// store the new line, so it isn't redrawn next time:\n\tmyShape.store();\n\n\t// then, when the window resizes, we can re-render at a different scale:\n\t// first, unstore all our lines:\n\tmyShape.unstore();\n\t// then cache using the new scale:\n\tmyShape.cache(0,0,500,500,newScale);\n\t// finally, store the existing commands again:\n\tmyShape.store();",
            "itemtype": "method",
            "name": "store",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4666,
            "description": "Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\nso that they will be executed in subsequent draw calls.",
            "itemtype": "method",
            "name": "unstore",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4679,
            "description": "Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Graphics instance.",
                "type": "Graphics"
            },
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4700,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4711,
            "description": "Shortcut to moveTo.",
            "itemtype": "method",
            "name": "mt",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should move to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should move to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4722,
            "description": "Shortcut to lineTo.",
            "itemtype": "method",
            "name": "lt",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should draw to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should draw to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4733,
            "description": "Shortcut to arcTo.",
            "itemtype": "method",
            "name": "at",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4747,
            "description": "Shortcut to bezierCurveTo.",
            "itemtype": "method",
            "name": "bt",
            "params": [
                {
                    "name": "cp1x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4762,
            "description": "Shortcut to quadraticCurveTo / curveTo.",
            "itemtype": "method",
            "name": "qt",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4774,
            "description": "Shortcut to arc.",
            "itemtype": "method",
            "name": "a",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "anticlockwise",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4789,
            "description": "Shortcut to rect.",
            "itemtype": "method",
            "name": "r",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4802,
            "description": "Shortcut to closePath.",
            "itemtype": "method",
            "name": "cp",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4811,
            "description": "Shortcut to clear.",
            "itemtype": "method",
            "name": "c",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4820,
            "description": "Shortcut to beginFill.",
            "itemtype": "method",
            "name": "f",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no fill.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4831,
            "description": "Shortcut to beginLinearGradientFill.",
            "itemtype": "method",
            "name": "lf",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\ndrawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\nthe first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4848,
            "description": "Shortcut to beginRadialGradientFill.",
            "itemtype": "method",
            "name": "rf",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4867,
            "description": "Shortcut to beginBitmapFill.",
            "itemtype": "method",
            "name": "bf",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "Optional. Specifies a transformation matrix for the bitmap fill. This transformation\nwill be applied relative to the parent transform.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4883,
            "description": "Shortcut to endFill.",
            "itemtype": "method",
            "name": "ef",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4892,
            "description": "Shortcut to setStrokeStyle.",
            "itemtype": "method",
            "name": "ss",
            "params": [
                {
                    "name": "thickness",
                    "description": "The width of the stroke.",
                    "type": "Number"
                },
                {
                    "name": "caps",
                    "description": "Indicates the type of caps to use at the end of lines. One of butt,\nround, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\nthe tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "joints",
                    "description": "Specifies the type of joints that should be used where two lines meet.\nOne of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\nfor use with the tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "miterLimit",
                    "description": "If joints is set to \"miter\", then you can specify a miter limit ratio which\ncontrols at what point a mitered joint will be clipped.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "ignoreScale",
                    "description": "If true, the stroke will be drawn at the specified thickness regardless\nof active transformations.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4912,
            "description": "Shortcut to setStrokeDash.",
            "itemtype": "method",
            "name": "sd",
            "params": [
                {
                    "name": "[segments] An array specifying the dash pattern, alternating between line and gap.\nFor example, [20,10]",
                    "description": "would create a pattern of 20 pixel lines with 10 pixel gaps between them.\nPassing null or an empty array will clear any existing dash.",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4925,
            "description": "Shortcut to beginStroke.",
            "itemtype": "method",
            "name": "s",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no stroke.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4936,
            "description": "Shortcut to beginLinearGradientStroke.",
            "itemtype": "method",
            "name": "ls",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4953,
            "description": "Shortcut to beginRadialGradientStroke.",
            "itemtype": "method",
            "name": "rs",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\nto 100%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4973,
            "description": "Shortcut to beginBitmapStroke.",
            "itemtype": "method",
            "name": "bs",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of\n\"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".",
                    "type": "String",
                    "optional": true,
                    "optdefault": "repeat"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4986,
            "description": "Shortcut to endStroke.",
            "itemtype": "method",
            "name": "es",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 4995,
            "description": "Shortcut to drawRect.",
            "itemtype": "method",
            "name": "dr",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5008,
            "description": "Shortcut to drawRoundRect.",
            "itemtype": "method",
            "name": "rr",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5022,
            "description": "Shortcut to drawRoundRectComplex.",
            "itemtype": "method",
            "name": "rc",
            "params": [
                {
                    "name": "x",
                    "description": "The horizontal coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The vertical coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The width of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The height of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "radiusTL",
                    "description": "Top left corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusTR",
                    "description": "Top right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBR",
                    "description": "Bottom right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBL",
                    "description": "Bottom left corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5039,
            "description": "Shortcut to drawCircle.",
            "itemtype": "method",
            "name": "dc",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Radius of circle.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5051,
            "description": "Shortcut to drawEllipse.",
            "itemtype": "method",
            "name": "de",
            "params": [
                {
                    "name": "x",
                    "description": "The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from center.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from the center.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\nnumber.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5067,
            "description": "Shortcut to drawPolyStar.",
            "itemtype": "method",
            "name": "dp",
            "params": [
                {
                    "name": "x",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The outer radius of the shape.",
                    "type": "Number"
                },
                {
                    "name": "sides",
                    "description": "The number of points on the star or sides on the polygon.",
                    "type": "Number"
                },
                {
                    "name": "pointSize",
                    "description": "The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\npolygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "The angle of the first point / corner. For example a value of 0 will draw the first point\ndirectly to the right of the center.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5084,
            "description": "Shortcut to decodePath.",
            "itemtype": "method",
            "name": "p",
            "params": [
                {
                    "name": "str",
                    "description": "The path string to decode.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5096,
            "itemtype": "method",
            "name": "_updateInstructions",
            "params": [
                {
                    "name": "commit",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5135,
            "itemtype": "method",
            "name": "_setFill",
            "params": [
                {
                    "name": "fill",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5146,
            "itemtype": "method",
            "name": "_setStroke",
            "params": [
                {
                    "name": "stroke",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5160,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5170,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.LineTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5174,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.LineTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5178,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.LineTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5194,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.MoveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5198,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.MoveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5202,
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.MoveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5221,
            "itemtype": "property",
            "name": "x1",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5225,
            "itemtype": "property",
            "name": "y1",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5229,
            "itemtype": "property",
            "name": "x2",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5233,
            "itemtype": "property",
            "name": "y2",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5237,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5241,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5263,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5267,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5271,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5275,
            "itemtype": "property",
            "name": "startAngle",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5279,
            "itemtype": "property",
            "name": "endAngle",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5283,
            "itemtype": "property",
            "name": "anticlockwise",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5287,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5308,
            "itemtype": "property",
            "name": "cpx",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5312,
            "itemtype": "property",
            "name": "cpy",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5316,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5320,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5324,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5345,
            "itemtype": "property",
            "name": "cp1x",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5349,
            "itemtype": "property",
            "name": "cp1y",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5353,
            "itemtype": "property",
            "name": "cp2x",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5357,
            "itemtype": "property",
            "name": "cp2y",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5361,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5365,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5369,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5389,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5393,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5397,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5401,
            "itemtype": "property",
            "name": "h",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5405,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5420,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.ClosePath",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5433,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.BeginPath",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5448,
            "description": "A valid Context2D fillStyle.",
            "itemtype": "property",
            "name": "style",
            "type": "Object",
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5453,
            "itemtype": "property",
            "name": "matrix",
            "type": "Matrix2D",
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5457,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5474,
            "description": "Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "linearGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Fill object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5493,
            "description": "Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "radialGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Fill object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5513,
            "description": "Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "bitmap",
            "params": [
                {
                    "name": "image",
                    "description": "Must be loaded prior to creating a bitmap fill, or the fill will be empty.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "One of: repeat, repeat-x, repeat-y, or no-repeat.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns this Fill object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5537,
            "description": "A valid Context2D strokeStyle.",
            "itemtype": "property",
            "name": "style",
            "type": "Object",
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5542,
            "itemtype": "property",
            "name": "ignoreScale",
            "type": "Boolean",
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5546,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5562,
            "description": "Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "linearGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Stroke object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5575,
            "description": "Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "radialGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Stroke object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5590,
            "description": "Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "bitmap",
            "params": [
                {
                    "name": "image",
                    "description": "",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "repetition",
                    "description": "One of: repeat, repeat-x, repeat-y, or no-repeat.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns this Stroke object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5611,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5615,
            "description": "One of: butt, round, square",
            "itemtype": "property",
            "name": "caps",
            "type": "String",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5620,
            "description": "One of: round, bevel, miter",
            "itemtype": "property",
            "name": "joints",
            "type": "String",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5625,
            "itemtype": "property",
            "name": "miterLimit",
            "type": "Number",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5629,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5657,
            "itemtype": "property",
            "name": "segments",
            "type": "Array",
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5661,
            "itemtype": "property",
            "name": "offset",
            "type": "Number",
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5665,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5679,
            "description": "The default value for segments (ie. no dash).",
            "itemtype": "property",
            "name": "EMPTY_SEGMENTS",
            "static": 1,
            "final": 1,
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5703,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5707,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5711,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5715,
            "itemtype": "property",
            "name": "h",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5719,
            "itemtype": "property",
            "name": "radiusTL",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5723,
            "itemtype": "property",
            "name": "radiusTR",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5727,
            "itemtype": "property",
            "name": "radiusBR",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5731,
            "itemtype": "property",
            "name": "radiusBL",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5735,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5779,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5783,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5787,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5791,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5810,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5814,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5818,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5822,
            "itemtype": "property",
            "name": "h",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5826,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5864,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5868,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5872,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5876,
            "itemtype": "property",
            "name": "sides",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5880,
            "itemtype": "property",
            "name": "pointSize",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5884,
            "itemtype": "property",
            "name": "angle",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5888,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5952,
            "description": "The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.",
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5960,
            "description": "If a cache is active, this returns the canvas that holds the cached version of this display object. See {{#crossLink \"cache\"}}{{/crossLink}}\nfor more information.",
            "itemtype": "property",
            "name": "cacheCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "default": "null",
            "readonly": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5970,
            "description": "Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\ndetermine if the cache has changed since a previous check.",
            "itemtype": "property",
            "name": "cacheID",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5979,
            "description": "Unique ID for this display object. Makes display objects easier for some uses.",
            "itemtype": "property",
            "name": "id",
            "type": "{Number}",
            "default": "-1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 5987,
            "description": "Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\nof a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\nclicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\nmethod from returning the child.\n\n<strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\ncheck out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\nprovided in the next release of EaselJS.",
            "itemtype": "property",
            "name": "mouseEnabled",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6002,
            "description": "If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\nIn addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\non some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).",
            "itemtype": "property",
            "name": "tickEnabled",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6012,
            "description": "An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\ndebugging.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6021,
            "description": "A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\ncontains this display object, or null if it has not been added\nto one.",
            "itemtype": "property",
            "name": "parent",
            "final": 1,
            "type": "{Container}",
            "default": "null",
            "readonly": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6033,
            "description": "The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\naround its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.",
            "itemtype": "property",
            "name": "regX",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6042,
            "description": "The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\nits center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.",
            "itemtype": "property",
            "name": "regY",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6051,
            "description": "The rotation in degrees for this display object.",
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6059,
            "description": "The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\nobject to twice its nominal width. To horizontally flip an object, set the scale to a negative number.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6068,
            "description": "The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\nobject to half its nominal height. To vertically flip an object, set the scale to a negative number.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6077,
            "description": "The factor to skew this display object horizontally.",
            "itemtype": "property",
            "name": "skewX",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6085,
            "description": "The factor to skew this display object vertically.",
            "itemtype": "property",
            "name": "skewY",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6093,
            "description": "A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\nnull, this property is inherited from the parent container.",
            "itemtype": "property",
            "name": "shadow",
            "type": "{Shadow}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6102,
            "description": "Indicates whether this display object should be rendered to the canvas and included when running the Stage\n{{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6111,
            "description": "The x (horizontal) position of the display object, relative to its parent.",
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6119,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6126,
            "description": "If set, defines the transformation for this display object, overriding all other transformation properties\n(x, y, rotation, scale, skew).",
            "itemtype": "property",
            "name": "transformMatrix",
            "type": "{Matrix2D}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6135,
            "description": "The composite operation indicates how the pixels of this display object will be composited with the elements\nbehind it. If `null`, this property is inherited from the parent container. For more information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\nwhatwg spec on compositing</a>.",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6146,
            "description": "Indicates whether the display object should be drawn to a whole pixel when\n{{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\ncategories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).",
            "itemtype": "property",
            "name": "snapToPixel",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6156,
            "description": "An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\nor {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\ncached.",
            "itemtype": "property",
            "name": "filters",
            "type": "{Array}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6166,
            "description": "A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\nwill be applied relative to the display object's parent coordinates (as if it were a child of the parent).",
            "itemtype": "property",
            "name": "mask",
            "type": "{Shape}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6175,
            "description": "A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\nThe hit area will have its transformation applied relative to this display object's coordinate space (as though\nthe hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\nusing only its own `alpha` value regardless of the alpha value on the target display object, or the target's\nancestors (parents).\n\nIf set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\nThis is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n\nNote that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6192,
            "description": "A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\nobject. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\nuse this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.",
            "itemtype": "property",
            "name": "cursor",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6204,
            "itemtype": "property",
            "name": "_cacheOffsetX",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6212,
            "itemtype": "property",
            "name": "_cacheOffsetY",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6220,
            "itemtype": "property",
            "name": "_filterOffsetX",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6228,
            "itemtype": "property",
            "name": "_filterOffsetY",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6236,
            "itemtype": "property",
            "name": "_cacheScale",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6244,
            "itemtype": "property",
            "name": "_cacheDataURLID",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6252,
            "itemtype": "property",
            "name": "_cacheDataURL",
            "access": "protected",
            "tagname": "",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6260,
            "itemtype": "property",
            "name": "_props",
            "access": "protected",
            "tagname": "",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6268,
            "itemtype": "property",
            "name": "_rectangle",
            "access": "protected",
            "tagname": "",
            "type": "{Rectangle}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6276,
            "itemtype": "property",
            "name": "_bounds",
            "access": "protected",
            "tagname": "",
            "type": "{Rectangle}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6290,
            "description": "Listing of mouse event names. Used in _hasMouseEventListener.",
            "itemtype": "property",
            "name": "_MOUSE_EVENTS",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "type": "{Array}",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6299,
            "description": "Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\nwith cross domain content.",
            "itemtype": "property",
            "name": "suppressCrossDomainErrors",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6309,
            "itemtype": "property",
            "name": "_snapToPixelEnabled",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6318,
            "itemtype": "property",
            "name": "_hitTestCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6324,
            "itemtype": "property",
            "name": "_hitTestContext",
            "type": "{CanvasRenderingContext2D}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6337,
            "itemtype": "property",
            "name": "_nextCacheID",
            "type": "{Number}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6347,
            "description": "Dispatched when the user presses their left mouse button over the display object. See the \n{{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mousedown",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6354,
            "description": "Dispatched when the user presses their left mouse button and then releases it while over the display object.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "click",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6361,
            "description": "Dispatched when the user double clicks their left mouse button over this display object.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "dblclick",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6368,
            "description": "Dispatched when the user's mouse enters this display object. This event must be enabled using \n{{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseover",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6376,
            "description": "Dispatched when the user's mouse leaves this display object. This event must be enabled using \n{{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseout",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6384,
            "description": "This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\ndifferences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\naggregate of their content.\n\nFor example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\nshapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\nmyContainer, two events would be received, each targeting a child element:<OL>\n<LI>when the mouse enters shapeA (target=shapeA)</LI>\n<LI>when the mouse enters shapeB (target=shapeB)</LI>\n</OL>\nHowever, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\nthe aggregate myContainer content (target=myContainer).\n\nThis event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "rollover",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6404,
            "description": "This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\ndifferences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\naggregate of their content.\n\nFor example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\nshapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\non myContainer, two events would be received, each targeting a child element:<OL>\n<LI>when the mouse leaves shapeA (target=shapeA)</LI>\n<LI>when the mouse leaves shapeB (target=shapeB)</LI>\n</OL>\nHowever, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\nthe aggregate myContainer content (target=myContainer).\n\nThis event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "rollout",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6424,
            "description": "After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\nevent will be generated on that object whenever the mouse moves until the mouse press is released. This can be\nuseful for dragging and similar operations.",
            "itemtype": "event",
            "name": "pressmove",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6432,
            "description": "After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\nwill be generated on that object when that mouse press is released. This can be useful for dragging and similar\noperations.",
            "itemtype": "event",
            "name": "pressup",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6440,
            "description": "Dispatched when the display object is added to a parent container.",
            "itemtype": "event",
            "name": "added",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6445,
            "description": "Dispatched when the display object is removed from its parent container.",
            "itemtype": "event",
            "name": "removed",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6450,
            "description": "Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\nrendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\nthe stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n{{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\ndispatched on their parent.",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "An array containing any arguments that were passed to the Stage.update() method. For\n     example if you called stage.update(\"hello\"), then the params would be [\"hello\"].",
                    "type": "Array"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6466,
            "description": "Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getStage",
            "return": {
                "description": "",
                "type": "Stage"
            },
            "deprecated": true,
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6480,
            "description": "Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.",
            "itemtype": "property",
            "name": "stage",
            "type": "{Stage}",
            "readonly": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6494,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6506,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns <code>true</code> if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache. For example,\nused for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6525,
            "description": "Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\nto the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "updateContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D to update.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6557,
            "description": "Draws the display object into a new canvas, which is then used for subsequent draws. For complex content\nthat does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\nthis can provide for much faster rendering because the content does not need to be re-rendered each tick. The\ncached display object can be moved, rotated, faded, etc freely, however if its content changes, you must\nmanually update the cache by calling <code>updateCache()</code> or <code>cache()</code> again. You must specify\nthe cache area via the x, y, w, and h parameters. This defines the rectangle that will be rendered and cached\nusing this display object's coordinates.\n\n<h4>Example</h4>\nFor example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\n     var shape = new createjs.Shape();\n     shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n     myShape.cache(-25, -25, 50, 50);\n\nNote that filters need to be defined <em>before</em> the cache is applied. Check out the {{#crossLink \"Filter\"}}{{/crossLink}}\nclass for more information. Some filters (ex. BlurFilter) will not work as expected in conjunction with the scale param.\n\nUsually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\nwill add padding to the canvas dimensions.",
            "itemtype": "method",
            "name": "cache",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the cache region.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the cache region.",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "The scale at which the cache will be created. For example, if you cache a vector shape using\n\tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\tcached elements with greater fidelity. Default is 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6600,
            "description": "Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\nIf compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\nwill be drawn over the existing cache using the specified compositeOperation.\n\n<h4>Example</h4>\nClear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\nwill be drawn on top of the old one.\n\n     // Not shown: Creating the shape, and caching it.\n     shapeInstance.clear();\n     shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n     shapeInstance.updateCache();",
            "itemtype": "method",
            "name": "updateCache",
            "params": [
                {
                    "name": "compositeOperation",
                    "description": "The compositeOperation to use, or null to clear the cache and redraw it.\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\nwhatwg spec on compositing</a>.",
                    "type": "String"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6649,
            "description": "Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6659,
            "description": "Returns a data URL for the cache, or null if this display object is not cached.\nUses cacheID to ensure a new data URL is not generated if the cache has not changed.",
            "itemtype": "method",
            "name": "getCacheDataURL",
            "return": {
                "description": "The image data url for the cache.",
                "type": "String"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6671,
            "description": "Transforms the specified x and y position from the coordinate space of the display object\nto the global (stage) coordinate space. For example, this could be used to position an HTML label\nover a specific point on a nested display object. Returns a Point instance with x and y properties\ncorrelating to the transformed coordinates on the stage.\n\n<h4>Example</h4>\n\n     displayObject.x = 300;\n     displayObject.y = 200;\n     stage.addChild(displayObject);\n     var point = displayObject.localToGlobal(100, 100);\n     // Results in x=400, y=300",
            "itemtype": "method",
            "name": "localToGlobal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a new Point object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A Point instance with x and y properties correlating to the transformed coordinates\non the stage.",
                "type": "Point"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6696,
            "description": "Transforms the specified x and y position from the global (stage) coordinate space to the\ncoordinate space of the display object. For example, this could be used to determine\nthe current mouse position within the display object. Returns a Point instance with x and y properties\ncorrelating to the transformed position in the display object's coordinate space.\n\n<h4>Example</h4>\n\n     displayObject.x = 300;\n     displayObject.y = 200;\n     stage.addChild(displayObject);\n     var point = displayObject.globalToLocal(100, 100);\n     // Results in x=-200, y=-100",
            "itemtype": "method",
            "name": "globalToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position on the stage to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position on the stage to transform.",
                    "type": "Number"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a new Point object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A Point instance with x and y properties correlating to the transformed position in the\ndisplay object's coordinate space.",
                "type": "Point"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6721,
            "description": "Transforms the specified x and y position from the coordinate space of this display object to the coordinate\nspace of the target display object. Returns a Point instance with x and y properties correlating to the\ntransformed position in the target's coordinate space. Effectively the same as using the following code with\n{{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\n     var pt = this.localToGlobal(x, y);\n     pt = target.globalToLocal(pt.x, pt.y);",
            "itemtype": "method",
            "name": "localToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position on the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "target",
                    "description": "The target display object to which the coordinates will be transformed.",
                    "type": "DisplayObject"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a new Point object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns a Point instance with x and y properties correlating to the transformed position\nin the target's coordinate space.",
                "type": "Point"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6743,
            "description": "Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\nOmitted parameters will have the default value set.\n\n<h4>Example</h4>\n\n     displayObject.setTransform(100, 100, 2, 2);",
            "itemtype": "method",
            "name": "setTransform",
            "params": [
                {
                    "name": "x",
                    "description": "The horizontal translation (x position) in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "The vertical translation (y position) in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "scaleX",
                    "description": "The horizontal scale, as a percentage of 1",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "scaleY",
                    "description": "the vertical scale, as a percentage of 1",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "rotation",
                    "description": "The rotation, in degrees",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "skewX",
                    "description": "The horizontal skew factor",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "skewY",
                    "description": "The vertical skew factor",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "regX",
                    "description": "The horizontal registration point in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "regY",
                    "description": "The vertical registration point in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns this instance. Useful for chaining commands.",
                "type": "DisplayObject"
            },
            "chainable": 1,
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6777,
            "description": "Returns a matrix based on this object's current transform.",
            "itemtype": "method",
            "name": "getMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "Optional. A Matrix2D object to populate with the calculated values. If null, a new\nMatrix object is returned.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "A matrix representing this display object's transform.",
                "type": "Matrix2D"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6789,
            "description": "Generates a Matrix2D object representing the combined transform of the display object and all of its\nparent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\nbe used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\nand {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getConcatenatedMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\nIf null, a new Matrix2D object is returned.",
                    "type": "Matrix2D",
                    "optional": true
                }
            ],
            "return": {
                "description": "The combined matrix.",
                "type": "Matrix2D"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6807,
            "description": "Generates a DisplayProps object representing the combined display properties of the  object and all of its\nparent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).",
            "itemtype": "method",
            "name": "getConcatenatedDisplayProps",
            "params": [
                {
                    "name": "props",
                    "description": "A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\nIf null, a new DisplayProps object is returned.",
                    "type": "DisplayProps",
                    "optional": true
                }
            ],
            "return": {
                "description": "The combined display properties.",
                "type": "DisplayProps"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6828,
            "description": "Tests whether the display object intersects the specified point in <em>local</em> coordinates (ie. draws a pixel\nwith alpha > 0 at the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation\nof the display object.\n\n<h4>Example</h4>\n\n\t\tvar myShape = new createjs.Shape();\n\t\tmyShape.graphics.beginFill(\"red\").drawRect(100, 100, 20, 50);\n\n\t\tconsole.log(myShape.hitTest(10,10); // false\n\t\tconsole.log(myShape.hitTest(110, 25); // true\n\nNote that to use Stage coordinates (such as {{#crossLink \"Stage/mouseX:property\"}}{{/crossLink}}), they must\nfirst be converted to local coordinates:\n\n     stage.addEventListener(\"stagemousedown\", handleMouseDown);\n     function handleMouseDown(event) {\n     \tvar p = myShape.globalToLocal(stage.mouseX, stage.mouseY);\n         var hit = myShape.hitTest(p.x, p.y);\n     }\n\nShape-to-shape collision is not currently supported by EaselJS.",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to check in the display object's local coordinates.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to check in the display object's local coordinates.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\nlocal Point.",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6869,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n     var shape = stage.addChild(new createjs.Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the DisplayObject instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "DisplayObject"
            },
            "chainable": 1,
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6887,
            "description": "Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\nObjects that have been cached will return the bounds of the cache.\n\nNot all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n{{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\nbounds.\n\n<table>\n\t<tr><td><b>All</b></td><td>\n\t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t\tthe automatic calculations listed below.\n\t</td></tr>\n\t<tr><td><b>Bitmap</b></td><td>\n\t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t</td></tr>\n\t<tr><td><b>Sprite</b></td><td>\n\t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n\t</td></tr>\n\t<tr><td><b>Container</b></td><td>\n\t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t</td></tr>\n\t<tr><td><b>Shape</b></td><td>\n\t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t</td></tr>\n\t<tr><td><b>Text</b></td><td>\n\t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t\tnot, especially when using textBaseline values other than \"top\".\n\t</td></tr>\n\t<tr><td><b>BitmapText</b></td><td>\n\t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t\tto (x=0,y=0).\n\t</td></tr>\n</table>\n\nBounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\nare recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\nbounds explicitly:\n\n\tvar bounds = obj.getBounds();\n\tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t// getBounds will now use the set values, instead of recalculating\n\nTo reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\nvalues if you need to retain it.\n\n\tvar myBounds = obj.getBounds().clone();\n\t// OR:\n\tmyRect.copy(obj.getBounds());",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "A Rectangle instance representing the bounds, or null if bounds are not available for this\nobject.",
                "type": "Rectangle"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6953,
            "description": "Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\nObjects that have been cached will return the transformed bounds of the cache.\n\nNot all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n{{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\nbounds.\n\nTo reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\nvalues if you need to retain it.\n\nContainer instances calculate aggregate bounds for all children that return bounds via getBounds.",
            "itemtype": "method",
            "name": "getTransformedBounds",
            "return": {
                "description": "A Rectangle instance representing the bounds, or null if bounds are not available for this object.",
                "type": "Rectangle"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6972,
            "description": "Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\nText) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\noverride calculated bounds.\n\nThe bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\nwith a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).",
            "itemtype": "method",
            "name": "setBounds",
            "params": [
                {
                    "name": "x",
                    "description": "The x origin of the bounds. Pass null to remove the manual bounds.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y origin of the bounds.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the bounds.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the bounds.",
                    "type": "Number"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 6990,
            "description": "Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\nreverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\nare copied by reference (masks, individual filter instances, hit area)",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current DisplayObject instance.",
                "type": "DisplayObject"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7001,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7013,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "The DisplayObject instance which will have properties from the current DisplayObject\ninstance copied into.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "o",
                "type": "DisplayObject"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7046,
            "itemtype": "method",
            "name": "_applyShadow",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "shadow",
                    "description": "",
                    "type": "Shadow"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7061,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7077,
            "itemtype": "method",
            "name": "_testHit",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7094,
            "itemtype": "method",
            "name": "_applyFilters",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7109,
            "itemtype": "method",
            "name": "_getFilterBounds",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7125,
            "itemtype": "method",
            "name": "_getBounds",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "If true, does not apply this object's transform.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7136,
            "itemtype": "method",
            "name": "_transformBounds",
            "params": [
                {
                    "name": "bounds",
                    "description": "",
                    "type": "Rectangle"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7169,
            "description": "Indicates whether the display object has any mouse event listeners or a cursor.",
            "itemtype": "method",
            "name": "_isMouseOpaque",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7222,
            "description": "The array of children in the display list. You should usually use the child management methods such as\n{{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n{{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\nincluded for advanced uses.",
            "itemtype": "property",
            "name": "children",
            "type": "Array",
            "default": "null",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7233,
            "description": "Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\nIf false, the children will be aggregated under the container - for example, a click on a child shape would\ntrigger a click event on the container.",
            "itemtype": "property",
            "name": "mouseChildren",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7243,
            "description": "If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\nIn addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\non some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).",
            "itemtype": "property",
            "name": "tickChildren",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7257,
            "description": "Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getNumChildren",
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7267,
            "description": "Returns the number of children in the container.",
            "itemtype": "property",
            "name": "numChildren",
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7281,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7289,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7302,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7331,
            "description": "Adds a child to the top of the display list.\n\n<h4>Example</h4>\n\n\t\tcontainer.addChild(bitmapInstance);\n\nYou can also add multiple children at once:\n\n\t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7360,
            "description": "Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\nsetting its parent to this Container.\n\n<h4>Example</h4>\n\n     addChildAt(child1, index);\n\nYou can also add multiple children, such as:\n\n     addChildAt(child1, child2, ..., index);\n\nThe index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\nyou could use:\n\n     container.addChildAt(myShape, container.getChildIndex(otherShape));\n\nThis would also bump otherShape's index up by one. Fails silently if the index is out of range.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to add the child at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the last child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7399,
            "description": "Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\nalready known.\n\n<h4>Example</h4>\n\n     container.removeChild(child);\n\nYou can also remove multiple children:\n\n     removeChild(child1, child2, ...);\n\nReturns true if the child (or children) was removed, or false if it was not in the display list.",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "The child to remove.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "true if the child (or children) was removed, or false if it was not in the display list.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7426,
            "description": "Removes the child at the specified index from the display list, and sets its parent to null.\n\n<h4>Example</h4>\n\n     container.removeChildAt(2);\n\nYou can also remove multiple children:\n\n     container.removeChild(2, 7, ...)\n\nReturns true if the child (or children) was removed, or false if any index was out of range.",
            "itemtype": "method",
            "name": "removeChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the child to remove.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "true if the child (or children) was removed, or false if any index was out of range.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7460,
            "description": "Removes all children from the display list.\n\n<h4>Example</h4>\n\n\tcontainer.removeAllChildren();",
            "itemtype": "method",
            "name": "removeAllChildren",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7474,
            "description": "Returns the child at the specified index.\n\n<h4>Example</h4>\n\n     container.getChildAt(2);",
            "itemtype": "method",
            "name": "getChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the child to return.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The child at the specified index. Returns null if there is no child at the index.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7489,
            "description": "Returns the child with the specified name.",
            "itemtype": "method",
            "name": "getChildByName",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the child to return.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The child with the specified name.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7503,
            "description": "Performs an array sort operation on the child list.\n\n<h4>Example: Display children with a higher y in front.</h4>\n\n     var sortFunction = function(obj1, obj2, options) {\n         if (obj1.y > obj2.y) { return 1; }\n         if (obj1.y < obj2.y) { return -1; }\n         return 0;\n     }\n     container.sortChildren(sortFunction);",
            "itemtype": "method",
            "name": "sortChildren",
            "params": [
                {
                    "name": "sortFunction",
                    "description": "the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\ndocumentation for details.",
                    "type": "Function"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7523,
            "description": "Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\n<h4>Example</h4>\n\n     var index = container.getChildIndex(child);",
            "itemtype": "method",
            "name": "getChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "The child to return the index of.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The index of the specified child. -1 if the child is not found.",
                "type": "Number"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7538,
            "description": "Swaps the children at the specified indexes. Fails silently if either index is out of range.",
            "itemtype": "method",
            "name": "swapChildrenAt",
            "params": [
                {
                    "name": "index1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "index2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7553,
            "description": "Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\nContainer.",
            "itemtype": "method",
            "name": "swapChildren",
            "params": [
                {
                    "name": "child1",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "child2",
                    "description": "",
                    "type": "DisplayObject"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7573,
            "description": "Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "setChildIndex",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7590,
            "description": "Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\nof this container.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObject to be checked.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "true if the specified display object either is this container or is a descendent.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7605,
            "description": "Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\nspecified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\ntransform properties including regX/Y.",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to check in the display object's local coordinates.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to check in the display object's local coordinates.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\ncoordinates.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7620,
            "description": "Returns an array of all display objects under the specified coordinates that are in this container's display\nlist. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\nset to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\nThis uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\nFor example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\nand only if the mouse's position has changed.\n\n<ul>\n    <li>By default (mode=0) this method evaluates all display objects.</li>\n    <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n\t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n\t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n\t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n</li>\n\nThis method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "mode",
                    "description": "The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "An Array of DisplayObjects under the specified coordinates.",
                "type": "Array"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7652,
            "description": "Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\nobject. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\noperation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "getObjectUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "mode",
                    "description": "The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The top-most display object under the specified coordinates.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7667,
            "description": "Docced in superclass.",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7675,
            "description": "Docced in superclass.",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7682,
            "description": "Returns a clone of this Container. Some properties that are specific to this instance's current context are\nreverted to their defaults (for example .parent).",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "recursive",
                    "description": "If true, all of the descendants of this container will be cloned recursively. If false, the\nproperties of the container will be cloned, but the new instance will not have any children.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A clone of the current Container instance.",
                "type": "Container"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7696,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7707,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7722,
            "description": "Recursively clones all children of this container, and adds them to the target container.",
            "itemtype": "method",
            "name": "cloneChildren",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "o",
                    "description": "The target container.",
                    "type": "Container"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7738,
            "itemtype": "method",
            "name": "_getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "mouse",
                    "description": "If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.",
                    "type": "Boolean"
                },
                {
                    "name": "activeListener",
                    "description": "If true, there is an active mouse event listener on a parent object.",
                    "type": "Boolean"
                },
                {
                    "name": "currentDepth",
                    "description": "Indicates the current depth of the search.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "DisplayObject"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7792,
            "itemtype": "method",
            "name": "_testMask",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Indicates whether the x/y is within the masked region.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7823,
            "itemtype": "method",
            "name": "_getBounds",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "If true, does not apply this object's transform.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7891,
            "description": "Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\nto manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\nexample).\n\n<h4>Example</h4>\n\n     var stage = new createjs.Stage(\"canvasId\");\n     stage.autoClear = false;",
            "itemtype": "property",
            "name": "autoClear",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7907,
            "description": "The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\nfirst stage that will be ticked (or they will clear each other's render).\n\nWhen changing the canvas property you must disable the events on the old canvas, and enable events on the\nnew canvas or mouse events will not work as expected. For example:\n\n     myStage.enableDOMEvents(false);\n     myStage.canvas = anotherCanvas;\n     myStage.enableDOMEvents(true);",
            "itemtype": "property",
            "name": "canvas",
            "type": "HTMLCanvasElement | Object",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7923,
            "description": "The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\nposition over the canvas, and mouseInBounds will be set to false.",
            "itemtype": "property",
            "name": "mouseX",
            "type": "Number",
            "readonly": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7932,
            "description": "The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\nposition over the canvas, and mouseInBounds will be set to false.",
            "itemtype": "property",
            "name": "mouseY",
            "type": "Number",
            "readonly": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7941,
            "description": "Specifies the area of the stage to affect when calling update. This can be use to selectively\nre-draw specific regions of the canvas. If null, the whole canvas area is drawn.",
            "itemtype": "property",
            "name": "drawRect",
            "type": "{Rectangle}",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7949,
            "description": "Indicates whether display objects should be rendered on whole pixels. You can set the\n{{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\ndisplay objects to false to enable/disable this behaviour on a per instance basis.",
            "itemtype": "property",
            "name": "snapToPixelEnabled",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7959,
            "description": "Indicates whether the mouse is currently within the bounds of the canvas.",
            "itemtype": "property",
            "name": "mouseInBounds",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7967,
            "description": "If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.",
            "itemtype": "property",
            "name": "tickOnUpdate",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7975,
            "description": "If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n{{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nx/y/rawX/rawY.",
            "itemtype": "property",
            "name": "mouseMoveOutside",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7986,
            "description": "Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\nThis works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.",
            "itemtype": "property",
            "name": "preventSelection",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 7995,
            "description": "The hitArea property is not supported for Stage.",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8004,
            "description": "Holds objects with data for each active pointer id. Each object has the following properties:\nx, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)",
            "itemtype": "property",
            "name": "_pointerData",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8013,
            "description": "Number of active pointers.",
            "itemtype": "property",
            "name": "_pointerCount",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8021,
            "description": "The ID of the primary pointer.",
            "itemtype": "property",
            "name": "_primaryPointerID",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8029,
            "itemtype": "property",
            "name": "_mouseOverIntervalID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8036,
            "itemtype": "property",
            "name": "_nextStage",
            "access": "protected",
            "tagname": "",
            "type": "Stage",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8043,
            "itemtype": "property",
            "name": "_prevStage",
            "access": "protected",
            "tagname": "",
            "type": "Stage",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8056,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8071,
            "description": "Dispatched when the user moves the mouse over the canvas.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemousemove",
            "since": "0.6.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8078,
            "description": "Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nclass for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemousedown",
            "since": "0.6.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8085,
            "description": "Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\nYou can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemouseup",
            "since": "0.6.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8093,
            "description": "Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\nThis is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nclass for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseleave",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8101,
            "description": "Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\nThis is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nclass for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseenter",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8109,
            "description": "Dispatched each update immediately before the tick event is propagated through the display list.\nYou can call preventDefault on the event object to cancel propagating the tick event.",
            "itemtype": "event",
            "name": "tickstart",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8116,
            "description": "Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\ntickOnUpdate is false. Precedes the \"drawstart\" event.",
            "itemtype": "event",
            "name": "tickend",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8123,
            "description": "Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\nYou can call preventDefault on the event object to cancel the draw.",
            "itemtype": "event",
            "name": "drawstart",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8130,
            "description": "Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.",
            "itemtype": "event",
            "name": "drawend",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8138,
            "description": "Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\nThis can be useful in cases where you have multiple layered canvases and want user interactions\nevents to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\n     topStage.nextStage = bottomStage;\n\nTo disable relaying, set nextStage to null.\n\nMouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\nof the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\nConsiderations when using roll over in relay targets:<OL>\n<LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n<LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n<LI> All relay targets will share the frequency value of the top-most stage</LI>\n</OL>\nTo illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n30 as it's desired frequency):\n\ttopStage.nextStage = targetStage;\n\ttopStage.enableMouseOver(10);\n\ttargetStage.enableMouseOver(30);\n\nIf the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\nDOM events using:\n\n\ttargetStage.enableDOMEvents(false);",
            "itemtype": "property",
            "name": "nextStage",
            "type": "{Stage}",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8185,
            "description": "Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\nunless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\nand then render the display list to the canvas.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "props",
                    "description": "Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8216,
            "description": "Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\nunless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\nIf a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\npropagated to listeners.\n\nSome time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\na {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\npassed as the `props` parameter to `tick()`. For example:\n\n\tTicker.on(\"tick\", handleTick);\n\tfunction handleTick(evtObj) {\n\t\t// clone the event object from Ticker, and add some custom data to it:\n\t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t\t\n\t\t// pass it to stage.update():\n\t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t}\n\t\n\t// ...\n\tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\tfunction handleDisplayObjectTick(evt) {\n\t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t}",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "props",
                    "description": "An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8258,
            "description": "Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\nevent is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\ndirectly, using:\n\n     Ticker.addEventListener(\"tick\", myStage\");\n\nNote that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\ndisplay object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.",
            "itemtype": "property",
            "name": "handleEvent",
            "type": "Function",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8274,
            "description": "Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.",
            "itemtype": "method",
            "name": "clear",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8285,
            "description": "Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\nbe specified as the src value of an image element.",
            "itemtype": "method",
            "name": "toDataURL",
            "params": [
                {
                    "name": "backgroundColor",
                    "description": "The background color to be used for the generated image. Any valid CSS color\nvalue is allowed. The default value is a transparent background.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "mimeType",
                    "description": "The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\nis passed in, or if the browser does not support the specified MIME type, the default value will be used.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"image/png\""
                }
            ],
            "return": {
                "description": "a Base64 encoded image.",
                "type": "String"
            },
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8317,
            "description": "Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\nand {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\nand {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\nbe expensive to generate, so they are disabled by default. The frequency of the events can be controlled\nindependently of mouse move events via the optional `frequency` parameter.\n\n<h4>Example</h4>\n\n     var stage = new createjs.Stage(\"canvasId\");\n     stage.enableMouseOver(10); // 10 updates per second",
            "itemtype": "method",
            "name": "enableMouseOver",
            "params": [
                {
                    "name": "frequency",
                    "description": "Optional param specifying the maximum number of times per second to broadcast\nmouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\nresponsive, but uses less CPU.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "20"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8348,
            "description": "Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\npractice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\nevents from the page.\n\nWhen changing the canvas property you must disable the events on the old canvas, and enable events on the\nnew canvas or mouse events will not work as expected. For example:\n\n     myStage.enableDOMEvents(false);\n     myStage.canvas = anotherCanvas;\n     myStage.enableDOMEvents(true);",
            "itemtype": "method",
            "name": "enableDOMEvents",
            "params": [
                {
                    "name": "enable",
                    "description": "Indicates whether to enable or disable the events. Default is true.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8388,
            "description": "Stage instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8396,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8407,
            "itemtype": "method",
            "name": "_getElementRect",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8435,
            "itemtype": "method",
            "name": "_getPointerData",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8446,
            "itemtype": "method",
            "name": "_handleMouseMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8456,
            "itemtype": "method",
            "name": "_handlePointerMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8484,
            "itemtype": "method",
            "name": "_updatePointerPosition",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8521,
            "itemtype": "method",
            "name": "_handleMouseUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8530,
            "itemtype": "method",
            "name": "_handlePointerUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "clear",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8558,
            "itemtype": "method",
            "name": "_handleMouseDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8567,
            "itemtype": "method",
            "name": "_handlePointerDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8590,
            "itemtype": "method",
            "name": "_testMouseOver",
            "params": [
                {
                    "name": "clear",
                    "description": "If true, clears the mouseover / rollover (ie. no target)",
                    "type": "Boolean"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                },
                {
                    "name": "eventTarget",
                    "description": "The stage that the cursor is actively over.",
                    "type": "Stage"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8659,
            "itemtype": "method",
            "name": "_handleDoubleClick",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8674,
            "itemtype": "method",
            "name": "_dispatchMouseEvent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "pointerId",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "nativeEvent",
                    "description": "",
                    "type": "MouseEvent",
                    "optional": true
                },
                {
                    "name": "relatedTarget",
                    "description": "",
                    "type": "DisplayObject",
                    "optional": true
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8743,
            "description": "The image to render. This can be an Image, a Canvas, or a Video. Not all browsers (especially\nmobile browsers) support drawing video to a canvas.",
            "itemtype": "property",
            "name": "image",
            "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8756,
            "description": "Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\nNote that video sources must have a width / height set to work correctly with `sourceRect`.",
            "itemtype": "property",
            "name": "sourceRect",
            "type": "Rectangle",
            "default": "null",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8769,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8777,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8791,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8823,
            "description": "Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\nYou should <b>not</b> cache Bitmap instances as it can degrade performance.\n\n<strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\nTo see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "cache",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8833,
            "description": "Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\nYou should <b>not</b> cache Bitmap instances as it can degrade performance.\n\n<strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\nTo see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "updateCache",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8843,
            "description": "Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\nYou should <b>not</b> cache Bitmap instances as it can degrade performance.\n\n<strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\nTo see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8853,
            "description": "Docced in superclass.",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8864,
            "description": "Returns a clone of the Bitmap instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Bitmap instance.",
                "type": "Bitmap"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8876,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8928,
            "description": "The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\ndefinitions, this will advance non-sequentially. This will always be an integer value.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "{Number}",
            "default": "0",
            "readonly": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8938,
            "description": "Returns the name of the currently playing animation.",
            "itemtype": "property",
            "name": "currentAnimation",
            "type": "{String}",
            "final": 1,
            "readonly": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8947,
            "description": "Prevents the animation from advancing each tick automatically. For example, you could create a sprite\nsheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.",
            "itemtype": "property",
            "name": "paused",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8956,
            "description": "The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\ndata. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "{SpriteSheet}",
            "readonly": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8965,
            "description": "Specifies the current frame index within the currently playing animation. When playing normally, this will increase\nfrom 0 to n-1, where n is the number of frames in the current animation.\n\nThis could be a non-integer value if\nusing time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\nnot an integer.",
            "itemtype": "property",
            "name": "currentAnimationFrame",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8978,
            "description": "By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\nSpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\nframerate.\n\nFor example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\nadvance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\nvary slightly between frames.\n\nThis feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\npassed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "framerate",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 8997,
            "description": "Current animation object.",
            "itemtype": "property",
            "name": "_animation",
            "access": "protected",
            "tagname": "",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9006,
            "description": "Current frame index.",
            "itemtype": "property",
            "name": "_currentFrame",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9015,
            "description": "Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame",
            "itemtype": "property",
            "name": "_skipAdvance",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9029,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9039,
            "description": "Dispatched when an animation reaches its ends.",
            "itemtype": "event",
            "name": "animationend",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The name of the animation that just ended.",
                    "type": "String"
                },
                {
                    "name": "next",
                    "description": "The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9049,
            "description": "Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\nor calling gotoAndPlay() or gotoAndStop().",
            "itemtype": "event",
            "name": "change",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9059,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9071,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9094,
            "description": "Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\nYou should not cache Sprite instances as it can degrade performance.",
            "itemtype": "method",
            "name": "cache",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9100,
            "description": "Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\nYou should not cache Sprite instances as it can degrade performance.",
            "itemtype": "method",
            "name": "updateCache",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9106,
            "description": "Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\nYou should not cache Sprite instances as it can degrade performance.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9112,
            "description": "Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\nor {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\nunchanged.",
            "itemtype": "method",
            "name": "play",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9122,
            "description": "Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\nis called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\nwill resume playback.",
            "itemtype": "method",
            "name": "stop",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9132,
            "description": "Sets paused to false and plays the specified animation name, named frame, or frame number.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name that the playhead should move to\nand begin playing.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9144,
            "description": "Sets paused to true and seeks to the specified animation name, named frame, or frame number.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name that the playhead should move to\nand stop.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9155,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "params": [
                {
                    "name": "time",
                    "description": "The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\nor its SpriteSheet.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "advance",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9167,
            "description": "Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\nthe origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\nrectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\nAlso see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\nloaded.",
                "type": "Rectangle"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9182,
            "description": "Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\ninstances.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Sprite instance.",
                "type": "Sprite"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9192,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9202,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": "o",
                "type": "Sprite"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9222,
            "description": "Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\nticks.",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_tick",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9238,
            "description": "Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_normalizeFrame",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9289,
            "description": "Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n{{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)",
            "itemtype": "property",
            "name": "_dispatchAnimationEnd",
            "access": "private",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9311,
            "description": "Moves the playhead to the specified frame number or animation.",
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation that the playhead should move to.",
                    "type": "String|Number"
                },
                {
                    "name": "frame",
                    "description": "The frame of the animation to go to. Defaults to 0.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9377,
            "description": "The graphics instance to display.",
            "itemtype": "property",
            "name": "graphics",
            "type": "Graphics",
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9391,
            "description": "Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the Shape would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9403,
            "description": "Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\nthe draw was handled (useful for overriding functionality).\n\n<i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache. For example,\nused for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9420,
            "description": "Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\ntheir defaults (for example .parent).",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "recursive",
                    "description": "If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\ncloned. If false, the Graphics instance will be shared with the new Shape.",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9432,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9490,
            "description": "The text to display.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9497,
            "description": "The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9504,
            "description": "The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\nIt will also accept valid canvas fillStyle values.",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9512,
            "description": "The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\ninformation view the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>. Default is \"left\".",
            "itemtype": "property",
            "name": "textAlign",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9522,
            "description": "The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>. Default is \"top\".",
            "itemtype": "property",
            "name": "textBaseline",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9531,
            "description": "The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\nshrunk to make it fit in this width. For detailed information view the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9541,
            "description": "If greater than 0, the text will be drawn as a stroke (outline) of the specified width.",
            "itemtype": "property",
            "name": "outline",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9548,
            "description": "Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\nthe value of getMeasuredLineHeight is used.",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9556,
            "description": "Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\nthe text will not be wrapped.",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9571,
            "itemtype": "property",
            "name": "_workingContext",
            "type": "CanvasRenderingContext2D",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9581,
            "description": "Lookup table for the ratio to offset bounds x calculations based on the textAlign property.",
            "itemtype": "property",
            "name": "H_OFFSETS",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9590,
            "description": "Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.",
            "itemtype": "property",
            "name": "H_OFFSETS",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9601,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9613,
            "description": "Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9634,
            "description": "Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.",
            "itemtype": "method",
            "name": "getMeasuredWidth",
            "return": {
                "description": "The measured, untransformed width of the text.",
                "type": "Number"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9643,
            "description": "Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\nwidth of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.",
            "itemtype": "method",
            "name": "getMeasuredLineHeight",
            "return": {
                "description": "an approximate line height of the text, ignoring the lineHeight property. This is\nbased on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.",
                "type": "Number"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9654,
            "description": "Returns the approximate height of multi-line text by multiplying the number of lines against either the\n<code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\nthis operation requires the text flowing logic to run, which has an associated CPU cost.",
            "itemtype": "method",
            "name": "getMeasuredHeight",
            "return": {
                "description": "The approximate height of the untransformed multi-line text.",
                "type": "Number"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9665,
            "description": "Docced in superclass.",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9680,
            "description": "Returns an object with width, height, and lines properties. The width and height are the visual width and height\nof the drawn text. The lines property contains an array of strings, one for\neach line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\nwhitespace removed.",
            "itemtype": "method",
            "name": "getMetrics",
            "return": {
                "description": "An object with width, height, and lines properties.",
                "type": "Object"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9695,
            "description": "Returns a clone of the Text instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Text instance.",
                "type": "Text"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9704,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9715,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Text"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "o",
                "type": "Text"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9732,
            "itemtype": "method",
            "name": "_getWorkingContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "return": {
                "description": "",
                "type": "CanvasRenderingContext2D"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9745,
            "description": "Draws multiline text.",
            "itemtype": "method",
            "name": "_drawText",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "lines",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9807,
            "itemtype": "method",
            "name": "_drawTextLine",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9821,
            "itemtype": "method",
            "name": "_getMeasuredWidth",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9868,
            "description": "The text to display.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "\"\"",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9876,
            "description": "A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\nshould have a single frame animation defined in the sprite sheet named the same as\ncorresponding character. For example, the following animation definition:\n\n\t\t\"A\": {frames: [0]}\n\nwould indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\nis also acceptable:\n\n\t\t\"A\": 0\n\nNote that if a character in the text is not found in the sprite sheet, it will also\ntry to use the alternate case (upper or lower).\n\nSee SpriteSheet for more information on defining sprite sheet data.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "SpriteSheet",
            "default": "null",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9898,
            "description": "The height of each line of text. If 0, then it will use a line height calculated\nby checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\nthose characters are not defined, it will use the height of the first frame of the\nsprite sheet.",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "default": "0",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9909,
            "description": "This spacing (in pixels) will be added after each character in the output.",
            "itemtype": "property",
            "name": "letterSpacing",
            "type": "Number",
            "default": "0",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9917,
            "description": "If a space character is not defined in the sprite sheet, then empty pixels equal to\nspaceWidth will be inserted instead. If 0, then it will use a value calculated\nby checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\nthose characters are not defined, it will use the width of the first frame of the\nsprite sheet.",
            "itemtype": "property",
            "name": "spaceWidth",
            "type": "Number",
            "default": "0",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9931,
            "itemtype": "property",
            "name": "_oldProps",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9940,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9954,
            "description": "BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\nan internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\nretained, slightly increasing memory use, but reducing instantiation.",
            "itemtype": "property",
            "name": "maxPoolSize",
            "type": "Number",
            "static": 1,
            "default": "100",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9965,
            "description": "Sprite object pool.",
            "type": "{Array}",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9975,
            "description": "Docced in superclass.",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9984,
            "description": "Docced in superclass.",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 9992,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10008,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "addChild",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10012,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "addChildAt",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10016,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "removeChild",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10020,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "removeChildAt",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10024,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "removeAllChildren",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10032,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "BitmapText"
                }
            ],
            "return": {
                "description": "o",
                "type": "BitmapText"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10046,
            "itemtype": "method",
            "name": "_getFrameIndex",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10062,
            "itemtype": "method",
            "name": "_getFrame",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10074,
            "itemtype": "method",
            "name": "_getLineHeight",
            "params": [
                {
                    "name": "ss",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10084,
            "itemtype": "method",
            "name": "_getSpaceWidth",
            "params": [
                {
                    "name": "ss",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10095,
            "itemtype": "method",
            "name": "_drawText",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10228,
            "description": "Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\nSee each constant for a description of the behaviour.",
            "itemtype": "property",
            "name": "mode",
            "type": "String",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10237,
            "description": "Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.",
            "itemtype": "property",
            "name": "startPosition",
            "type": "Number",
            "default": "0",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10245,
            "description": "Indicates whether this MovieClip should loop when it reaches the end of its timeline.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10253,
            "description": "The current frame of the movieclip.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10262,
            "description": "The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\ninstance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\ninstances to the timeline.\n\n<h4>Example</h4>\n\n     var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n     var mc = new createjs.MovieClip();\n     mc.timeline.addTween(tween);\n\nElements can be added and removed from the timeline by toggling an \"_off\" property\nusing the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\ncreate MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\nframe 1. You can use the \"visible\" property to achieve the same effect.\n\n     var tween = createjs.Tween.get(target).to({_off:false})\n         .wait(1).to({_off:true})\n         .wait(1).to({_off:false});",
            "itemtype": "property",
            "name": "timeline",
            "type": "Timeline",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10288,
            "description": "If true, the MovieClip's position will not advance when ticked.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10296,
            "description": "If true, actions in this MovieClip's tweens will be run when the playhead advances.",
            "itemtype": "property",
            "name": "actionsEnabled",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10304,
            "description": "If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\nit back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n<br><br>\nFor example, if you had a character animation with a \"body\" child MovieClip instance\nwith different costumes on each frame, you could set body.autoReset = false, so that\nyou can manually change the frame it is on, without worrying that it will be reset\nautomatically.",
            "itemtype": "property",
            "name": "autoReset",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10318,
            "description": "An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.",
            "itemtype": "property",
            "name": "frameBounds",
            "type": "Array",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10326,
            "description": "By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\nwill cause it to advance based on elapsed time between ticks as appropriate to maintain the target\nframerate.\n\nFor example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\nadvance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\nvary slightly between frames.\n\nThis feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\npassed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "framerate",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10345,
            "itemtype": "property",
            "name": "_synchOffset",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10353,
            "itemtype": "property",
            "name": "_prevPos",
            "type": "Number",
            "default": "-1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10361,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10369,
            "description": "The time remaining from the previous tick, only applicable when .framerate is set.",
            "itemtype": "property",
            "name": "_t",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10377,
            "description": "List of display objects that are actively being managed by the MovieClip.",
            "itemtype": "property",
            "name": "_managed",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10389,
            "description": "The MovieClip will advance independently of its parent, even if its parent is paused.\nThis is the default mode.",
            "itemtype": "property",
            "name": "INDEPENDENT",
            "static": 1,
            "type": "String",
            "default": "\"independent\"",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10400,
            "description": "The MovieClip will only display a single frame (as determined by the startPosition property).",
            "itemtype": "property",
            "name": "SINGLE_FRAME",
            "static": 1,
            "type": "String",
            "default": "\"single\"",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10410,
            "description": "The MovieClip will be advanced only when its parent advances and will be synched to the position of\nthe parent MovieClip.",
            "itemtype": "property",
            "name": "SYNCHED",
            "static": 1,
            "type": "String",
            "default": "\"synched\"",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10436,
            "description": "Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "",
                "type": "Array"
            },
            "deprecated": true,
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10446,
            "description": "Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getCurrentLabel",
            "return": {
                "description": "",
                "type": "String"
            },
            "deprecated": true,
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10457,
            "description": "Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10467,
            "description": "Returns an array of objects with label and position (aka frame) properties, sorted by position.\nShortcut to TweenJS: Timeline.getLabels();",
            "itemtype": "property",
            "name": "labels",
            "type": "{Array}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10475,
            "description": "Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\nfor more information.",
            "itemtype": "property",
            "name": "currentLabel",
            "type": "{String}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10483,
            "description": "Returns the duration of this MovieClip in seconds or ticks. Identical to {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}}\nand provided for Flash API compatibility.",
            "itemtype": "property",
            "name": "totalFrames",
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10491,
            "description": "Returns the duration of this MovieClip in seconds or ticks.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10508,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10516,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10528,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10546,
            "description": "Sets paused to false.",
            "itemtype": "method",
            "name": "play",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10554,
            "description": "Sets paused to true.",
            "itemtype": "method",
            "name": "stop",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10562,
            "description": "Advances this movie clip to the specified position or label and sets paused to false.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10572,
            "description": "Advances this movie clip to the specified position or label and sets paused to true.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation or frame name to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10582,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "params": [
                {
                    "name": "time",
                    "description": "The amount of time in ms to advance by. Only applicable if framerate is set.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "advance",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10608,
            "description": "MovieClip instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10617,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10628,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\nfunction.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10639,
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10654,
            "itemtype": "method",
            "name": "_reset",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10664,
            "itemtype": "method",
            "name": "_updateTimeline",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10714,
            "itemtype": "method",
            "name": "_setState",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10731,
            "description": "Adds a child to the timeline, and sets it up as a managed child.",
            "itemtype": "method",
            "name": "_addManagedChild",
            "params": [
                {
                    "name": "child",
                    "description": "The child MovieClip to manage",
                    "type": "MovieClip"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10750,
            "itemtype": "method",
            "name": "_getBounds",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10784,
            "itemtype": "method",
            "name": "priority",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10790,
            "itemtype": "method",
            "name": "install",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10798,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String|Number|Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10809,
            "itemtype": "method",
            "name": "step",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10817,
            "itemtype": "method",
            "name": "tween",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String | Number | Boolean"
                },
                {
                    "name": "startValues",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "endValues",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "wait",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10861,
            "itemtype": "property",
            "name": "_workingCanvas",
            "static": 1,
            "type": "HTMLCanvasElement | Object",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10867,
            "itemtype": "property",
            "name": "_workingContext",
            "static": 1,
            "type": "CanvasRenderingContext2D",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10882,
            "description": "<b>This is an experimental method, and may be buggy. Please report issues.</b><br/><br/>\nExtends the existing sprite sheet by flipping the original frames horizontally, vertically, or both,\nand adding appropriate animation & frame data. The flipped animations will have a suffix added to their names\n(_h, _v, _hv as appropriate). Make sure the sprite sheet images are fully loaded before using this method.\n<br/><br/>\nFor example:<br/>\nSpriteSheetUtils.addFlippedFrames(mySpriteSheet, true, true);\nThe above would add frames that are flipped horizontally AND frames that are flipped vertically.\n<br/><br/>\nNote that you can also flip any display object by setting its scaleX or scaleY to a negative value. On some\nbrowsers (especially those without hardware accelerated canvas) this can result in slightly degraded performance,\nwhich is why addFlippedFrames is available.",
            "itemtype": "method",
            "name": "addFlippedFrames",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                },
                {
                    "name": "horizontal",
                    "description": "If true, horizontally flipped frames will be added.",
                    "type": "Boolean"
                },
                {
                    "name": "vertical",
                    "description": "If true, vertically flipped frames will be added.",
                    "type": "Boolean"
                },
                {
                    "name": "both",
                    "description": "If true, frames that are flipped both horizontally and vertically will be added.",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "Modern browsers perform better when flipping via a transform (ex. scaleX=-1) rendering this obsolete.",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10912,
            "description": "Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\nto use a spritesheet frame as the source for a bitmap fill.\n\n<strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\nwith a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\nmethod and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\nproperty of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\nThe extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.",
            "itemtype": "method",
            "name": "extractFrame",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "The SpriteSheet instance to extract a frame from.",
                    "type": "SpriteSheet"
                },
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name to extract. If an animation\nname is specified, only the first frame of the animation will be extracted.",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "a single frame of the specified sprite sheet as a new PNG image.",
                "type": "HTMLImageElement"
            },
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 10945,
            "description": "Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\nJPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\nimages (those with detail that lend itself to JPEG compression) this can provide significant file size savings\nversus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).",
            "itemtype": "method",
            "name": "mergeAlpha",
            "static": 1,
            "params": [
                {
                    "name": "rbgImage",
                    "description": "The image (or canvas) containing the RGB channels to use.",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "alphaImage",
                    "description": "The image (or canvas) containing the alpha channel to use.",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "canvas",
                    "description": "Optional. If specified, this canvas will be used and returned. If not, a new canvas will be created.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "return": {
                "description": "A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.",
                "type": "HTMLCanvasElement"
            },
            "deprecated": true,
            "deprecationMessage": "Tools such as ImageAlpha generally provide better results. This will be moved to sandbox in the future.",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11068,
            "description": "The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\nuse a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\ndimensions, then additional images will be created as needed.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "default": "2048",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11078,
            "description": "The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\nuse a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\ndimensions, then additional images will be created as needed.",
            "itemtype": "property",
            "name": "maxHeight",
            "type": "Number",
            "default": "2048",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11088,
            "description": "The SpriteSheet that was generated. This will be null before a build is completed successfully.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "SpriteSheet",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11095,
            "description": "The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\nin the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\nto the a specific device resolution (ex. tablet vs mobile).",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "default": "1",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11105,
            "description": "The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.",
            "itemtype": "property",
            "name": "padding",
            "type": "Number",
            "default": "1",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11113,
            "description": "A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\nthought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\nthe builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\nDefaults to 0.3.",
            "itemtype": "property",
            "name": "timeSlice",
            "type": "Number",
            "default": "0.3",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11124,
            "description": "A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\nbeen initiated.",
            "itemtype": "property",
            "name": "progress",
            "type": "Number",
            "default": "-1",
            "readonly": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11134,
            "description": "A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\ncreated. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\nframerate.",
            "itemtype": "property",
            "name": "framerate",
            "type": "Number",
            "default": "0",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11146,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11153,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11160,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11167,
            "itemtype": "property",
            "name": "_nextFrameIndex",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11174,
            "itemtype": "property",
            "name": "_index",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11181,
            "itemtype": "property",
            "name": "_timerID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11188,
            "itemtype": "property",
            "name": "_scale",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11197,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11216,
            "description": "Dispatched when a build completes.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11224,
            "description": "Dispatched when an asynchronous build has progress.",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "progress",
                    "description": "The current progress value (0-1).",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11235,
            "description": "Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\ncall {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\na function run immediately before the draw occurs. For example, this allows you to add a single source multiple\ntimes, but manipulate it or its children to change it to generate different frames.\n\nNote that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\ntransforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\nand pass in the Container as the source.",
            "itemtype": "method",
            "name": "addFrame",
            "params": [
                {
                    "name": "source",
                    "description": "The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.",
                    "type": "DisplayObject"
                },
                {
                    "name": "sourceRect",
                    "description": "A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\nsource to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n`nominalBounds` property on the source to use. If one is not found, the frame will be skipped.",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "Optional. The scale to draw this frame at. Default is 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "setupFunction",
                    "description": "A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "setupData",
                    "description": "Arbitrary setup data to pass to setupFunction as the second parameter.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "The index of the frame that was just added, or null if a sourceRect could not be determined.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11263,
            "description": "Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "addAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name for the animation.",
                    "type": "String"
                },
                {
                    "name": "frames",
                    "description": "An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\nthat played frame indexes 3, 6, and 5 in that order.",
                    "type": "Array"
                },
                {
                    "name": "next",
                    "description": "Specifies the name of the animation to continue to after this animation ends. You can\nalso pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "speed",
                    "description": "Specifies a frame advance speed for this animation. For example, a value of 0.5 would\ncause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\nthe opposite effect.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11280,
            "description": "This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\nbuilder. Labels will be added as an animation running from the label index to the next label. For example, if\nthere is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\nwill add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\nframe index 10 to 14.\n\nNote that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\nset to `false`, ending on the last frame.",
            "itemtype": "method",
            "name": "addMovieClip",
            "params": [
                {
                    "name": "source",
                    "description": "The source MovieClip instance to add to the SpriteSheet.",
                    "type": "MovieClip"
                },
                {
                    "name": "sourceRect",
                    "description": "A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\ndraw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\nmethod, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\nfound, the MovieClip will be skipped.",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "The scale to draw the movie clip at.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "setupFunction",
                    "description": "A function to call immediately before drawing each frame. It will be called\nwith three parameters: the source, setupData, and the frame index.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "setupData",
                    "description": "Arbitrary setup data to pass to setupFunction as the second parameter.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "labelFunction",
                    "description": "This method will be called for each MovieClip label that is added with four\nparameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\nand the end index. It must return a new name for the label/animation, or `false` to exclude the label.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11338,
            "description": "Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.",
            "itemtype": "method",
            "name": "build",
            "return": {
                "description": "The created SpriteSheet instance, or null if a build is already running or an error\noccurred.",
                "type": "SpriteSheet"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11352,
            "description": "Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\nrun 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\nspecified callback.",
            "itemtype": "method",
            "name": "buildAsync",
            "params": [
                {
                    "name": "timeSlice",
                    "description": "Sets the timeSlice property on this instance.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11367,
            "description": "Stops the current asynchronous build.",
            "itemtype": "method",
            "name": "stopAsync",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11376,
            "description": "SpriteSheetBuilder instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11384,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11395,
            "itemtype": "method",
            "name": "_startBuild",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11436,
            "itemtype": "method",
            "name": "_setupMovieClipFrame",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11449,
            "itemtype": "method",
            "name": "_getSize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11460,
            "itemtype": "method",
            "name": "_fillRow",
            "params": [
                {
                    "name": "frames",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "img",
                    "description": "",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "dataFrames",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "pad",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11498,
            "itemtype": "method",
            "name": "_endBuild",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11509,
            "itemtype": "method",
            "name": "_run",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11534,
            "itemtype": "method",
            "name": "_drawNext",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Boolean Returns false if this is the last draw."
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11617,
            "description": "The DOM object to manage.",
            "itemtype": "property",
            "name": "htmlElement",
            "type": "HTMLElement",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11626,
            "itemtype": "property",
            "name": "_oldMtx",
            "type": "Matrix2D",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11640,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11651,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11668,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "cache",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11674,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11680,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "updateCache",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11686,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "hitTest",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11692,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "localToGlobal",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11698,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "globalToLocal",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11704,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "localToLocal",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11710,
            "description": "DOMElement cannot be cloned. Throws an error.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11718,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11727,
            "description": "Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\nare not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "click",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11733,
            "description": "Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\nare not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "dblClick",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11739,
            "description": "Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\nare not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "mousedown",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11745,
            "description": "The HTMLElement can listen for the mouseover event, not the DOMElement instance.\nSince DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "mouseover",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11751,
            "description": "Not applicable to DOMElement.",
            "itemtype": "event",
            "name": "tick",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11758,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\nfunction.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11770,
            "itemtype": "method",
            "name": "_handleDrawEnd",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11850,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11865,
            "description": "Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.",
            "itemtype": "method",
            "name": "getBounds",
            "params": [
                {
                    "name": "rect",
                    "description": "If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.",
                    "type": "Rectangle",
                    "optional": true
                }
            ],
            "return": {
                "description": "If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.",
                "type": "Rectangle"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11875,
            "description": "Applies the filter to the specified context.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D",
                    "optional": true
                },
                {
                    "name": "targetX",
                    "description": "The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "targetY",
                    "description": "The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "If the filter was applied successfully.",
                "type": "Boolean"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11905,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11914,
            "description": "Returns a clone of this Filter instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Filter instance.",
                "type": "Filter"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11924,
            "itemtype": "method",
            "name": "_applyFilter",
            "params": [
                {
                    "name": "imageData",
                    "description": "Target ImageData instance.",
                    "type": "ImageData"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11978,
            "description": "Horizontal blur radius in pixels",
            "itemtype": "property",
            "name": "blurX",
            "default": "0",
            "type": "Number",
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11986,
            "description": "Vertical blur radius in pixels",
            "itemtype": "property",
            "name": "blurY",
            "default": "0",
            "type": "Number",
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 11994,
            "description": "Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\nsmoother blur, but take twice as long to run.",
            "itemtype": "property",
            "name": "quality",
            "default": "1",
            "type": "Number",
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12010,
            "description": "Array of multiply values for blur calculations.",
            "itemtype": "property",
            "name": "MUL_TABLE",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12019,
            "description": "Array of shift values for blur calculations.",
            "itemtype": "property",
            "name": "SHG_TABLE",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12029,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12037,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12042,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12050,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12303,
            "description": "The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\ndimensions as the target.",
            "itemtype": "property",
            "name": "alphaMap",
            "type": "HTMLImageElement|HTMLCanvasElement",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12313,
            "itemtype": "property",
            "name": "_alphaMap",
            "access": "protected",
            "tagname": "",
            "type": "HTMLImageElement|HTMLCanvasElement",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12320,
            "itemtype": "property",
            "name": "_mapData",
            "access": "protected",
            "tagname": "",
            "type": "Uint8ClampedArray",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12334,
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12342,
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12349,
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12362,
            "itemtype": "method",
            "name": "_prepAlphaMap",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12442,
            "description": "The image (or canvas) to use as the mask.",
            "itemtype": "property",
            "name": "mask",
            "type": "HTMLImageElement|HTMLCanvasElement",
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12456,
            "description": "Applies the filter to the specified context.\n\n<strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\ncorrectly.</strong>",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D",
                    "optional": true
                },
                {
                    "name": "targetX",
                    "description": "NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "targetY",
                    "description": "NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "If the filter was applied successfully.",
                "type": "Boolean"
            },
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12491,
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12496,
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12552,
            "description": "Red channel multiplier.",
            "itemtype": "property",
            "name": "redMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12559,
            "description": "Green channel multiplier.",
            "itemtype": "property",
            "name": "greenMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12566,
            "description": "Blue channel multiplier.",
            "itemtype": "property",
            "name": "blueMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12573,
            "description": "Alpha channel multiplier.",
            "itemtype": "property",
            "name": "alphaMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12580,
            "description": "Red channel offset (added to value).",
            "itemtype": "property",
            "name": "redOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12587,
            "description": "Green channel offset (added to value).",
            "itemtype": "property",
            "name": "greenOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12594,
            "description": "Blue channel offset (added to value).",
            "itemtype": "property",
            "name": "blueOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12601,
            "description": "Alpha channel offset (added to value).",
            "itemtype": "property",
            "name": "alphaOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12615,
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12620,
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12627,
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12677,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12692,
            "description": "Array of delta values for contrast calculations.",
            "itemtype": "property",
            "name": "DELTA_INDEX",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12713,
            "description": "Identity matrix values.",
            "itemtype": "property",
            "name": "IDENTITY_MATRIX",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12728,
            "description": "The constant length of a color matrix.",
            "itemtype": "property",
            "name": "LENGTH",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12739,
            "description": "Resets the instance with the specified values.",
            "itemtype": "method",
            "name": "setColor",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12753,
            "description": "Resets the matrix to identity values.",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12763,
            "description": "Shortcut method to adjust brightness, contrast, saturation and hue.\nEquivalent to calling adjustHue(hue), adjustContrast(contrast),\nadjustBrightness(brightness), adjustSaturation(saturation), in that order.",
            "itemtype": "method",
            "name": "adjustColor",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12782,
            "description": "Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\nPositive values will make the image brighter, negative values will make it darker.",
            "itemtype": "method",
            "name": "adjustBrightness",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -255 & 255 that will be added to the RGB channels.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12803,
            "description": "Adjusts the contrast of pixel color.\nPositive values will increase contrast, negative values will decrease contrast.",
            "itemtype": "method",
            "name": "adjustContrast",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -100 & 100.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12836,
            "description": "Adjusts the color saturation of the pixel.\nPositive values will increase saturation, negative values will decrease saturation (trend towards greyscale).",
            "itemtype": "method",
            "name": "adjustSaturation",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -100 & 100.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12862,
            "description": "Adjusts the hue of the pixel color.",
            "itemtype": "method",
            "name": "adjustHue",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -180 & 180.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12887,
            "description": "Concatenates (multiplies) the specified matrix with this one.",
            "itemtype": "method",
            "name": "concat",
            "params": [
                {
                    "name": "matrix",
                    "description": "An array or ColorMatrix instance.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12901,
            "description": "Returns a clone of this ColorMatrix.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of this ColorMatrix.",
                "type": "ColorMatrix"
            },
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12910,
            "description": "Return a length 25 (5x5) array instance containing this matrix's values.",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "An array holding this matrix's values.",
                "type": "Array"
            },
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12923,
            "description": "Copy the specified matrix's values to this matrix.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "matrix",
                    "description": "An array or ColorMatrix instance.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12938,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12949,
            "itemtype": "method",
            "name": "_multiplyMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12971,
            "description": "Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.",
            "itemtype": "method",
            "name": "_cleanValue",
            "params": [
                {
                    "name": "value",
                    "description": "The raw number",
                    "type": "Number"
                },
                {
                    "name": "limit",
                    "description": "The maximum that the number can be. The minimum is the limit * -1.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 12982,
            "description": "Makes sure matrixes are 5x5 (25 long).",
            "itemtype": "method",
            "name": "_fixMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13042,
            "description": "A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "matrix",
            "type": "Array | ColorMatrix",
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13056,
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13061,
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13067,
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13131,
            "description": "Returns `true` if touch is supported in the current browser.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "Indicates whether touch is supported in the current browser.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13143,
            "description": "Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n(and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\nmulti-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\ndouble click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\nfor more information.",
            "itemtype": "method",
            "name": "enable",
            "params": [
                {
                    "name": "stage",
                    "description": "The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.",
                    "type": "Stage"
                },
                {
                    "name": "singleTouch",
                    "description": "If `true`, only a single touch will be active at a time.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "allowDefault",
                    "description": "If `true`, then default gesture actions (ex. scrolling, zooming) will be\nallowed when the user is interacting with the target canvas.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns `true` if touch was successfully enabled on the target stage.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13171,
            "description": "Removes all listeners that were set up when calling `Touch.enable()` on a stage.",
            "itemtype": "method",
            "name": "disable",
            "params": [
                {
                    "name": "stage",
                    "description": "The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13187,
            "itemtype": "method",
            "name": "_IOS_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13202,
            "itemtype": "method",
            "name": "_IOS_disable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13218,
            "itemtype": "method",
            "name": "_IOS_handleEvent",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "e",
                    "description": "The event to handle",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13245,
            "itemtype": "method",
            "name": "_IE_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13272,
            "itemtype": "method",
            "name": "_IE_disable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13298,
            "itemtype": "method",
            "name": "_IE_handleEvent",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "e",
                    "description": "The event to handle.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13327,
            "itemtype": "method",
            "name": "_handleStart",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13346,
            "itemtype": "method",
            "name": "_handleMove",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13360,
            "itemtype": "method",
            "name": "_handleEnd",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13397,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.EaselJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js",
            "line": 13405,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.EaselJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 40,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 76,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 136,
            "description": "Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\nthat value.  Returns -1 if value is not found.\n\n     var i = createjs.indexOf(myArray, myElementToFind);",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "array",
                    "description": "Array to search for searchElement",
                    "type": "Array"
                },
                {
                    "name": "searchElement",
                    "description": "Element to find in array."
                }
            ],
            "return": {
                "description": "The first index of searchElement in array.",
                "type": "Number"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 184,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 191,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 200,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 212,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 225,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 234,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 244,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 253,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 263,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 273,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 283,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 294,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 308,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 318,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 327,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 337,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 351,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 360,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 373,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 454,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 461,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 470,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 485,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 509,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 542,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 588,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 618,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 632,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 654,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 708,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 719,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 739,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 749,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 820,
            "description": "In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\nuses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\ndispatches the tick when the time is within a certain threshold.\n\nThis mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\nbut does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\ngaining the benefits of that API (screen synch, background throttling).\n\nVariance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\nframerates of 10, 12, 15, 20, and 30 work well.\n\nFalls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF_SYNCHED",
            "static": 1,
            "type": "{String}",
            "default": "\"synched\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 842,
            "description": "In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\nBecause requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\nYou can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object's \"delta\" properties to make this easier.\n\nFalls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF",
            "static": 1,
            "type": "{String}",
            "default": "\"raf\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 858,
            "description": "In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\nprovide the benefits of requestAnimationFrame (screen synch, background throttling).",
            "itemtype": "property",
            "name": "TIMEOUT",
            "static": 1,
            "type": "{String}",
            "default": "\"timeout\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 871,
            "description": "Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n{{#crossLink \"Ticker/setPaused\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         console.log(\"Paused:\", event.paused, event.delta);\n     }",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether the ticker is currently paused.",
                    "type": "Boolean"
                },
                {
                    "name": "delta",
                    "description": "The time elapsed in ms since the last tick.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The total time in ms since Ticker was initialized.",
                    "type": "Number"
                },
                {
                    "name": "runTime",
                    "description": "The total time in ms that Ticker was not paused since it was initialized. For example,\n\tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 895,
            "description": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}, and will be removed in a future version. If true, timingMode will\nuse {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} by default.",
            "deprecated": true,
            "deprecationMessage": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "useRAF",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 906,
            "description": "Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n{{#crossLink \"Ticker/TIMEOUT\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF\"}}{{/crossLink}}, and\n{{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} for mode details.",
            "itemtype": "property",
            "name": "timingMode",
            "static": 1,
            "type": "{String}",
            "default": "Ticker.TIMEOUT",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 917,
            "description": "Specifies a maximum value for the delta property in the tick event object. This is useful when building time\nbased animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\nalert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n(ex. maxDelta=50 when running at 40fps).\n\nThis does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\nwhen using both delta and other values.\n\nIf 0, there is no maximum.",
            "itemtype": "property",
            "name": "maxDelta",
            "static": 1,
            "type": "{number}",
            "default": "0",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 934,
            "description": "When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\nof the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n{{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\ninfo.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     createjs.Ticker.paused = true;\n     function handleTick(event) {\n         console.log(event.paused,\n         \tcreatejs.Ticker.getTime(false),\n         \tcreatejs.Ticker.getTime(true));\n     }",
            "itemtype": "property",
            "name": "paused",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 974,
            "itemtype": "property",
            "name": "_inited",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 982,
            "itemtype": "property",
            "name": "_startTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 990,
            "itemtype": "property",
            "name": "_pausedTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 998,
            "description": "The number of ticks that have passed",
            "itemtype": "property",
            "name": "_ticks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1007,
            "description": "The number of ticks that have passed while Ticker has been paused",
            "itemtype": "property",
            "name": "_pausedTicks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1016,
            "itemtype": "property",
            "name": "_interval",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1024,
            "itemtype": "property",
            "name": "_lastTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1032,
            "itemtype": "property",
            "name": "_times",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1040,
            "itemtype": "property",
            "name": "_tickTimes",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1048,
            "description": "Stores the timeout or requestAnimationFrame id.",
            "itemtype": "property",
            "name": "_timerId",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1057,
            "description": "True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\nif that property changed and a tick hasn't fired.",
            "itemtype": "property",
            "name": "_raf",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1069,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setInterval",
            "static": 1,
            "params": [
                {
                    "name": "interval",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1082,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getInterval",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1093,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setFPS",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1104,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getFPS",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1115,
            "description": "Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\nNote that actual time between ticks may be more than specified depending on CPU load.\nThis property is ignored if the ticker is using the `RAF` timing mode.",
            "itemtype": "property",
            "name": "interval",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1124,
            "description": "Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n`framerate == 1000/interval`.",
            "itemtype": "property",
            "name": "framerate",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1140,
            "description": "Starts the tick. This is called automatically when the first listener is added.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1155,
            "description": "Stops the Ticker and removes all listeners. Use init() to restart the Ticker.",
            "itemtype": "method",
            "name": "reset",
            "static": 1,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1173,
            "description": "Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\nbecause it only measures the time spent within the tick execution stack. \n\nExample 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \nthe end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \nthere may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\nExample 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\none tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\nother than the tick is using ~80ms (another script, DOM rendering, etc).",
            "itemtype": "method",
            "name": "getMeasuredTickTime",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the average time spent in a tick.\nDefaults to the number of ticks per second. To get only the last tick's time, pass in 1.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The average time spent in a tick in milliseconds.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1200,
            "description": "Returns the actual frames / ticks per second.",
            "itemtype": "method",
            "name": "getMeasuredFPS",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the actual frames / ticks per second.\nDefaults to the number of ticks per second.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The actual frames / ticks per second. Depending on performance, this may differ\nfrom the target frames per second.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1218,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setPaused",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1230,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1242,
            "description": "Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\nReturns -1 if Ticker has not been initialized. For example, you could use\nthis in a time synchronized animation to determine the exact amount of time that has elapsed.",
            "itemtype": "method",
            "name": "getTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "If true only time elapsed while Ticker was not paused will be returned.\nIf false, the value returned will be total time elapsed since the first tick event listener was added.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Number of milliseconds that have elapsed since Ticker was initialized or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1256,
            "description": "Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object.",
            "itemtype": "method",
            "name": "getEventTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "[runTime=false] If true, the runTime property will be returned instead of time.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The time or runTime property from the most recent tick event or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1268,
            "description": "Returns the number of ticks that have been broadcast by Ticker.",
            "itemtype": "method",
            "name": "getTicks",
            "static": 1,
            "params": [
                {
                    "name": "pauseable",
                    "description": "Indicates whether to include ticks that would have been broadcast\nwhile Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\nIf false, tick events that would have been broadcast while Ticker was paused will be included in the return\nvalue. The default value is false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "of ticks that have been broadcast.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1284,
            "itemtype": "method",
            "name": "_handleSynch",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1299,
            "itemtype": "method",
            "name": "_handleRAF",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1310,
            "itemtype": "method",
            "name": "_handleTimeout",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1321,
            "itemtype": "method",
            "name": "_setupTick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1342,
            "itemtype": "method",
            "name": "_tick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1376,
            "itemtype": "method",
            "name": "_getTime",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1413,
            "itemtype": "property",
            "name": "_nextID",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "class": "UID",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1422,
            "description": "Returns the next unique id.",
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "The next unique id",
                "type": "Number"
            },
            "static": 1,
            "class": "UID",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1470,
            "description": "The normalized x position on the stage. This will always be within the range 0 to stage width.",
            "itemtype": "property",
            "name": "stageX",
            "type": "Number",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1477,
            "description": "The normalized y position on the stage. This will always be within the range 0 to stage height.",
            "itemtype": "property",
            "name": "stageY",
            "type": "Number",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1484,
            "description": "The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\nstage.mouseMoveOutside is true and the pointer is outside of the stage bounds.",
            "itemtype": "property",
            "name": "rawX",
            "type": "Number",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1492,
            "description": "The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\nstage.mouseMoveOutside is true and the pointer is outside of the stage bounds.",
            "itemtype": "property",
            "name": "rawY",
            "type": "Number",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1500,
            "description": "The native MouseEvent generated by the browser. The properties and API for this\nevent may differ between browsers. This property will be null if the\nEaselJS property was not directly generated from a native MouseEvent.",
            "itemtype": "property",
            "name": "nativeEvent",
            "type": "HtmlMouseEvent",
            "default": "null",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1510,
            "description": "The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\nsupplied id value.",
            "itemtype": "property",
            "name": "pointerID",
            "type": "{Number}",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1518,
            "description": "Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\nFor touch pointers, the first pointer in the current stack will be considered the primary pointer.",
            "itemtype": "property",
            "name": "primary",
            "type": "{Boolean}",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1526,
            "description": "The secondary target for the event, if applicable. This is used for mouseout/rollout\nevents to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\nand stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\nOnly valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).",
            "itemtype": "property",
            "name": "relatedTarget",
            "type": "{DisplayObject}",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1544,
            "description": "Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).",
            "itemtype": "property",
            "name": "localX",
            "type": "{Number}",
            "readonly": "",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1554,
            "description": "Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).",
            "itemtype": "property",
            "name": "localY",
            "type": "{Number}",
            "readonly": "",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1564,
            "description": "Indicates whether the event was generated by a touch input (versus a mouse input).",
            "itemtype": "property",
            "name": "isTouch",
            "type": "{Boolean}",
            "readonly": "",
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1585,
            "description": "Returns a clone of the MouseEvent instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the MouseEvent instance.",
                "type": "MouseEvent"
            },
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1594,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "MouseEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1643,
            "description": "Position (0, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "a",
            "type": "Number",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1649,
            "description": "Position (0, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "b",
            "type": "Number",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1655,
            "description": "Position (1, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "c",
            "type": "Number",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1661,
            "description": "Position (1, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "d",
            "type": "Number",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1667,
            "description": "Position (2, 0) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "tx",
            "type": "Number",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1673,
            "description": "Position (2, 1) in a 3x3 affine transformation matrix.",
            "itemtype": "property",
            "name": "ty",
            "type": "Number",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1681,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1696,
            "description": "Multiplier for converting degrees to radians. Used internally by Matrix2D.",
            "itemtype": "property",
            "name": "DEG_TO_RAD",
            "static": 1,
            "final": 1,
            "type": "Number",
            "readonly": "",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1708,
            "description": "An identity matrix, representing a null transformation.",
            "itemtype": "property",
            "name": "identity",
            "static": 1,
            "type": "Matrix2D",
            "readonly": "",
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1719,
            "description": "Sets the specified values on this instance.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "a",
                    "description": "Specifies the a property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "b",
                    "description": "Specifies the b property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "c",
                    "description": "Specifies the c property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "d",
                    "description": "Specifies the d property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "tx",
                    "description": "Specifies the tx property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "ty",
                    "description": "Specifies the ty property for the new matrix.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1741,
            "description": "Appends the specified matrix properties to this matrix. All parameters are required.\nThis is the equivalent of multiplying `(this matrix) * (specified matrix)`.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1769,
            "description": "Prepends the specified matrix properties to this matrix.\nThis is the equivalent of multiplying `(specified matrix) * (this matrix)`.\nAll parameters are required.",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "d",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "tx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "ty",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1796,
            "description": "Appends the specified matrix to this matrix.\nThis is the equivalent of multiplying `(this matrix) * (specified matrix)`.",
            "itemtype": "method",
            "name": "appendMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1807,
            "description": "Prepends the specified matrix to this matrix.\nThis is the equivalent of multiplying `(specified matrix) * (this matrix)`.\nFor example, you could calculate the combined transformation for a child object using:\n\n\tvar o = myDisplayObject;\n\tvar mtx = o.getMatrix();\n\twhile (o = o.parent) {\n\t\t// prepend each parent's transformation in turn:\n\t\to.prependMatrix(o.getMatrix());\n\t}",
            "itemtype": "method",
            "name": "prependMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1826,
            "description": "Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\nFor example, you can use this to generate a matrix representing the transformations of a display object:\n\n\tvar mtx = new createjs.Matrix2D();\n\tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);",
            "itemtype": "method",
            "name": "appendTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "Optional.",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "Optional.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1872,
            "description": "Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\nFor example, you could calculate the combined transformation for a child object using:\n\n\tvar o = myDisplayObject;\n\tvar mtx = new createjs.Matrix2D();\n\tdo  {\n\t\t// prepend each parent's transformation in turn:\n\t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t} while (o = o.parent);\n\t\n\tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.",
            "itemtype": "method",
            "name": "prependTransform",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "regX",
                    "description": "Optional.",
                    "type": "Number"
                },
                {
                    "name": "regY",
                    "description": "Optional.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1923,
            "description": "Applies a clockwise rotation transformation to the matrix.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "angle",
                    "description": "The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1944,
            "description": "Applies a skew transformation to the matrix.",
            "itemtype": "method",
            "name": "skew",
            "params": [
                {
                    "name": "skewX",
                    "description": "The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.",
                    "type": "Number"
                },
                {
                    "name": "skewY",
                    "description": "The amount to skew vertically in degrees.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1958,
            "description": "Applies a scale transformation to the matrix.",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "x",
                    "description": "The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The amount to scale vertically.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1975,
            "description": "Translates the matrix on the x and y axes.",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1988,
            "description": "Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).",
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 1999,
            "description": "Inverts the matrix, causing it to perform the opposite transformation.",
            "itemtype": "method",
            "name": "invert",
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2021,
            "description": "Returns true if the matrix is an identity matrix.",
            "itemtype": "method",
            "name": "isIdentity",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2030,
            "description": "Returns true if this matrix is equal to the specified matrix (all property values are equal).",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "matrix",
                    "description": "The matrix to compare.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2040,
            "description": "Transforms a point according to this matrix.",
            "itemtype": "method",
            "name": "transformPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x component of the point to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y component of the point to transform.",
                    "type": "Number"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a generic object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Point"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2055,
            "description": "Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\nmay not match the transform properties you used to generate the matrix, though they will produce the same visual\nresults.",
            "itemtype": "method",
            "name": "decompose",
            "params": [
                {
                    "name": "target",
                    "description": "The object to apply the transform properties to. If null, then a new object will be returned.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The target, or a new generic object with the transform properties applied.",
                "type": "Object"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2088,
            "description": "Copies all properties from the specified matrix to this matrix.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "matrix",
                    "description": "The matrix to copy properties from.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "This matrix. Useful for chaining method calls.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2098,
            "description": "Returns a clone of the Matrix2D instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Matrix2D instance.",
                "type": "Matrix2D"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2107,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Matrix2D",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2147,
            "description": "Property representing the alpha that will be applied to a display object.",
            "itemtype": "property",
            "name": "alpha",
            "type": "Number",
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2153,
            "description": "Property representing the shadow that will be applied to a display object.",
            "itemtype": "property",
            "name": "shadow",
            "type": "Shadow",
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2159,
            "description": "Property representing the compositeOperation that will be applied to a display object.\nYou can find a list of valid composite operations at:\n<a href=\"https://developer.mozilla.org/en/Canvas_tutorial/Compositing\">https://developer.mozilla.org/en/Canvas_tutorial/Compositing</a>",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "String",
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2167,
            "description": "Property representing the value for visible that will be applied to a display object.",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2173,
            "description": "The transformation matrix that will be applied to a display object.",
            "itemtype": "property",
            "name": "matrix",
            "type": "Matrix2D",
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2182,
            "description": "Reinitializes the instance with the specified values.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "visible",
                    "description": "Visible value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "alpha",
                    "description": "Alpha value.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "shadow",
                    "description": "A Shadow instance or null.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "compositeOperation",
                    "description": "A compositeOperation value or null.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "matrix",
                    "description": "A transformation matrix. Defaults to an identity matrix.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2203,
            "description": "Appends the specified display properties. This is generally used to apply a child's properties its parent's.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "visible",
                    "description": "desired visible value",
                    "type": "Boolean"
                },
                {
                    "name": "alpha",
                    "description": "desired alpha value",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "desired shadow value",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "desired composite operation value",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "a Matrix2D instance",
                    "type": "Matrix2D",
                    "optional": true
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2223,
            "description": "Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\nFor example, to get the combined display properties that would be applied to a child, you could use:\n\n\tvar o = myDisplayObject;\n\tvar props = new createjs.DisplayProps();\n\tdo {\n\t\t// prepend each parent's props in turn:\n\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t} while (o = o.parent);",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "visible",
                    "description": "desired visible value",
                    "type": "Boolean"
                },
                {
                    "name": "alpha",
                    "description": "desired alpha value",
                    "type": "Number"
                },
                {
                    "name": "shadow",
                    "description": "desired shadow value",
                    "type": "Shadow"
                },
                {
                    "name": "compositeOperation",
                    "description": "desired composite operation value",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "a Matrix2D instance",
                    "type": "Matrix2D",
                    "optional": true
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2252,
            "description": "Resets this instance and its matrix to default values.",
            "itemtype": "method",
            "name": "identity",
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "DisplayProps"
            },
            "chainable": 1,
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2266,
            "description": "Returns a clone of the DisplayProps instance. Clones the associated matrix.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the DisplayProps instance.",
                "type": "DisplayProps"
            },
            "class": "DisplayProps",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2309,
            "description": "X position.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Point",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2315,
            "description": "Y position.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Point",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2323,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Point",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2338,
            "description": "Sets the specified values on this instance.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Point"
            },
            "chainable": 1,
            "class": "Point",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2352,
            "description": "Copies all properties from the specified point to this point.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "point",
                    "description": "The point to copy properties from.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "This point. Useful for chaining method calls.",
                "type": "Point"
            },
            "chainable": 1,
            "class": "Point",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2365,
            "description": "Returns a clone of the Point instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Point instance.",
                "type": "Point"
            },
            "class": "Point",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2374,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Point",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2418,
            "description": "X position.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2424,
            "description": "Y position.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2430,
            "description": "Width.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2436,
            "description": "Height.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2444,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2459,
            "description": "Sets the specified values on this instance.",
            "itemtype": "method",
            "name": "setValues",
            "params": [
                {
                    "name": "x",
                    "description": "X position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "Y position.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "width",
                    "description": "The width of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the Rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2478,
            "description": "Extends the rectangle's bounds to include the described point or rectangle.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "x",
                    "description": "X position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2498,
            "description": "Adds the specified padding to the rectangle's bounds.",
            "itemtype": "method",
            "name": "pad",
            "params": [
                {
                    "name": "top",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "left",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "This instance. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2516,
            "description": "Copies all properties from the specified rectangle to this rectangle.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "rectangle",
                    "description": "The rectangle to copy properties from.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "This rectangle. Useful for chaining method calls.",
                "type": "Rectangle"
            },
            "chainable": 1,
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2527,
            "description": "Returns true if this rectangle fully encloses the described point or rectangle.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "X position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y position of the point or rectangle.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "height",
                    "description": "The height of the rectangle.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "True if the described point or rectangle is contained within this rectangle.",
                "type": "Boolean"
            },
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2542,
            "description": "Returns a new rectangle which contains this rectangle and the specified rectangle.",
            "itemtype": "method",
            "name": "union",
            "params": [
                {
                    "name": "rect",
                    "description": "The rectangle to calculate a union with.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "A new rectangle describing the union.",
                "type": "Rectangle"
            },
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2552,
            "description": "Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\nor null if they do not intersect.",
            "itemtype": "method",
            "name": "intersection",
            "params": [
                {
                    "name": "rect",
                    "description": "The rectangle to calculate an intersection with.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "A new rectangle describing the intersection or null.",
                "type": "Rectangle"
            },
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2568,
            "description": "Returns true if the specified rectangle intersects (has any overlap) with this rectangle.",
            "itemtype": "method",
            "name": "intersects",
            "params": [
                {
                    "name": "rect",
                    "description": "The rectangle to compare.",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "True if the rectangles intersect.",
                "type": "Boolean"
            },
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2578,
            "description": "Returns true if the width or height are equal or less than 0.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "True if the rectangle is empty.",
                "type": "Boolean"
            },
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2587,
            "description": "Returns a clone of the Rectangle instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Rectangle instance.",
                "type": "Rectangle"
            },
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2596,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Rectangle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2658,
            "description": "The target for this button helper.",
            "itemtype": "property",
            "name": "target",
            "type": "MovieClip | Sprite",
            "readonly": "",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2666,
            "description": "The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".",
            "itemtype": "property",
            "name": "overLabel",
            "type": "String | Number",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2673,
            "description": "The label name or frame number to display when the user mouses over the target. Defaults to \"out\".",
            "itemtype": "property",
            "name": "outLabel",
            "type": "String | Number",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2680,
            "description": "The label name or frame number to display when the user presses on the target. Defaults to \"down\".",
            "itemtype": "property",
            "name": "downLabel",
            "type": "String | Number",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2687,
            "description": "If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.",
            "itemtype": "property",
            "name": "play",
            "default": "false",
            "type": "Boolean",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2697,
            "itemtype": "property",
            "name": "_isPressed",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2704,
            "itemtype": "property",
            "name": "_isOver",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2711,
            "itemtype": "property",
            "name": "_enabled",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2732,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2747,
            "description": "Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2773,
            "description": "Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getEnabled",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "deprecated": true,
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2783,
            "description": "Enables or disables the button functionality on the target.",
            "itemtype": "property",
            "name": "enabled",
            "type": "{Boolean}",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2796,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2807,
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "evt",
                    "description": "The mouse event to handle.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2834,
            "description": "Injected into target. Preserves the paused state through a reset.",
            "itemtype": "method",
            "name": "_reset",
            "access": "protected",
            "tagname": "",
            "class": "ButtonHelper",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2880,
            "description": "The color of the shadow. This can be any valid CSS color value.",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "default": "null",
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2888,
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2895,
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2902,
            "itemtype": "property",
            "name": "blur",
            "type": "Number",
            "default": "0",
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2911,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2926,
            "description": "An identity shadow object (all properties are set to 0).",
            "itemtype": "property",
            "name": "identity",
            "type": "Shadow",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2938,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 2947,
            "description": "Returns a clone of this Shadow instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Shadow instance.",
                "type": "Shadow"
            },
            "class": "Shadow",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3144,
            "description": "Indicates whether all images are finished loading.",
            "itemtype": "property",
            "name": "complete",
            "type": "Boolean",
            "readonly": "",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3152,
            "description": "Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n{{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.",
            "itemtype": "property",
            "name": "framerate",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3162,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3169,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3176,
            "itemtype": "property",
            "name": "_images",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3183,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3190,
            "itemtype": "property",
            "name": "_loadCount",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3198,
            "itemtype": "property",
            "name": "_frameHeight",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3205,
            "itemtype": "property",
            "name": "_frameWidth",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3212,
            "itemtype": "property",
            "name": "_numFrames",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3219,
            "itemtype": "property",
            "name": "_regX",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3226,
            "itemtype": "property",
            "name": "_regY",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3233,
            "itemtype": "property",
            "name": "_spacing",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3240,
            "itemtype": "property",
            "name": "_margin",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3257,
            "description": "Dispatched when all images are loaded.  Note that this only fires if the images\nwere not fully loaded when the sprite sheet was initialized. You should check the complete property\nto prior to adding a listener. Ex.\n\n\tvar sheet = new createjs.SpriteSheet(data);\n\tif (!sheet.complete) {\n\t\t// not preloaded, listen for the complete event:\n\t\tsheet.addEventListener(\"complete\", handler);\n\t}",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3274,
            "description": "Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\nwhen doing on-demand rendering.",
            "itemtype": "event",
            "name": "getframe",
            "params": [
                {
                    "name": "index",
                    "description": "The frame index.",
                    "type": "Number"
                },
                {
                    "name": "frame",
                    "description": "The frame object that getFrame will return.",
                    "type": "Object"
                }
            ],
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3282,
            "description": "Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\nencounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\nevent once all images are finished processing, even if an error is encountered.",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the image that failed to load.",
                    "type": "String"
                }
            ],
            "since": "0.8.2",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3293,
            "description": "Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getAnimations",
            "return": {
                "description": "",
                "type": "Array"
            },
            "deprecated": true,
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3303,
            "description": "Returns an array of all available animation names available on this sprite sheet as strings.",
            "itemtype": "property",
            "name": "animations",
            "type": "{Array}",
            "readonly": "",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3317,
            "description": "Returns the total number of frames in the specified animation, or in the whole sprite\nsheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\nthe images have not been fully loaded.",
            "itemtype": "method",
            "name": "getNumFrames",
            "params": [
                {
                    "name": "animation",
                    "description": "The name of the animation to get a frame count for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.",
                "type": "Number"
            },
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3335,
            "description": "Returns an object defining the specified animation. The returned object contains:<UL>\n\t<li>frames: an array of the frame ids in the animation</li>\n\t<li>speed: the playback speed for this animation</li>\n\t<li>name: the name of the animation</li>\n\t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\tsame.</li>\n</UL>",
            "itemtype": "method",
            "name": "getAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a generic object with frames, speed, name, and next properties.",
                "type": "Object"
            },
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3351,
            "description": "Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\timage.</li>\n\t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n</UL>",
            "itemtype": "method",
            "name": "getFrame",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "The index of the frame.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a generic object with image and rect properties. Returns null if the frame does not exist.",
                "type": "Object"
            },
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3368,
            "description": "Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\nto the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\n\t[x=-50, y=-40, width=90, height=70]",
            "itemtype": "method",
            "name": "getFrameBounds",
            "params": [
                {
                    "name": "frameIndex",
                    "description": "The index of the frame.",
                    "type": "Number"
                },
                {
                    "name": "rectangle",
                    "description": "A Rectangle instance to copy the values into. By default a new instance is created.",
                    "type": "Rectangle",
                    "optional": true
                }
            ],
            "return": {
                "description": "A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.",
                "type": "Rectangle"
            },
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3384,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3393,
            "description": "SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.",
            "itemtype": "method",
            "name": "clone",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3402,
            "itemtype": "method",
            "name": "_parseData",
            "params": [
                {
                    "name": "data",
                    "description": "An object describing the SpriteSheet data.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3489,
            "itemtype": "method",
            "name": "_handleImageLoad",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3501,
            "itemtype": "method",
            "name": "_handleImageError",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3516,
            "itemtype": "method",
            "name": "_calculateFrames",
            "access": "protected",
            "tagname": "",
            "class": "SpriteSheet",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3667,
            "description": "Holds a reference to the last command that was created or appended. For example, you could retain a reference\nto a Fill command in order to dynamically update the color later by using:\n\n\t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t// update color later:\n\t\tmyFill.style = \"yellow\";",
            "itemtype": "property",
            "name": "command",
            "type": "Object",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3682,
            "itemtype": "property",
            "name": "_stroke",
            "access": "protected",
            "tagname": "",
            "type": "{Stroke}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3689,
            "itemtype": "property",
            "name": "_strokeStyle",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeStyle}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3696,
            "itemtype": "property",
            "name": "_oldStrokeStyle",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeStyle}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3703,
            "itemtype": "property",
            "name": "_strokeDash",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeDash}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3710,
            "itemtype": "property",
            "name": "_oldStrokeDash",
            "access": "protected",
            "tagname": "",
            "type": "{StrokeDash}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3717,
            "itemtype": "property",
            "name": "_strokeIgnoreScale",
            "access": "protected",
            "tagname": "",
            "type": "Boolean",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3724,
            "itemtype": "property",
            "name": "_fill",
            "access": "protected",
            "tagname": "",
            "type": "{Fill}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3731,
            "itemtype": "property",
            "name": "_instructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3738,
            "description": "Indicates the last instruction index that was committed.",
            "itemtype": "property",
            "name": "_commitIndex",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3746,
            "description": "Uncommitted instructions.",
            "itemtype": "property",
            "name": "_activeInstructions",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3754,
            "description": "This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.",
            "itemtype": "property",
            "name": "_dirty",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3763,
            "description": "Index to draw from if a store operation has happened.",
            "itemtype": "property",
            "name": "_storeIndex",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3778,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3793,
            "description": "Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\n     createjs.Graphics.getRGB(50, 100, 150, 0.5);\n     // Returns \"rgba(50,100,150,0.5)\"\n\nIt also supports passing a single hex color value as the first param, and an optional alpha value as the second\nparam. For example,\n\n     createjs.Graphics.getRGB(0xFF00FF, 0.2);\n     // Returns \"rgba(255,0,255,0.2)\"",
            "itemtype": "method",
            "name": "getRGB",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "The red component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "The green component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "The blue component for the color, between 0 and 0xFF (255).",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "The alpha component for the color where 0 is fully transparent and 1 is fully opaque.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A CSS compatible color string based on the specified RGB numeric color values in the format\n\"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".",
                "type": "String"
            },
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3829,
            "description": "Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\nor if alpha is null then in the format \"hsl(360,100,100)\".\n\n     createjs.Graphics.getHSL(150, 100, 70);\n     // Returns \"hsl(150,100,70)\"",
            "itemtype": "method",
            "name": "getHSL",
            "static": 1,
            "params": [
                {
                    "name": "hue",
                    "description": "The hue component for the color, between 0 and 360.",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "The saturation component for the color, between 0 and 100.",
                    "type": "Number"
                },
                {
                    "name": "lightness",
                    "description": "The lightness component for the color, between 0 and 100.",
                    "type": "Number"
                },
                {
                    "name": "alpha",
                    "description": "The alpha component for the color where 0 is fully transparent and 1 is fully opaque.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "A CSS compatible color string based on the specified HSL numeric color values in the format\n\"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".",
                "type": "String"
            },
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3855,
            "description": "A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\nunnecessary instantiation.",
            "itemtype": "property",
            "name": "beginCmd",
            "type": "{Graphics.BeginPath}",
            "static": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3864,
            "description": "Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "BASE_64",
            "static": 1,
            "final": 1,
            "readonly": "",
            "type": "{Object}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3874,
            "description": "Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\ncorresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\"butt\", 1 to \"round\", and 2 to \"square\".\nFor example, to set the line caps to \"square\":\n\n     myGraphics.ss(16, 2);",
            "itemtype": "property",
            "name": "STROKE_CAPS_MAP",
            "static": 1,
            "final": 1,
            "readonly": "",
            "type": "{Array}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3890,
            "description": "Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\ncorresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\"miter\", 1 to \"round\", and 2 to \"bevel\".\nFor example, to set the line joints to \"bevel\":\n\n     myGraphics.ss(16, 0, 2);",
            "itemtype": "property",
            "name": "STROKE_JOINTS_MAP",
            "static": 1,
            "final": 1,
            "readonly": "",
            "type": "{Array}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3906,
            "itemtype": "property",
            "name": "_ctx",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "type": "{CanvasRenderingContext2D}",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3920,
            "description": "Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getInstructions",
            "return": {
                "description": "",
                "type": "Array"
            },
            "deprecated": true,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3931,
            "description": "Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\nModifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\nThis property is mainly intended for introspection of the instructions (ex. for graphics export).",
            "itemtype": "property",
            "name": "instructions",
            "type": "{Array}",
            "readonly": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3948,
            "description": "Returns true if this Graphics instance has no drawing commands.",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "Returns true if this Graphics instance has no drawing commands.",
                "type": "Boolean"
            },
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3957,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "data",
                    "description": "Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.",
                    "type": "Object"
                }
            ],
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3974,
            "description": "Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\nstroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "drawAsPath",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 3993,
            "description": "Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should move to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should move to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4005,
            "description": "Draws a line from the current drawing point to the specified position, which become the new current drawing\npoint. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\nA tiny API method \"lt\" also exists.\n\nFor detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\nwhatwg spec</a>.",
            "itemtype": "method",
            "name": "lineTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should draw to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should draw to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4023,
            "description": "Draws an arc with the specified control points and radius.  For detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\nwhatwg spec</a>. A tiny API method \"at\" also exists.",
            "itemtype": "method",
            "name": "arcTo",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4040,
            "description": "Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\nexample, to draw a full circle with a radius of 20 centered at (100, 100):\n\n     arc(100, 100, 20, 0, Math.PI*2);\n\nFor detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\nA tiny API method \"a\" also exists.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "anticlockwise",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4063,
            "description": "Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\ninformation, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\nwhatwg spec</a>. A tiny API method \"qt\" also exists.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4079,
            "description": "Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\ncp2y). For detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\nwhatwg spec</a>. A tiny API method \"bt\" also exists.",
            "itemtype": "method",
            "name": "bezierCurveTo",
            "params": [
                {
                    "name": "cp1x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4098,
            "description": "Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\nFor detailed information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\nwhatwg spec</a>. A tiny API method \"r\" also exists.",
            "itemtype": "method",
            "name": "rect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4115,
            "description": "Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\nsince the fill or stroke was last set. A tiny API method \"cp\" also exists.",
            "itemtype": "method",
            "name": "closePath",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4128,
            "description": "Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\nto be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4142,
            "description": "Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.",
            "itemtype": "method",
            "name": "beginFill",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no fill.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4154,
            "description": "Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\nexample, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\nsquare to display it:\n\n     myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\nA tiny API method \"lf\" also exists.",
            "itemtype": "method",
            "name": "beginLinearGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\ndrawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\nthe first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4178,
            "description": "Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\nblue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\n     myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\nA tiny API method \"rf\" also exists.",
            "itemtype": "method",
            "name": "beginRadialGradientFill",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4203,
            "description": "Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\nexists.",
            "itemtype": "method",
            "name": "beginBitmapFill",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "Optional. Specifies a transformation matrix for the bitmap fill. This transformation\nwill be applied relative to the parent transform.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4221,
            "description": "Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\nA tiny API method \"ef\" also exists.",
            "itemtype": "method",
            "name": "endFill",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4232,
            "description": "Sets the stroke style. Like all drawing methods, this can be chained, so you can define\nthe stroke style and color in a single line of code like so:\n\n\tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\nA tiny API method \"ss\" also exists.",
            "itemtype": "method",
            "name": "setStrokeStyle",
            "params": [
                {
                    "name": "thickness",
                    "description": "The width of the stroke.",
                    "type": "Number"
                },
                {
                    "name": "caps",
                    "description": "Indicates the type of caps to use at the end of lines. One of butt,\nround, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\nthe tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "joints",
                    "description": "Specifies the type of joints that should be used where two lines meet.\nOne of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\nfor use with the tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "miterLimit",
                    "description": "If joints is set to \"miter\", then you can specify a miter limit ratio which\ncontrols at what point a mitered joint will be clipped.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "ignoreScale",
                    "description": "If true, the stroke will be drawn at the specified thickness regardless\nof active transformations.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4264,
            "description": "Sets or clears the stroke dash pattern.\n\n\tmyGraphics.setStrokeDash([20, 10], 0);\n\nA tiny API method `sd` also exists.",
            "itemtype": "method",
            "name": "setStrokeDash",
            "params": [
                {
                    "name": "[segments] An array specifying the dash pattern, alternating between line and gap.\nFor example, `[20,10]",
                    "description": "` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\nPassing null or an empty array will clear the existing stroke dash.",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4284,
            "description": "Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.",
            "itemtype": "method",
            "name": "beginStroke",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no stroke.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4296,
            "description": "Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\nexample, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\nsquare to display it:\n\n     myGraphics.setStrokeStyle(10).\n         beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\nA tiny API method \"ls\" also exists.",
            "itemtype": "method",
            "name": "beginLinearGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4321,
            "description": "Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\nblue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\n     myGraphics.setStrokeStyle(10)\n         .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n         .drawRect(50, 90, 150, 110);\n\nA tiny API method \"rs\" also exists.",
            "itemtype": "method",
            "name": "beginRadialGradientStroke",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\nto 100%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4349,
            "description": "Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\nstrokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\nalso exists.",
            "itemtype": "method",
            "name": "beginBitmapStroke",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of\n\"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".",
                    "type": "String",
                    "optional": true,
                    "optdefault": "repeat"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4366,
            "description": "Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\nA tiny API method \"es\" also exists.",
            "itemtype": "method",
            "name": "endStroke",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4377,
            "description": "Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "quadraticCurveTo",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4390,
            "description": "Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n method.",
            "itemtype": "method",
            "name": "drawRect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4404,
            "description": "Draws a rounded rectangle with all corners with the specified radius.",
            "itemtype": "method",
            "name": "drawRoundRect",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4419,
            "description": "Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\nmethod \"rc\" also exists.",
            "itemtype": "method",
            "name": "drawRoundRectComplex",
            "params": [
                {
                    "name": "x",
                    "description": "The horizontal coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The vertical coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The width of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The height of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "radiusTL",
                    "description": "Top left corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusTR",
                    "description": "Top right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBR",
                    "description": "Bottom right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBL",
                    "description": "Bottom left corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4438,
            "description": "Draws a circle with the specified radius at (x, y).\n\n     var g = new createjs.Graphics();\n\t    g.setStrokeStyle(1);\n\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t    g.drawCircle(0,0,3);\n\n\t    var s = new createjs.Shape(g);\n\t\ts.x = 100;\n\t\ts.y = 100;\n\n\t    stage.addChild(s);\n\t    stage.update();\n\nA tiny API method \"dc\" also exists.",
            "itemtype": "method",
            "name": "drawCircle",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Radius of circle.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4466,
            "description": "Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\nexcept the width and height can be different. A tiny API method \"de\" also exists.",
            "itemtype": "method",
            "name": "drawEllipse",
            "params": [
                {
                    "name": "x",
                    "description": "The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from center.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from the center.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\nnumber.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4484,
            "description": "Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\npoints. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\nradius of 50:\n\n     myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n     // Note: -90 makes the first point vertical\n\nA tiny API method \"dp\" also exists.",
            "itemtype": "method",
            "name": "drawPolyStar",
            "params": [
                {
                    "name": "x",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The outer radius of the shape.",
                    "type": "Number"
                },
                {
                    "name": "sides",
                    "description": "The number of points on the star or sides on the polygon.",
                    "type": "Number"
                },
                {
                    "name": "pointSize",
                    "description": "The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\npolygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "The angle of the first point / corner. For example a value of 0 will draw the first point\ndirectly to the right of the center.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4511,
            "description": "Removed in favour of using custom command objects with {{#crossLink \"Graphics/append\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "inject",
            "deprecated": true,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4517,
            "description": "Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\nthat accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n{{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\nThis method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\nbuilt-in or custom graphics commands. For example:\n\n\t\t// attach data to our shape, so we can access it during the draw:\n\t\tmyShape.color = \"red\";\n\n\t\t// append a Circle command object:\n\t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\n\t\t// append a custom command object with an exec method that sets the fill style\n\t\t// based on the shape's data, and then fills the circle.\n\t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t\t\tctx.fillStyle = shape.color;\n\t\t\tctx.fill();\n\t\t}});",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "command",
                    "description": "A graphics command object exposing an \"exec\" method.",
                    "type": "Object"
                },
                {
                    "name": "clean",
                    "description": "The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4551,
            "description": "Decodes a compact encoded path string into a series of draw instructions.\nThis format is not intended to be human readable, and is meant for use by authoring tools.\nThe format uses a base64 character set, with each character representing 6 bits, to define a series of draw\ncommands.\n\nEach command is comprised of a single \"header\" character followed by a variable number of alternating x and y\nposition values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\ntype of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\nindicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\nlatter. Bits 5 and 6 are currently unused.\n\nFollowing the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\nparameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\nby an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\ncase of move operations which are absolute, this value is a delta from the previous x or y position (as\nappropriate).\n\nFor example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n<br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\nparameter.\n<br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\nindicate 1500 tenths of a pixel.\n<br />AA - 000000000000. Absolute y position of 0.\n<br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n<br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\nprovide an absolute position of +150.0px.\n<br />AAA - 000000000000000000. A y delta value of 0.\n\nA tiny API method \"p\" also exists.",
            "itemtype": "method",
            "name": "decodePath",
            "params": [
                {
                    "name": "str",
                    "description": "The path string to decode.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4623,
            "description": "Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\nthe existing store. This also affects `drawAsPath()`.\n\nThis is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\nthat only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\nof the vector instructions for later use (ex. scaling, modifying, or exporting).\n\nNote that calling store() will force the active path (if any) to be ended in a manner similar to changing\nthe fill or stroke.\n\nFor example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\nsegments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\nand then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n\n\t// set up cache:\n\tmyShape.cache(0,0,500,500,scale);\n\n\t// when the user drags, draw a new line:\n\tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t// then draw it into the existing cache:\n\tmyShape.updateCache(\"source-over\");\n\t// store the new line, so it isn't redrawn next time:\n\tmyShape.store();\n\n\t// then, when the window resizes, we can re-render at a different scale:\n\t// first, unstore all our lines:\n\tmyShape.unstore();\n\t// then cache using the new scale:\n\tmyShape.cache(0,0,500,500,newScale);\n\t// finally, store the existing commands again:\n\tmyShape.store();",
            "itemtype": "method",
            "name": "store",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4666,
            "description": "Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\nso that they will be executed in subsequent draw calls.",
            "itemtype": "method",
            "name": "unstore",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4679,
            "description": "Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Graphics instance.",
                "type": "Graphics"
            },
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4700,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4711,
            "description": "Shortcut to moveTo.",
            "itemtype": "method",
            "name": "mt",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should move to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should move to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls).",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4722,
            "description": "Shortcut to lineTo.",
            "itemtype": "method",
            "name": "lt",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate the drawing point should draw to.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate the drawing point should draw to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4733,
            "description": "Shortcut to arcTo.",
            "itemtype": "method",
            "name": "at",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4747,
            "description": "Shortcut to bezierCurveTo.",
            "itemtype": "method",
            "name": "bt",
            "params": [
                {
                    "name": "cp1x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp1y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cp2y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4762,
            "description": "Shortcut to quadraticCurveTo / curveTo.",
            "itemtype": "method",
            "name": "qt",
            "params": [
                {
                    "name": "cpx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cpy",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4774,
            "description": "Shortcut to arc.",
            "itemtype": "method",
            "name": "a",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "Measured in radians.",
                    "type": "Number"
                },
                {
                    "name": "anticlockwise",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4789,
            "description": "Shortcut to rect.",
            "itemtype": "method",
            "name": "r",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4802,
            "description": "Shortcut to closePath.",
            "itemtype": "method",
            "name": "cp",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4811,
            "description": "Shortcut to clear.",
            "itemtype": "method",
            "name": "c",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4820,
            "description": "Shortcut to beginFill.",
            "itemtype": "method",
            "name": "f",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no fill.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4831,
            "description": "Shortcut to beginLinearGradientFill.",
            "itemtype": "method",
            "name": "lf",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\ndrawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\nthe first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4848,
            "description": "Shortcut to beginRadialGradientFill.",
            "itemtype": "method",
            "name": "rf",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4867,
            "description": "Shortcut to beginBitmapFill.",
            "itemtype": "method",
            "name": "bf",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".",
                    "type": "String"
                },
                {
                    "name": "matrix",
                    "description": "Optional. Specifies a transformation matrix for the bitmap fill. This transformation\nwill be applied relative to the parent transform.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4883,
            "description": "Shortcut to endFill.",
            "itemtype": "method",
            "name": "ef",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4892,
            "description": "Shortcut to setStrokeStyle.",
            "itemtype": "method",
            "name": "ss",
            "params": [
                {
                    "name": "thickness",
                    "description": "The width of the stroke.",
                    "type": "Number"
                },
                {
                    "name": "caps",
                    "description": "Indicates the type of caps to use at the end of lines. One of butt,\nround, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\nthe tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "joints",
                    "description": "Specifies the type of joints that should be used where two lines meet.\nOne of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\nfor use with the tiny API.",
                    "type": "String | Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "miterLimit",
                    "description": "If joints is set to \"miter\", then you can specify a miter limit ratio which\ncontrols at what point a mitered joint will be clipped.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "ignoreScale",
                    "description": "If true, the stroke will be drawn at the specified thickness regardless\nof active transformations.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4912,
            "description": "Shortcut to setStrokeDash.",
            "itemtype": "method",
            "name": "sd",
            "params": [
                {
                    "name": "[segments] An array specifying the dash pattern, alternating between line and gap.\nFor example, [20,10]",
                    "description": "would create a pattern of 20 pixel lines with 10 pixel gaps between them.\nPassing null or an empty array will clear any existing dash.",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4925,
            "description": "Shortcut to beginStroke.",
            "itemtype": "method",
            "name": "s",
            "params": [
                {
                    "name": "color",
                    "description": "A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\nnull will result in no stroke.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4936,
            "description": "Shortcut to beginLinearGradientStroke.",
            "itemtype": "method",
            "name": "ls",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The position of the first point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "The position of the second point defining the line that defines the gradient direction and size.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4953,
            "description": "Shortcut to beginRadialGradientStroke.",
            "itemtype": "method",
            "name": "rs",
            "params": [
                {
                    "name": "colors",
                    "description": "An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\na gradient drawing from red to blue.",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "An array of gradient positions which correspond to the colors. For example, [0.1,\n0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\nto 100%.",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "Center position of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "Radius of the inner circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "Center position of the outer circle that defines the gradient.",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "Radius of the outer circle that defines the gradient.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4973,
            "description": "Shortcut to beginBitmapStroke.",
            "itemtype": "method",
            "name": "bs",
            "params": [
                {
                    "name": "image",
                    "description": "The Image, Canvas, or Video object to use\nas the pattern.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "Optional. Indicates whether to repeat the image in the fill area. One of\n\"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".",
                    "type": "String",
                    "optional": true,
                    "optdefault": "repeat"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4986,
            "description": "Shortcut to endStroke.",
            "itemtype": "method",
            "name": "es",
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 4995,
            "description": "Shortcut to drawRect.",
            "itemtype": "method",
            "name": "dr",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "Width of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5008,
            "description": "Shortcut to drawRoundRect.",
            "itemtype": "method",
            "name": "rr",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5022,
            "description": "Shortcut to drawRoundRectComplex.",
            "itemtype": "method",
            "name": "rc",
            "params": [
                {
                    "name": "x",
                    "description": "The horizontal coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The vertical coordinate to draw the round rect.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The width of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The height of the round rect.",
                    "type": "Number"
                },
                {
                    "name": "radiusTL",
                    "description": "Top left corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusTR",
                    "description": "Top right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBR",
                    "description": "Bottom right corner radius.",
                    "type": "Number"
                },
                {
                    "name": "radiusBL",
                    "description": "Bottom left corner radius.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5039,
            "description": "Shortcut to drawCircle.",
            "itemtype": "method",
            "name": "dc",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y coordinate center point of circle.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Radius of circle.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5051,
            "description": "Shortcut to drawEllipse.",
            "itemtype": "method",
            "name": "de",
            "params": [
                {
                    "name": "x",
                    "description": "The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from center.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\nwhich draws from the center.",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\nnumber.",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5067,
            "description": "Shortcut to drawPolyStar.",
            "itemtype": "method",
            "name": "dp",
            "params": [
                {
                    "name": "x",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Position of the center of the shape.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The outer radius of the shape.",
                    "type": "Number"
                },
                {
                    "name": "sides",
                    "description": "The number of points on the star or sides on the polygon.",
                    "type": "Number"
                },
                {
                    "name": "pointSize",
                    "description": "The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\npolygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "The angle of the first point / corner. For example a value of 0 will draw the first point\ndirectly to the right of the center.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5084,
            "description": "Shortcut to decodePath.",
            "itemtype": "method",
            "name": "p",
            "params": [
                {
                    "name": "str",
                    "description": "The path string to decode.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The Graphics instance the method is called on (useful for chaining calls.)",
                "type": "Graphics"
            },
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5096,
            "itemtype": "method",
            "name": "_updateInstructions",
            "params": [
                {
                    "name": "commit",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5135,
            "itemtype": "method",
            "name": "_setFill",
            "params": [
                {
                    "name": "fill",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5146,
            "itemtype": "method",
            "name": "_setStroke",
            "params": [
                {
                    "name": "stroke",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5160,
            "class": "Graphics",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5170,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.LineTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5174,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.LineTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5178,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.LineTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5194,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.MoveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5198,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.MoveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5202,
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.MoveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5221,
            "itemtype": "property",
            "name": "x1",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5225,
            "itemtype": "property",
            "name": "y1",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5229,
            "itemtype": "property",
            "name": "x2",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5233,
            "itemtype": "property",
            "name": "y2",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5237,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5241,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.ArcTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5263,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5267,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5271,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5275,
            "itemtype": "property",
            "name": "startAngle",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5279,
            "itemtype": "property",
            "name": "endAngle",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5283,
            "itemtype": "property",
            "name": "anticlockwise",
            "type": "Number",
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5287,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Arc",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5308,
            "itemtype": "property",
            "name": "cpx",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5312,
            "itemtype": "property",
            "name": "cpy",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5316,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5320,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5324,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.QuadraticCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5345,
            "itemtype": "property",
            "name": "cp1x",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5349,
            "itemtype": "property",
            "name": "cp1y",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5353,
            "itemtype": "property",
            "name": "cp2x",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5357,
            "itemtype": "property",
            "name": "cp2y",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5361,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5365,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5369,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.BezierCurveTo",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5389,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5393,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5397,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5401,
            "itemtype": "property",
            "name": "h",
            "type": "Number",
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5405,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Rect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5420,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.ClosePath",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5433,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.BeginPath",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5448,
            "description": "A valid Context2D fillStyle.",
            "itemtype": "property",
            "name": "style",
            "type": "Object",
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5453,
            "itemtype": "property",
            "name": "matrix",
            "type": "Matrix2D",
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5457,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5474,
            "description": "Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "linearGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Fill object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5493,
            "description": "Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "radialGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Fill object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5513,
            "description": "Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "bitmap",
            "params": [
                {
                    "name": "image",
                    "description": "Must be loaded prior to creating a bitmap fill, or the fill will be empty.",
                    "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement"
                },
                {
                    "name": "repetition",
                    "description": "One of: repeat, repeat-x, repeat-y, or no-repeat.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns this Fill object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Fill",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5537,
            "description": "A valid Context2D strokeStyle.",
            "itemtype": "property",
            "name": "style",
            "type": "Object",
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5542,
            "itemtype": "property",
            "name": "ignoreScale",
            "type": "Boolean",
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5546,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5562,
            "description": "Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "linearGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Stroke object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5575,
            "description": "Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "radialGradient",
            "params": [
                {
                    "name": "colors",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratios",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "x0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "r1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns this Stroke object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5590,
            "description": "Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\nSee {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "bitmap",
            "params": [
                {
                    "name": "image",
                    "description": "",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "repetition",
                    "description": "One of: repeat, repeat-x, repeat-y, or no-repeat.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns this Stroke object for chaining or assignment.",
                "type": "Fill"
            },
            "class": "Graphics.Stroke",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5611,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5615,
            "description": "One of: butt, round, square",
            "itemtype": "property",
            "name": "caps",
            "type": "String",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5620,
            "description": "One of: round, bevel, miter",
            "itemtype": "property",
            "name": "joints",
            "type": "String",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5625,
            "itemtype": "property",
            "name": "miterLimit",
            "type": "Number",
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5629,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.StrokeStyle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5657,
            "itemtype": "property",
            "name": "segments",
            "type": "Array",
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5661,
            "itemtype": "property",
            "name": "offset",
            "type": "Number",
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5665,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5679,
            "description": "The default value for segments (ie. no dash).",
            "itemtype": "property",
            "name": "EMPTY_SEGMENTS",
            "static": 1,
            "final": 1,
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "class": "Graphics.StrokeDash",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5703,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5707,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5711,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5715,
            "itemtype": "property",
            "name": "h",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5719,
            "itemtype": "property",
            "name": "radiusTL",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5723,
            "itemtype": "property",
            "name": "radiusTR",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5727,
            "itemtype": "property",
            "name": "radiusBR",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5731,
            "itemtype": "property",
            "name": "radiusBL",
            "type": "Number",
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5735,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.RoundRect",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5779,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5783,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5787,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5791,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Circle",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5810,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5814,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5818,
            "itemtype": "property",
            "name": "w",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5822,
            "itemtype": "property",
            "name": "h",
            "type": "Number",
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5826,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.Ellipse",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5864,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5868,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5872,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5876,
            "itemtype": "property",
            "name": "sides",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5880,
            "itemtype": "property",
            "name": "pointSize",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5884,
            "itemtype": "property",
            "name": "angle",
            "type": "Number",
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5888,
            "description": "Execute the Graphics command in the provided Canvas context.",
            "itemtype": "method",
            "name": "exec",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas rendering context",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.PolyStar",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5952,
            "description": "The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.",
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5960,
            "description": "If a cache is active, this returns the canvas that holds the cached version of this display object. See {{#crossLink \"cache\"}}{{/crossLink}}\nfor more information.",
            "itemtype": "property",
            "name": "cacheCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "default": "null",
            "readonly": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5970,
            "description": "Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\ndetermine if the cache has changed since a previous check.",
            "itemtype": "property",
            "name": "cacheID",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5979,
            "description": "Unique ID for this display object. Makes display objects easier for some uses.",
            "itemtype": "property",
            "name": "id",
            "type": "{Number}",
            "default": "-1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 5987,
            "description": "Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\nof a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\nclicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\nmethod from returning the child.\n\n<strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\ncheck out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\nprovided in the next release of EaselJS.",
            "itemtype": "property",
            "name": "mouseEnabled",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6002,
            "description": "If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\nIn addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\non some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).",
            "itemtype": "property",
            "name": "tickEnabled",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6012,
            "description": "An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\ndebugging.",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6021,
            "description": "A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\ncontains this display object, or null if it has not been added\nto one.",
            "itemtype": "property",
            "name": "parent",
            "final": 1,
            "type": "{Container}",
            "default": "null",
            "readonly": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6033,
            "description": "The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\naround its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.",
            "itemtype": "property",
            "name": "regX",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6042,
            "description": "The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\nits center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.",
            "itemtype": "property",
            "name": "regY",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6051,
            "description": "The rotation in degrees for this display object.",
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6059,
            "description": "The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\nobject to twice its nominal width. To horizontally flip an object, set the scale to a negative number.",
            "itemtype": "property",
            "name": "scaleX",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6068,
            "description": "The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\nobject to half its nominal height. To vertically flip an object, set the scale to a negative number.",
            "itemtype": "property",
            "name": "scaleY",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6077,
            "description": "The factor to skew this display object horizontally.",
            "itemtype": "property",
            "name": "skewX",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6085,
            "description": "The factor to skew this display object vertically.",
            "itemtype": "property",
            "name": "skewY",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6093,
            "description": "A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\nnull, this property is inherited from the parent container.",
            "itemtype": "property",
            "name": "shadow",
            "type": "{Shadow}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6102,
            "description": "Indicates whether this display object should be rendered to the canvas and included when running the Stage\n{{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6111,
            "description": "The x (horizontal) position of the display object, relative to its parent.",
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6119,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6126,
            "description": "If set, defines the transformation for this display object, overriding all other transformation properties\n(x, y, rotation, scale, skew).",
            "itemtype": "property",
            "name": "transformMatrix",
            "type": "{Matrix2D}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6135,
            "description": "The composite operation indicates how the pixels of this display object will be composited with the elements\nbehind it. If `null`, this property is inherited from the parent container. For more information, read the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\nwhatwg spec on compositing</a>.",
            "itemtype": "property",
            "name": "compositeOperation",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6146,
            "description": "Indicates whether the display object should be drawn to a whole pixel when\n{{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\ncategories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).",
            "itemtype": "property",
            "name": "snapToPixel",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6156,
            "description": "An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\nor {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\ncached.",
            "itemtype": "property",
            "name": "filters",
            "type": "{Array}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6166,
            "description": "A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\nwill be applied relative to the display object's parent coordinates (as if it were a child of the parent).",
            "itemtype": "property",
            "name": "mask",
            "type": "{Shape}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6175,
            "description": "A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\nThe hit area will have its transformation applied relative to this display object's coordinate space (as though\nthe hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\nusing only its own `alpha` value regardless of the alpha value on the target display object, or the target's\nancestors (parents).\n\nIf set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\nThis is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\n\nNote that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6192,
            "description": "A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\nobject. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\nuse this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.",
            "itemtype": "property",
            "name": "cursor",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6204,
            "itemtype": "property",
            "name": "_cacheOffsetX",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6212,
            "itemtype": "property",
            "name": "_cacheOffsetY",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6220,
            "itemtype": "property",
            "name": "_filterOffsetX",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6228,
            "itemtype": "property",
            "name": "_filterOffsetY",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6236,
            "itemtype": "property",
            "name": "_cacheScale",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6244,
            "itemtype": "property",
            "name": "_cacheDataURLID",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6252,
            "itemtype": "property",
            "name": "_cacheDataURL",
            "access": "protected",
            "tagname": "",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6260,
            "itemtype": "property",
            "name": "_props",
            "access": "protected",
            "tagname": "",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6268,
            "itemtype": "property",
            "name": "_rectangle",
            "access": "protected",
            "tagname": "",
            "type": "{Rectangle}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6276,
            "itemtype": "property",
            "name": "_bounds",
            "access": "protected",
            "tagname": "",
            "type": "{Rectangle}",
            "default": "null",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6290,
            "description": "Listing of mouse event names. Used in _hasMouseEventListener.",
            "itemtype": "property",
            "name": "_MOUSE_EVENTS",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "type": "{Array}",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6299,
            "description": "Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\nwith cross domain content.",
            "itemtype": "property",
            "name": "suppressCrossDomainErrors",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6309,
            "itemtype": "property",
            "name": "_snapToPixelEnabled",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6318,
            "itemtype": "property",
            "name": "_hitTestCanvas",
            "type": "{HTMLCanvasElement | Object}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6324,
            "itemtype": "property",
            "name": "_hitTestContext",
            "type": "{CanvasRenderingContext2D}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6337,
            "itemtype": "property",
            "name": "_nextCacheID",
            "type": "{Number}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6347,
            "description": "Dispatched when the user presses their left mouse button over the display object. See the \n{{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mousedown",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6354,
            "description": "Dispatched when the user presses their left mouse button and then releases it while over the display object.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "click",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6361,
            "description": "Dispatched when the user double clicks their left mouse button over this display object.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "dblclick",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6368,
            "description": "Dispatched when the user's mouse enters this display object. This event must be enabled using \n{{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseover",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6376,
            "description": "Dispatched when the user's mouse leaves this display object. This event must be enabled using \n{{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseout",
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6384,
            "description": "This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\ndifferences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\naggregate of their content.\n\nFor example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\nshapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\nmyContainer, two events would be received, each targeting a child element:<OL>\n<LI>when the mouse enters shapeA (target=shapeA)</LI>\n<LI>when the mouse enters shapeB (target=shapeB)</LI>\n</OL>\nHowever, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\nthe aggregate myContainer content (target=myContainer).\n\nThis event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "rollover",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6404,
            "description": "This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\ndifferences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\naggregate of their content.\n\nFor example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\nshapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\non myContainer, two events would be received, each targeting a child element:<OL>\n<LI>when the mouse leaves shapeA (target=shapeA)</LI>\n<LI>when the mouse leaves shapeB (target=shapeB)</LI>\n</OL>\nHowever, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\nthe aggregate myContainer content (target=myContainer).\n\nThis event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "rollout",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6424,
            "description": "After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\nevent will be generated on that object whenever the mouse moves until the mouse press is released. This can be\nuseful for dragging and similar operations.",
            "itemtype": "event",
            "name": "pressmove",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6432,
            "description": "After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\nwill be generated on that object when that mouse press is released. This can be useful for dragging and similar\noperations.",
            "itemtype": "event",
            "name": "pressup",
            "since": "0.7.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6440,
            "description": "Dispatched when the display object is added to a parent container.",
            "itemtype": "event",
            "name": "added",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6445,
            "description": "Dispatched when the display object is removed from its parent container.",
            "itemtype": "event",
            "name": "removed",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6450,
            "description": "Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\nrendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\nthe stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n{{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\ndispatched on their parent.",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "An array containing any arguments that were passed to the Stage.update() method. For\n     example if you called stage.update(\"hello\"), then the params would be [\"hello\"].",
                    "type": "Array"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6466,
            "description": "Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getStage",
            "return": {
                "description": "",
                "type": "Stage"
            },
            "deprecated": true,
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6480,
            "description": "Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.",
            "itemtype": "property",
            "name": "stage",
            "type": "{Stage}",
            "readonly": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6494,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6506,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns <code>true</code> if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache. For example,\nused for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6525,
            "description": "Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\nto the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "updateContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D to update.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6557,
            "description": "Draws the display object into a new canvas, which is then used for subsequent draws. For complex content\nthat does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\nthis can provide for much faster rendering because the content does not need to be re-rendered each tick. The\ncached display object can be moved, rotated, faded, etc freely, however if its content changes, you must\nmanually update the cache by calling <code>updateCache()</code> or <code>cache()</code> again. You must specify\nthe cache area via the x, y, w, and h parameters. This defines the rectangle that will be rendered and cached\nusing this display object's coordinates.\n\n<h4>Example</h4>\nFor example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\n     var shape = new createjs.Shape();\n     shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n     myShape.cache(-25, -25, 50, 50);\n\nNote that filters need to be defined <em>before</em> the cache is applied. Check out the {{#crossLink \"Filter\"}}{{/crossLink}}\nclass for more information. Some filters (ex. BlurFilter) will not work as expected in conjunction with the scale param.\n\nUsually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\nwill add padding to the canvas dimensions.",
            "itemtype": "method",
            "name": "cache",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate origin for the cache region.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the cache region.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the cache region.",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "The scale at which the cache will be created. For example, if you cache a vector shape using\n\tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\tcached elements with greater fidelity. Default is 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6600,
            "description": "Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\nIf compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\nwill be drawn over the existing cache using the specified compositeOperation.\n\n<h4>Example</h4>\nClear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\nwill be drawn on top of the old one.\n\n     // Not shown: Creating the shape, and caching it.\n     shapeInstance.clear();\n     shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\n     shapeInstance.updateCache();",
            "itemtype": "method",
            "name": "updateCache",
            "params": [
                {
                    "name": "compositeOperation",
                    "description": "The compositeOperation to use, or null to clear the cache and redraw it.\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">\nwhatwg spec on compositing</a>.",
                    "type": "String"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6649,
            "description": "Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6659,
            "description": "Returns a data URL for the cache, or null if this display object is not cached.\nUses cacheID to ensure a new data URL is not generated if the cache has not changed.",
            "itemtype": "method",
            "name": "getCacheDataURL",
            "return": {
                "description": "The image data url for the cache.",
                "type": "String"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6671,
            "description": "Transforms the specified x and y position from the coordinate space of the display object\nto the global (stage) coordinate space. For example, this could be used to position an HTML label\nover a specific point on a nested display object. Returns a Point instance with x and y properties\ncorrelating to the transformed coordinates on the stage.\n\n<h4>Example</h4>\n\n     displayObject.x = 300;\n     displayObject.y = 200;\n     stage.addChild(displayObject);\n     var point = displayObject.localToGlobal(100, 100);\n     // Results in x=400, y=300",
            "itemtype": "method",
            "name": "localToGlobal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a new Point object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A Point instance with x and y properties correlating to the transformed coordinates\non the stage.",
                "type": "Point"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6696,
            "description": "Transforms the specified x and y position from the global (stage) coordinate space to the\ncoordinate space of the display object. For example, this could be used to determine\nthe current mouse position within the display object. Returns a Point instance with x and y properties\ncorrelating to the transformed position in the display object's coordinate space.\n\n<h4>Example</h4>\n\n     displayObject.x = 300;\n     displayObject.y = 200;\n     stage.addChild(displayObject);\n     var point = displayObject.globalToLocal(100, 100);\n     // Results in x=-200, y=-100",
            "itemtype": "method",
            "name": "globalToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position on the stage to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position on the stage to transform.",
                    "type": "Number"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a new Point object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A Point instance with x and y properties correlating to the transformed position in the\ndisplay object's coordinate space.",
                "type": "Point"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6721,
            "description": "Transforms the specified x and y position from the coordinate space of this display object to the coordinate\nspace of the target display object. Returns a Point instance with x and y properties correlating to the\ntransformed position in the target's coordinate space. Effectively the same as using the following code with\n{{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\n\n     var pt = this.localToGlobal(x, y);\n     pt = target.globalToLocal(pt.x, pt.y);",
            "itemtype": "method",
            "name": "localToLocal",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position on the source display object to transform.",
                    "type": "Number"
                },
                {
                    "name": "target",
                    "description": "The target display object to which the coordinates will be transformed.",
                    "type": "DisplayObject"
                },
                {
                    "name": "pt",
                    "description": "An object to copy the result into. If omitted a new Point object with x/y properties will be returned.",
                    "type": "Point | Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns a Point instance with x and y properties correlating to the transformed position\nin the target's coordinate space.",
                "type": "Point"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6743,
            "description": "Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\nOmitted parameters will have the default value set.\n\n<h4>Example</h4>\n\n     displayObject.setTransform(100, 100, 2, 2);",
            "itemtype": "method",
            "name": "setTransform",
            "params": [
                {
                    "name": "x",
                    "description": "The horizontal translation (x position) in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "The vertical translation (y position) in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "scaleX",
                    "description": "The horizontal scale, as a percentage of 1",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "scaleY",
                    "description": "the vertical scale, as a percentage of 1",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "rotation",
                    "description": "The rotation, in degrees",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "skewX",
                    "description": "The horizontal skew factor",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "skewY",
                    "description": "The vertical skew factor",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "regX",
                    "description": "The horizontal registration point in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "regY",
                    "description": "The vertical registration point in pixels",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Returns this instance. Useful for chaining commands.",
                "type": "DisplayObject"
            },
            "chainable": 1,
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6777,
            "description": "Returns a matrix based on this object's current transform.",
            "itemtype": "method",
            "name": "getMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "Optional. A Matrix2D object to populate with the calculated values. If null, a new\nMatrix object is returned.",
                    "type": "Matrix2D"
                }
            ],
            "return": {
                "description": "A matrix representing this display object's transform.",
                "type": "Matrix2D"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6789,
            "description": "Generates a Matrix2D object representing the combined transform of the display object and all of its\nparent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\nbe used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\nand {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getConcatenatedMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\nIf null, a new Matrix2D object is returned.",
                    "type": "Matrix2D",
                    "optional": true
                }
            ],
            "return": {
                "description": "The combined matrix.",
                "type": "Matrix2D"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6807,
            "description": "Generates a DisplayProps object representing the combined display properties of the  object and all of its\nparent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).",
            "itemtype": "method",
            "name": "getConcatenatedDisplayProps",
            "params": [
                {
                    "name": "props",
                    "description": "A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\nIf null, a new DisplayProps object is returned.",
                    "type": "DisplayProps",
                    "optional": true
                }
            ],
            "return": {
                "description": "The combined display properties.",
                "type": "DisplayProps"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6828,
            "description": "Tests whether the display object intersects the specified point in <em>local</em> coordinates (ie. draws a pixel\nwith alpha > 0 at the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation\nof the display object.\n\n<h4>Example</h4>\n\n\t\tvar myShape = new createjs.Shape();\n\t\tmyShape.graphics.beginFill(\"red\").drawRect(100, 100, 20, 50);\n\n\t\tconsole.log(myShape.hitTest(10,10); // false\n\t\tconsole.log(myShape.hitTest(110, 25); // true\n\nNote that to use Stage coordinates (such as {{#crossLink \"Stage/mouseX:property\"}}{{/crossLink}}), they must\nfirst be converted to local coordinates:\n\n     stage.addEventListener(\"stagemousedown\", handleMouseDown);\n     function handleMouseDown(event) {\n     \tvar p = myShape.globalToLocal(stage.mouseX, stage.mouseY);\n         var hit = myShape.hitTest(p.x, p.y);\n     }\n\nShape-to-shape collision is not currently supported by EaselJS.",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to check in the display object's local coordinates.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to check in the display object's local coordinates.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\nlocal Point.",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6869,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n     var shape = stage.addChild(new createjs.Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the DisplayObject instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "DisplayObject"
            },
            "chainable": 1,
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6887,
            "description": "Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\nObjects that have been cached will return the bounds of the cache.\n\nNot all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n{{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\nbounds.\n\n<table>\n\t<tr><td><b>All</b></td><td>\n\t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t\tthe automatic calculations listed below.\n\t</td></tr>\n\t<tr><td><b>Bitmap</b></td><td>\n\t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t</td></tr>\n\t<tr><td><b>Sprite</b></td><td>\n\t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\n\t</td></tr>\n\t<tr><td><b>Container</b></td><td>\n\t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t</td></tr>\n\t<tr><td><b>Shape</b></td><td>\n\t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t</td></tr>\n\t<tr><td><b>Text</b></td><td>\n\t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t\tnot, especially when using textBaseline values other than \"top\".\n\t</td></tr>\n\t<tr><td><b>BitmapText</b></td><td>\n\t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t\tto (x=0,y=0).\n\t</td></tr>\n</table>\n\nBounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\nare recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\nbounds explicitly:\n\n\tvar bounds = obj.getBounds();\n\tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t// getBounds will now use the set values, instead of recalculating\n\nTo reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\nvalues if you need to retain it.\n\n\tvar myBounds = obj.getBounds().clone();\n\t// OR:\n\tmyRect.copy(obj.getBounds());",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "A Rectangle instance representing the bounds, or null if bounds are not available for this\nobject.",
                "type": "Rectangle"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6953,
            "description": "Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\nObjects that have been cached will return the transformed bounds of the cache.\n\nNot all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \n{{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\nbounds.\n\nTo reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\nvalues if you need to retain it.\n\nContainer instances calculate aggregate bounds for all children that return bounds via getBounds.",
            "itemtype": "method",
            "name": "getTransformedBounds",
            "return": {
                "description": "A Rectangle instance representing the bounds, or null if bounds are not available for this object.",
                "type": "Rectangle"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6972,
            "description": "Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\nText) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\noverride calculated bounds.\n\nThe bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\nwith a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).",
            "itemtype": "method",
            "name": "setBounds",
            "params": [
                {
                    "name": "x",
                    "description": "The x origin of the bounds. Pass null to remove the manual bounds.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y origin of the bounds.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width of the bounds.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the bounds.",
                    "type": "Number"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 6990,
            "description": "Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\nreverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\nare copied by reference (masks, individual filter instances, hit area)",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current DisplayObject instance.",
                "type": "DisplayObject"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7001,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7013,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "The DisplayObject instance which will have properties from the current DisplayObject\ninstance copied into.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "o",
                "type": "DisplayObject"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7046,
            "itemtype": "method",
            "name": "_applyShadow",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "shadow",
                    "description": "",
                    "type": "Shadow"
                }
            ],
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7061,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7077,
            "itemtype": "method",
            "name": "_testHit",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7094,
            "itemtype": "method",
            "name": "_applyFilters",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7109,
            "itemtype": "method",
            "name": "_getFilterBounds",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7125,
            "itemtype": "method",
            "name": "_getBounds",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "If true, does not apply this object's transform.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7136,
            "itemtype": "method",
            "name": "_transformBounds",
            "params": [
                {
                    "name": "bounds",
                    "description": "",
                    "type": "Rectangle"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7169,
            "description": "Indicates whether the display object has any mouse event listeners or a cursor.",
            "itemtype": "method",
            "name": "_isMouseOpaque",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DisplayObject",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7222,
            "description": "The array of children in the display list. You should usually use the child management methods such as\n{{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\n{{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\nincluded for advanced uses.",
            "itemtype": "property",
            "name": "children",
            "type": "Array",
            "default": "null",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7233,
            "description": "Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\nIf false, the children will be aggregated under the container - for example, a click on a child shape would\ntrigger a click event on the container.",
            "itemtype": "property",
            "name": "mouseChildren",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7243,
            "description": "If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\nIn addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\non some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).",
            "itemtype": "property",
            "name": "tickChildren",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7257,
            "description": "Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getNumChildren",
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7267,
            "description": "Returns the number of children in the container.",
            "itemtype": "property",
            "name": "numChildren",
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7281,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7289,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7302,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7331,
            "description": "Adds a child to the top of the display list.\n\n<h4>Example</h4>\n\n\t\tcontainer.addChild(bitmapInstance);\n\nYou can also add multiple children at once:\n\n\t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7360,
            "description": "Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\nsetting its parent to this Container.\n\n<h4>Example</h4>\n\n     addChildAt(child1, index);\n\nYou can also add multiple children, such as:\n\n     addChildAt(child1, child2, ..., index);\n\nThe index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\nyou could use:\n\n     container.addChildAt(myShape, container.getChildIndex(otherShape));\n\nThis would also bump otherShape's index up by one. Fails silently if the index is out of range.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to add the child at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the last child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7399,
            "description": "Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\nalready known.\n\n<h4>Example</h4>\n\n     container.removeChild(child);\n\nYou can also remove multiple children:\n\n     removeChild(child1, child2, ...);\n\nReturns true if the child (or children) was removed, or false if it was not in the display list.",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "The child to remove.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "true if the child (or children) was removed, or false if it was not in the display list.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7426,
            "description": "Removes the child at the specified index from the display list, and sets its parent to null.\n\n<h4>Example</h4>\n\n     container.removeChildAt(2);\n\nYou can also remove multiple children:\n\n     container.removeChild(2, 7, ...)\n\nReturns true if the child (or children) was removed, or false if any index was out of range.",
            "itemtype": "method",
            "name": "removeChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the child to remove.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "true if the child (or children) was removed, or false if any index was out of range.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7460,
            "description": "Removes all children from the display list.\n\n<h4>Example</h4>\n\n\tcontainer.removeAllChildren();",
            "itemtype": "method",
            "name": "removeAllChildren",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7474,
            "description": "Returns the child at the specified index.\n\n<h4>Example</h4>\n\n     container.getChildAt(2);",
            "itemtype": "method",
            "name": "getChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the child to return.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The child at the specified index. Returns null if there is no child at the index.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7489,
            "description": "Returns the child with the specified name.",
            "itemtype": "method",
            "name": "getChildByName",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the child to return.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The child with the specified name.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7503,
            "description": "Performs an array sort operation on the child list.\n\n<h4>Example: Display children with a higher y in front.</h4>\n\n     var sortFunction = function(obj1, obj2, options) {\n         if (obj1.y > obj2.y) { return 1; }\n         if (obj1.y < obj2.y) { return -1; }\n         return 0;\n     }\n     container.sortChildren(sortFunction);",
            "itemtype": "method",
            "name": "sortChildren",
            "params": [
                {
                    "name": "sortFunction",
                    "description": "the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\ndocumentation for details.",
                    "type": "Function"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7523,
            "description": "Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\n<h4>Example</h4>\n\n     var index = container.getChildIndex(child);",
            "itemtype": "method",
            "name": "getChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "The child to return the index of.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The index of the specified child. -1 if the child is not found.",
                "type": "Number"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7538,
            "description": "Swaps the children at the specified indexes. Fails silently if either index is out of range.",
            "itemtype": "method",
            "name": "swapChildrenAt",
            "params": [
                {
                    "name": "index1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "index2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7553,
            "description": "Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\nContainer.",
            "itemtype": "method",
            "name": "swapChildren",
            "params": [
                {
                    "name": "child1",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "child2",
                    "description": "",
                    "type": "DisplayObject"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7573,
            "description": "Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "setChildIndex",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7590,
            "description": "Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\nof this container.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObject to be checked.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "true if the specified display object either is this container or is a descendent.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7605,
            "description": "Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\nspecified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\ntransform properties including regX/Y.",
            "itemtype": "method",
            "name": "hitTest",
            "params": [
                {
                    "name": "x",
                    "description": "The x position to check in the display object's local coordinates.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to check in the display object's local coordinates.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\ncoordinates.",
                "type": "Boolean"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7620,
            "description": "Returns an array of all display objects under the specified coordinates that are in this container's display\nlist. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\nset to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\nThis uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\nFor example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\nand only if the mouse's position has changed.\n\n<ul>\n    <li>By default (mode=0) this method evaluates all display objects.</li>\n    <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\n\t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\n\t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\n\t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\n\t   \tin some cases by reducing the number of display objects that need to be tested.</li>\n</li>\n\nThis method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "mode",
                    "description": "The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "An Array of DisplayObjects under the specified coordinates.",
                "type": "Array"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7652,
            "description": "Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\nobject. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\noperation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.",
            "itemtype": "method",
            "name": "getObjectUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "The x position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position in the container to test.",
                    "type": "Number"
                },
                {
                    "name": "mode",
                    "description": "The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The top-most display object under the specified coordinates.",
                "type": "DisplayObject"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7667,
            "description": "Docced in superclass.",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7675,
            "description": "Docced in superclass.",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7682,
            "description": "Returns a clone of this Container. Some properties that are specific to this instance's current context are\nreverted to their defaults (for example .parent).",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "recursive",
                    "description": "If true, all of the descendants of this container will be cloned recursively. If false, the\nproperties of the container will be cloned, but the new instance will not have any children.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A clone of the current Container instance.",
                "type": "Container"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7696,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7707,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7722,
            "description": "Recursively clones all children of this container, and adds them to the target container.",
            "itemtype": "method",
            "name": "cloneChildren",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "o",
                    "description": "The target container.",
                    "type": "Container"
                }
            ],
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7738,
            "itemtype": "method",
            "name": "_getObjectsUnderPoint",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "mouse",
                    "description": "If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.",
                    "type": "Boolean"
                },
                {
                    "name": "activeListener",
                    "description": "If true, there is an active mouse event listener on a parent object.",
                    "type": "Boolean"
                },
                {
                    "name": "currentDepth",
                    "description": "Indicates the current depth of the search.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "DisplayObject"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7792,
            "itemtype": "method",
            "name": "_testMask",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Indicates whether the x/y is within the masked region.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7823,
            "itemtype": "method",
            "name": "_getBounds",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "If true, does not apply this object's transform.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Container",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7891,
            "description": "Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\nto manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\nexample).\n\n<h4>Example</h4>\n\n     var stage = new createjs.Stage(\"canvasId\");\n     stage.autoClear = false;",
            "itemtype": "property",
            "name": "autoClear",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7907,
            "description": "The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\nfirst stage that will be ticked (or they will clear each other's render).\n\nWhen changing the canvas property you must disable the events on the old canvas, and enable events on the\nnew canvas or mouse events will not work as expected. For example:\n\n     myStage.enableDOMEvents(false);\n     myStage.canvas = anotherCanvas;\n     myStage.enableDOMEvents(true);",
            "itemtype": "property",
            "name": "canvas",
            "type": "HTMLCanvasElement | Object",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7923,
            "description": "The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\nposition over the canvas, and mouseInBounds will be set to false.",
            "itemtype": "property",
            "name": "mouseX",
            "type": "Number",
            "readonly": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7932,
            "description": "The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\nposition over the canvas, and mouseInBounds will be set to false.",
            "itemtype": "property",
            "name": "mouseY",
            "type": "Number",
            "readonly": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7941,
            "description": "Specifies the area of the stage to affect when calling update. This can be use to selectively\nre-draw specific regions of the canvas. If null, the whole canvas area is drawn.",
            "itemtype": "property",
            "name": "drawRect",
            "type": "{Rectangle}",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7949,
            "description": "Indicates whether display objects should be rendered on whole pixels. You can set the\n{{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\ndisplay objects to false to enable/disable this behaviour on a per instance basis.",
            "itemtype": "property",
            "name": "snapToPixelEnabled",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7959,
            "description": "Indicates whether the mouse is currently within the bounds of the canvas.",
            "itemtype": "property",
            "name": "mouseInBounds",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7967,
            "description": "If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.",
            "itemtype": "property",
            "name": "tickOnUpdate",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7975,
            "description": "If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n{{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nx/y/rawX/rawY.",
            "itemtype": "property",
            "name": "mouseMoveOutside",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7986,
            "description": "Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\nThis works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.",
            "itemtype": "property",
            "name": "preventSelection",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 7995,
            "description": "The hitArea property is not supported for Stage.",
            "itemtype": "property",
            "name": "hitArea",
            "type": "{DisplayObject}",
            "default": "null",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8004,
            "description": "Holds objects with data for each active pointer id. Each object has the following properties:\nx, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)",
            "itemtype": "property",
            "name": "_pointerData",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8013,
            "description": "Number of active pointers.",
            "itemtype": "property",
            "name": "_pointerCount",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8021,
            "description": "The ID of the primary pointer.",
            "itemtype": "property",
            "name": "_primaryPointerID",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8029,
            "itemtype": "property",
            "name": "_mouseOverIntervalID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8036,
            "itemtype": "property",
            "name": "_nextStage",
            "access": "protected",
            "tagname": "",
            "type": "Stage",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8043,
            "itemtype": "property",
            "name": "_prevStage",
            "access": "protected",
            "tagname": "",
            "type": "Stage",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8056,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8071,
            "description": "Dispatched when the user moves the mouse over the canvas.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemousemove",
            "since": "0.6.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8078,
            "description": "Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nclass for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemousedown",
            "since": "0.6.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8085,
            "description": "Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\nYou can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\nSee the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.",
            "itemtype": "event",
            "name": "stagemouseup",
            "since": "0.6.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8093,
            "description": "Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\nThis is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nclass for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseleave",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8101,
            "description": "Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\nThis is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\nclass for a listing of event properties.",
            "itemtype": "event",
            "name": "mouseenter",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8109,
            "description": "Dispatched each update immediately before the tick event is propagated through the display list.\nYou can call preventDefault on the event object to cancel propagating the tick event.",
            "itemtype": "event",
            "name": "tickstart",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8116,
            "description": "Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\ntickOnUpdate is false. Precedes the \"drawstart\" event.",
            "itemtype": "event",
            "name": "tickend",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8123,
            "description": "Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\nYou can call preventDefault on the event object to cancel the draw.",
            "itemtype": "event",
            "name": "drawstart",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8130,
            "description": "Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.",
            "itemtype": "event",
            "name": "drawend",
            "since": "0.7.0",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8138,
            "description": "Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\nThis can be useful in cases where you have multiple layered canvases and want user interactions\nevents to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\n     topStage.nextStage = bottomStage;\n\nTo disable relaying, set nextStage to null.\n\nMouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\nof the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\nConsiderations when using roll over in relay targets:<OL>\n<LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n<LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n<LI> All relay targets will share the frequency value of the top-most stage</LI>\n</OL>\nTo illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n30 as it's desired frequency):\n\ttopStage.nextStage = targetStage;\n\ttopStage.enableMouseOver(10);\n\ttargetStage.enableMouseOver(30);\n\nIf the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\nDOM events using:\n\n\ttargetStage.enableDOMEvents(false);",
            "itemtype": "property",
            "name": "nextStage",
            "type": "{Stage}",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8185,
            "description": "Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\nunless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\nand then render the display list to the canvas.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "props",
                    "description": "Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8216,
            "description": "Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\nunless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\nIf a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\npropagated to listeners.\n\nSome time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\na {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\npassed as the `props` parameter to `tick()`. For example:\n\n\tTicker.on(\"tick\", handleTick);\n\tfunction handleTick(evtObj) {\n\t\t// clone the event object from Ticker, and add some custom data to it:\n\t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t\t\n\t\t// pass it to stage.update():\n\t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t}\n\t\n\t// ...\n\tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\tfunction handleDisplayObjectTick(evt) {\n\t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t}",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "props",
                    "description": "An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8258,
            "description": "Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\nevent is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\ndirectly, using:\n\n     Ticker.addEventListener(\"tick\", myStage\");\n\nNote that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\ndisplay object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.",
            "itemtype": "property",
            "name": "handleEvent",
            "type": "Function",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8274,
            "description": "Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.",
            "itemtype": "method",
            "name": "clear",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8285,
            "description": "Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\nbe specified as the src value of an image element.",
            "itemtype": "method",
            "name": "toDataURL",
            "params": [
                {
                    "name": "backgroundColor",
                    "description": "The background color to be used for the generated image. Any valid CSS color\nvalue is allowed. The default value is a transparent background.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "mimeType",
                    "description": "The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\nis passed in, or if the browser does not support the specified MIME type, the default value will be used.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"image/png\""
                }
            ],
            "return": {
                "description": "a Base64 encoded image.",
                "type": "String"
            },
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8317,
            "description": "Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\nand {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\nand {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\nbe expensive to generate, so they are disabled by default. The frequency of the events can be controlled\nindependently of mouse move events via the optional `frequency` parameter.\n\n<h4>Example</h4>\n\n     var stage = new createjs.Stage(\"canvasId\");\n     stage.enableMouseOver(10); // 10 updates per second",
            "itemtype": "method",
            "name": "enableMouseOver",
            "params": [
                {
                    "name": "frequency",
                    "description": "Optional param specifying the maximum number of times per second to broadcast\nmouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\nresponsive, but uses less CPU.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "20"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8348,
            "description": "Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\npractice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\nevents from the page.\n\nWhen changing the canvas property you must disable the events on the old canvas, and enable events on the\nnew canvas or mouse events will not work as expected. For example:\n\n     myStage.enableDOMEvents(false);\n     myStage.canvas = anotherCanvas;\n     myStage.enableDOMEvents(true);",
            "itemtype": "method",
            "name": "enableDOMEvents",
            "params": [
                {
                    "name": "enable",
                    "description": "Indicates whether to enable or disable the events. Default is true.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8388,
            "description": "Stage instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8396,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8407,
            "itemtype": "method",
            "name": "_getElementRect",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8435,
            "itemtype": "method",
            "name": "_getPointerData",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8446,
            "itemtype": "method",
            "name": "_handleMouseMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8456,
            "itemtype": "method",
            "name": "_handlePointerMove",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8484,
            "itemtype": "method",
            "name": "_updatePointerPosition",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8521,
            "itemtype": "method",
            "name": "_handleMouseUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8530,
            "itemtype": "method",
            "name": "_handlePointerUp",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "clear",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8558,
            "itemtype": "method",
            "name": "_handleMouseDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8567,
            "itemtype": "method",
            "name": "_handlePointerDown",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "pageX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "pageY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8590,
            "itemtype": "method",
            "name": "_testMouseOver",
            "params": [
                {
                    "name": "clear",
                    "description": "If true, clears the mouseover / rollover (ie. no target)",
                    "type": "Boolean"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                },
                {
                    "name": "eventTarget",
                    "description": "The stage that the cursor is actively over.",
                    "type": "Stage"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8659,
            "itemtype": "method",
            "name": "_handleDoubleClick",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                },
                {
                    "name": "owner",
                    "description": "Indicates that the event has already been captured & handled by the indicated stage.",
                    "type": "Stage"
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8674,
            "itemtype": "method",
            "name": "_dispatchMouseEvent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "DisplayObject"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "pointerId",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "nativeEvent",
                    "description": "",
                    "type": "MouseEvent",
                    "optional": true
                },
                {
                    "name": "relatedTarget",
                    "description": "",
                    "type": "DisplayObject",
                    "optional": true
                }
            ],
            "class": "Graphics.Stage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8743,
            "description": "The image to render. This can be an Image, a Canvas, or a Video. Not all browsers (especially\nmobile browsers) support drawing video to a canvas.",
            "itemtype": "property",
            "name": "image",
            "type": "HTMLImageElement | HTMLCanvasElement | HTMLVideoElement",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8756,
            "description": "Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\nNote that video sources must have a width / height set to work correctly with `sourceRect`.",
            "itemtype": "property",
            "name": "sourceRect",
            "type": "Rectangle",
            "default": "null",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8769,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8777,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8791,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8823,
            "description": "Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\nYou should <b>not</b> cache Bitmap instances as it can degrade performance.\n\n<strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\nTo see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "cache",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8833,
            "description": "Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\nYou should <b>not</b> cache Bitmap instances as it can degrade performance.\n\n<strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\nTo see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "updateCache",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8843,
            "description": "Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\nYou should <b>not</b> cache Bitmap instances as it can degrade performance.\n\n<strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\nTo see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8853,
            "description": "Docced in superclass.",
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8864,
            "description": "Returns a clone of the Bitmap instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Bitmap instance.",
                "type": "Bitmap"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8876,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Bitmap",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8928,
            "description": "The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\ndefinitions, this will advance non-sequentially. This will always be an integer value.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "{Number}",
            "default": "0",
            "readonly": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8938,
            "description": "Returns the name of the currently playing animation.",
            "itemtype": "property",
            "name": "currentAnimation",
            "type": "{String}",
            "final": 1,
            "readonly": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8947,
            "description": "Prevents the animation from advancing each tick automatically. For example, you could create a sprite\nsheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.",
            "itemtype": "property",
            "name": "paused",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8956,
            "description": "The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\ndata. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "{SpriteSheet}",
            "readonly": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8965,
            "description": "Specifies the current frame index within the currently playing animation. When playing normally, this will increase\nfrom 0 to n-1, where n is the number of frames in the current animation.\n\nThis could be a non-integer value if\nusing time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\nnot an integer.",
            "itemtype": "property",
            "name": "currentAnimationFrame",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8978,
            "description": "By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\nSpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\nframerate.\n\nFor example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\nadvance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\nvary slightly between frames.\n\nThis feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\npassed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "framerate",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 8997,
            "description": "Current animation object.",
            "itemtype": "property",
            "name": "_animation",
            "access": "protected",
            "tagname": "",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9006,
            "description": "Current frame index.",
            "itemtype": "property",
            "name": "_currentFrame",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9015,
            "description": "Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame",
            "itemtype": "property",
            "name": "_skipAdvance",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9029,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9039,
            "description": "Dispatched when an animation reaches its ends.",
            "itemtype": "event",
            "name": "animationend",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The name of the animation that just ended.",
                    "type": "String"
                },
                {
                    "name": "next",
                    "description": "The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9049,
            "description": "Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\nor calling gotoAndPlay() or gotoAndStop().",
            "itemtype": "event",
            "name": "change",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9059,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9071,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9094,
            "description": "Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\nYou should not cache Sprite instances as it can degrade performance.",
            "itemtype": "method",
            "name": "cache",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9100,
            "description": "Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\nYou should not cache Sprite instances as it can degrade performance.",
            "itemtype": "method",
            "name": "updateCache",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9106,
            "description": "Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\nYou should not cache Sprite instances as it can degrade performance.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9112,
            "description": "Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\nor {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\nunchanged.",
            "itemtype": "method",
            "name": "play",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9122,
            "description": "Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\nis called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\nwill resume playback.",
            "itemtype": "method",
            "name": "stop",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9132,
            "description": "Sets paused to false and plays the specified animation name, named frame, or frame number.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name that the playhead should move to\nand begin playing.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9144,
            "description": "Sets paused to true and seeks to the specified animation name, named frame, or frame number.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name that the playhead should move to\nand stop.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9155,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "params": [
                {
                    "name": "time",
                    "description": "The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\nor its SpriteSheet.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "advance",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9167,
            "description": "Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\nthe origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\nrectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\nAlso see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\nloaded.",
                "type": "Rectangle"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9182,
            "description": "Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\ninstances.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Sprite instance.",
                "type": "Sprite"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9192,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9202,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": "o",
                "type": "Sprite"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9222,
            "description": "Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\nticks.",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_tick",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9238,
            "description": "Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_normalizeFrame",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9289,
            "description": "Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n{{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)",
            "itemtype": "property",
            "name": "_dispatchAnimationEnd",
            "access": "private",
            "tagname": "",
            "type": "{Function}",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9311,
            "description": "Moves the playhead to the specified frame number or animation.",
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation that the playhead should move to.",
                    "type": "String|Number"
                },
                {
                    "name": "frame",
                    "description": "The frame of the animation to go to. Defaults to 0.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sprite",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9377,
            "description": "The graphics instance to display.",
            "itemtype": "property",
            "name": "graphics",
            "type": "Graphics",
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9391,
            "description": "Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the Shape would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9403,
            "description": "Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\nthe draw was handled (useful for overriding functionality).\n\n<i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache. For example,\nused for drawing the cache (to prevent it from simply drawing an existing cache back into itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9420,
            "description": "Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\ntheir defaults (for example .parent).",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "recursive",
                    "description": "If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\ncloned. If false, the Graphics instance will be shared with the new Shape.",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9432,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Shape",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9490,
            "description": "The text to display.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9497,
            "description": "The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9504,
            "description": "The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\nIt will also accept valid canvas fillStyle values.",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9512,
            "description": "The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\ninformation view the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>. Default is \"left\".",
            "itemtype": "property",
            "name": "textAlign",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9522,
            "description": "The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>. Default is \"top\".",
            "itemtype": "property",
            "name": "textBaseline",
            "type": "String",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9531,
            "description": "The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\nshrunk to make it fit in this width. For detailed information view the\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\nwhatwg spec</a>.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9541,
            "description": "If greater than 0, the text will be drawn as a stroke (outline) of the specified width.",
            "itemtype": "property",
            "name": "outline",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9548,
            "description": "Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\nthe value of getMeasuredLineHeight is used.",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9556,
            "description": "Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\nthe text will not be wrapped.",
            "itemtype": "property",
            "name": "lineWidth",
            "type": "Number",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9571,
            "itemtype": "property",
            "name": "_workingContext",
            "type": "CanvasRenderingContext2D",
            "access": "private",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9581,
            "description": "Lookup table for the ratio to offset bounds x calculations based on the textAlign property.",
            "itemtype": "property",
            "name": "H_OFFSETS",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9590,
            "description": "Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.",
            "itemtype": "property",
            "name": "H_OFFSETS",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9601,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9613,
            "description": "Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9634,
            "description": "Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.",
            "itemtype": "method",
            "name": "getMeasuredWidth",
            "return": {
                "description": "The measured, untransformed width of the text.",
                "type": "Number"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9643,
            "description": "Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\nwidth of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.",
            "itemtype": "method",
            "name": "getMeasuredLineHeight",
            "return": {
                "description": "an approximate line height of the text, ignoring the lineHeight property. This is\nbased on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.",
                "type": "Number"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9654,
            "description": "Returns the approximate height of multi-line text by multiplying the number of lines against either the\n<code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\nthis operation requires the text flowing logic to run, which has an associated CPU cost.",
            "itemtype": "method",
            "name": "getMeasuredHeight",
            "return": {
                "description": "The approximate height of the untransformed multi-line text.",
                "type": "Number"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9665,
            "description": "Docced in superclass.",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9680,
            "description": "Returns an object with width, height, and lines properties. The width and height are the visual width and height\nof the drawn text. The lines property contains an array of strings, one for\neach line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\nwhitespace removed.",
            "itemtype": "method",
            "name": "getMetrics",
            "return": {
                "description": "An object with width, height, and lines properties.",
                "type": "Object"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9695,
            "description": "Returns a clone of the Text instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Text instance.",
                "type": "Text"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9704,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9715,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Text"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "o",
                "type": "Text"
            },
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9732,
            "itemtype": "method",
            "name": "_getWorkingContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "return": {
                "description": "",
                "type": "CanvasRenderingContext2D"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9745,
            "description": "Draws multiline text.",
            "itemtype": "method",
            "name": "_drawText",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "lines",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9807,
            "itemtype": "method",
            "name": "_drawTextLine",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9821,
            "itemtype": "method",
            "name": "_getMeasuredWidth",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Text",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9868,
            "description": "The text to display.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "\"\"",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9876,
            "description": "A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\nshould have a single frame animation defined in the sprite sheet named the same as\ncorresponding character. For example, the following animation definition:\n\n\t\t\"A\": {frames: [0]}\n\nwould indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\nis also acceptable:\n\n\t\t\"A\": 0\n\nNote that if a character in the text is not found in the sprite sheet, it will also\ntry to use the alternate case (upper or lower).\n\nSee SpriteSheet for more information on defining sprite sheet data.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "SpriteSheet",
            "default": "null",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9898,
            "description": "The height of each line of text. If 0, then it will use a line height calculated\nby checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\nthose characters are not defined, it will use the height of the first frame of the\nsprite sheet.",
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "default": "0",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9909,
            "description": "This spacing (in pixels) will be added after each character in the output.",
            "itemtype": "property",
            "name": "letterSpacing",
            "type": "Number",
            "default": "0",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9917,
            "description": "If a space character is not defined in the sprite sheet, then empty pixels equal to\nspaceWidth will be inserted instead. If 0, then it will use a value calculated\nby checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\nthose characters are not defined, it will use the width of the first frame of the\nsprite sheet.",
            "itemtype": "property",
            "name": "spaceWidth",
            "type": "Number",
            "default": "0",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9931,
            "itemtype": "property",
            "name": "_oldProps",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9940,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9954,
            "description": "BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\nan internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\nretained, slightly increasing memory use, but reducing instantiation.",
            "itemtype": "property",
            "name": "maxPoolSize",
            "type": "Number",
            "static": 1,
            "default": "100",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9965,
            "description": "Sprite object pool.",
            "type": "{Array}",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9975,
            "description": "Docced in superclass.",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9984,
            "description": "Docced in superclass.",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 9992,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10008,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "addChild",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10012,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "addChildAt",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10016,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "removeChild",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10020,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "removeChildAt",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10024,
            "description": "<strong>Disabled in BitmapText.</strong>",
            "itemtype": "method",
            "name": "removeAllChildren",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10032,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "BitmapText"
                }
            ],
            "return": {
                "description": "o",
                "type": "BitmapText"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10046,
            "itemtype": "method",
            "name": "_getFrameIndex",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10062,
            "itemtype": "method",
            "name": "_getFrame",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10074,
            "itemtype": "method",
            "name": "_getLineHeight",
            "params": [
                {
                    "name": "ss",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10084,
            "itemtype": "method",
            "name": "_getSpaceWidth",
            "params": [
                {
                    "name": "ss",
                    "description": "",
                    "type": "SpriteSheet"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10095,
            "itemtype": "method",
            "name": "_drawText",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.BitmapText",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10228,
            "description": "Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\nSee each constant for a description of the behaviour.",
            "itemtype": "property",
            "name": "mode",
            "type": "String",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10237,
            "description": "Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.",
            "itemtype": "property",
            "name": "startPosition",
            "type": "Number",
            "default": "0",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10245,
            "description": "Indicates whether this MovieClip should loop when it reaches the end of its timeline.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10253,
            "description": "The current frame of the movieclip.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10262,
            "description": "The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\ninstance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\ninstances to the timeline.\n\n<h4>Example</h4>\n\n     var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n     var mc = new createjs.MovieClip();\n     mc.timeline.addTween(tween);\n\nElements can be added and removed from the timeline by toggling an \"_off\" property\nusing the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\ncreate MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\nframe 1. You can use the \"visible\" property to achieve the same effect.\n\n     var tween = createjs.Tween.get(target).to({_off:false})\n         .wait(1).to({_off:true})\n         .wait(1).to({_off:false});",
            "itemtype": "property",
            "name": "timeline",
            "type": "Timeline",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10288,
            "description": "If true, the MovieClip's position will not advance when ticked.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10296,
            "description": "If true, actions in this MovieClip's tweens will be run when the playhead advances.",
            "itemtype": "property",
            "name": "actionsEnabled",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10304,
            "description": "If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\nit back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n<br><br>\nFor example, if you had a character animation with a \"body\" child MovieClip instance\nwith different costumes on each frame, you could set body.autoReset = false, so that\nyou can manually change the frame it is on, without worrying that it will be reset\nautomatically.",
            "itemtype": "property",
            "name": "autoReset",
            "type": "Boolean",
            "default": "true",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10318,
            "description": "An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.",
            "itemtype": "property",
            "name": "frameBounds",
            "type": "Array",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10326,
            "description": "By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\nwill cause it to advance based on elapsed time between ticks as appropriate to maintain the target\nframerate.\n\nFor example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\nadvance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\nvary slightly between frames.\n\nThis feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\npassed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "framerate",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10345,
            "itemtype": "property",
            "name": "_synchOffset",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10353,
            "itemtype": "property",
            "name": "_prevPos",
            "type": "Number",
            "default": "-1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10361,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10369,
            "description": "The time remaining from the previous tick, only applicable when .framerate is set.",
            "itemtype": "property",
            "name": "_t",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10377,
            "description": "List of display objects that are actively being managed by the MovieClip.",
            "itemtype": "property",
            "name": "_managed",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10389,
            "description": "The MovieClip will advance independently of its parent, even if its parent is paused.\nThis is the default mode.",
            "itemtype": "property",
            "name": "INDEPENDENT",
            "static": 1,
            "type": "String",
            "default": "\"independent\"",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10400,
            "description": "The MovieClip will only display a single frame (as determined by the startPosition property).",
            "itemtype": "property",
            "name": "SINGLE_FRAME",
            "static": 1,
            "type": "String",
            "default": "\"single\"",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10410,
            "description": "The MovieClip will be advanced only when its parent advances and will be synched to the position of\nthe parent MovieClip.",
            "itemtype": "property",
            "name": "SYNCHED",
            "static": 1,
            "type": "String",
            "default": "\"synched\"",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10436,
            "description": "Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "",
                "type": "Array"
            },
            "deprecated": true,
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10446,
            "description": "Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getCurrentLabel",
            "return": {
                "description": "",
                "type": "String"
            },
            "deprecated": true,
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10457,
            "description": "Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10467,
            "description": "Returns an array of objects with label and position (aka frame) properties, sorted by position.\nShortcut to TweenJS: Timeline.getLabels();",
            "itemtype": "property",
            "name": "labels",
            "type": "{Array}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10475,
            "description": "Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\nfor more information.",
            "itemtype": "property",
            "name": "currentLabel",
            "type": "{String}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10483,
            "description": "Returns the duration of this MovieClip in seconds or ticks. Identical to {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}}\nand provided for Flash API compatibility.",
            "itemtype": "property",
            "name": "totalFrames",
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10491,
            "description": "Returns the duration of this MovieClip in seconds or ticks.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10508,
            "description": "Constructor alias for backwards compatibility. This method will be removed in future versions.\nSubclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "initialize",
            "deprecated": true,
            "deprecationMessage": "in favour of `createjs.promote()`",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10516,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10528,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10546,
            "description": "Sets paused to false.",
            "itemtype": "method",
            "name": "play",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10554,
            "description": "Sets paused to true.",
            "itemtype": "method",
            "name": "stop",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10562,
            "description": "Advances this movie clip to the specified position or label and sets paused to false.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10572,
            "description": "Advances this movie clip to the specified position or label and sets paused to true.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation or frame name to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10582,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "params": [
                {
                    "name": "time",
                    "description": "The amount of time in ms to advance by. Only applicable if framerate is set.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "advance",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10608,
            "description": "MovieClip instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10617,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10628,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\nfunction.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10639,
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10654,
            "itemtype": "method",
            "name": "_reset",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10664,
            "itemtype": "method",
            "name": "_updateTimeline",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10714,
            "itemtype": "method",
            "name": "_setState",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10731,
            "description": "Adds a child to the timeline, and sets it up as a managed child.",
            "itemtype": "method",
            "name": "_addManagedChild",
            "params": [
                {
                    "name": "child",
                    "description": "The child MovieClip to manage",
                    "type": "MovieClip"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10750,
            "itemtype": "method",
            "name": "_getBounds",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Matrix2D"
                },
                {
                    "name": "ignoreTransform",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.MovieClip",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10784,
            "itemtype": "method",
            "name": "priority",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10790,
            "itemtype": "method",
            "name": "install",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10798,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String|Number|Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10809,
            "itemtype": "method",
            "name": "step",
            "access": "private",
            "tagname": "",
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10817,
            "itemtype": "method",
            "name": "tween",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                },
                {
                    "name": "prop",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String | Number | Boolean"
                },
                {
                    "name": "startValues",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "endValues",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "wait",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Graphics.MovieClipPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10861,
            "itemtype": "property",
            "name": "_workingCanvas",
            "static": 1,
            "type": "HTMLCanvasElement | Object",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10867,
            "itemtype": "property",
            "name": "_workingContext",
            "static": 1,
            "type": "CanvasRenderingContext2D",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10882,
            "description": "<b>This is an experimental method, and may be buggy. Please report issues.</b><br/><br/>\nExtends the existing sprite sheet by flipping the original frames horizontally, vertically, or both,\nand adding appropriate animation & frame data. The flipped animations will have a suffix added to their names\n(_h, _v, _hv as appropriate). Make sure the sprite sheet images are fully loaded before using this method.\n<br/><br/>\nFor example:<br/>\nSpriteSheetUtils.addFlippedFrames(mySpriteSheet, true, true);\nThe above would add frames that are flipped horizontally AND frames that are flipped vertically.\n<br/><br/>\nNote that you can also flip any display object by setting its scaleX or scaleY to a negative value. On some\nbrowsers (especially those without hardware accelerated canvas) this can result in slightly degraded performance,\nwhich is why addFlippedFrames is available.",
            "itemtype": "method",
            "name": "addFlippedFrames",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "",
                    "type": "SpriteSheet"
                },
                {
                    "name": "horizontal",
                    "description": "If true, horizontally flipped frames will be added.",
                    "type": "Boolean"
                },
                {
                    "name": "vertical",
                    "description": "If true, vertically flipped frames will be added.",
                    "type": "Boolean"
                },
                {
                    "name": "both",
                    "description": "If true, frames that are flipped both horizontally and vertically will be added.",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "Modern browsers perform better when flipping via a transform (ex. scaleX=-1) rendering this obsolete.",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10912,
            "description": "Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\nto use a spritesheet frame as the source for a bitmap fill.\n\n<strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\nwith a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\nmethod and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\nproperty of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\n\nThe extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.",
            "itemtype": "method",
            "name": "extractFrame",
            "static": 1,
            "params": [
                {
                    "name": "spriteSheet",
                    "description": "The SpriteSheet instance to extract a frame from.",
                    "type": "SpriteSheet"
                },
                {
                    "name": "frameOrAnimation",
                    "description": "The frame number or animation name to extract. If an animation\nname is specified, only the first frame of the animation will be extracted.",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "a single frame of the specified sprite sheet as a new PNG image.",
                "type": "HTMLImageElement"
            },
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 10945,
            "description": "Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\nJPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\nimages (those with detail that lend itself to JPEG compression) this can provide significant file size savings\nversus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).",
            "itemtype": "method",
            "name": "mergeAlpha",
            "static": 1,
            "params": [
                {
                    "name": "rbgImage",
                    "description": "The image (or canvas) containing the RGB channels to use.",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "alphaImage",
                    "description": "The image (or canvas) containing the alpha channel to use.",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "canvas",
                    "description": "Optional. If specified, this canvas will be used and returned. If not, a new canvas will be created.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "return": {
                "description": "A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.",
                "type": "HTMLCanvasElement"
            },
            "deprecated": true,
            "deprecationMessage": "Tools such as ImageAlpha generally provide better results. This will be moved to sandbox in the future.",
            "class": "Graphics.SpriteSheetUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11068,
            "description": "The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\nuse a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\ndimensions, then additional images will be created as needed.",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "Number",
            "default": "2048",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11078,
            "description": "The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\nuse a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\ndimensions, then additional images will be created as needed.",
            "itemtype": "property",
            "name": "maxHeight",
            "type": "Number",
            "default": "2048",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11088,
            "description": "The SpriteSheet that was generated. This will be null before a build is completed successfully.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "SpriteSheet",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11095,
            "description": "The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\nin the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\nto the a specific device resolution (ex. tablet vs mobile).",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "default": "1",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11105,
            "description": "The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.",
            "itemtype": "property",
            "name": "padding",
            "type": "Number",
            "default": "1",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11113,
            "description": "A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\nthought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\nthe builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\nDefaults to 0.3.",
            "itemtype": "property",
            "name": "timeSlice",
            "type": "Number",
            "default": "0.3",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11124,
            "description": "A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\nbeen initiated.",
            "itemtype": "property",
            "name": "progress",
            "type": "Number",
            "default": "-1",
            "readonly": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11134,
            "description": "A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\ncreated. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\nframerate.",
            "itemtype": "property",
            "name": "framerate",
            "type": "Number",
            "default": "0",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11146,
            "itemtype": "property",
            "name": "_frames",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11153,
            "itemtype": "property",
            "name": "_animations",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11160,
            "itemtype": "property",
            "name": "_data",
            "access": "protected",
            "tagname": "",
            "type": "Array",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11167,
            "itemtype": "property",
            "name": "_nextFrameIndex",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11174,
            "itemtype": "property",
            "name": "_index",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11181,
            "itemtype": "property",
            "name": "_timerID",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11188,
            "itemtype": "property",
            "name": "_scale",
            "access": "protected",
            "tagname": "",
            "type": "Number",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11197,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11216,
            "description": "Dispatched when a build completes.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11224,
            "description": "Dispatched when an asynchronous build has progress.",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "progress",
                    "description": "The current progress value (0-1).",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11235,
            "description": "Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\ncall {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\na function run immediately before the draw occurs. For example, this allows you to add a single source multiple\ntimes, but manipulate it or its children to change it to generate different frames.\n\nNote that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\ntransforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\nand pass in the Container as the source.",
            "itemtype": "method",
            "name": "addFrame",
            "params": [
                {
                    "name": "source",
                    "description": "The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.",
                    "type": "DisplayObject"
                },
                {
                    "name": "sourceRect",
                    "description": "A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\nsource to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n`nominalBounds` property on the source to use. If one is not found, the frame will be skipped.",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "Optional. The scale to draw this frame at. Default is 1.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "setupFunction",
                    "description": "A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "setupData",
                    "description": "Arbitrary setup data to pass to setupFunction as the second parameter.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "The index of the frame that was just added, or null if a sourceRect could not be determined.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11263,
            "description": "Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "addAnimation",
            "params": [
                {
                    "name": "name",
                    "description": "The name for the animation.",
                    "type": "String"
                },
                {
                    "name": "frames",
                    "description": "An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\nthat played frame indexes 3, 6, and 5 in that order.",
                    "type": "Array"
                },
                {
                    "name": "next",
                    "description": "Specifies the name of the animation to continue to after this animation ends. You can\nalso pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "speed",
                    "description": "Specifies a frame advance speed for this animation. For example, a value of 0.5 would\ncause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\nthe opposite effect.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11280,
            "description": "This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\nbuilder. Labels will be added as an animation running from the label index to the next label. For example, if\nthere is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\nwill add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\nframe index 10 to 14.\n\nNote that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\nset to `false`, ending on the last frame.",
            "itemtype": "method",
            "name": "addMovieClip",
            "params": [
                {
                    "name": "source",
                    "description": "The source MovieClip instance to add to the SpriteSheet.",
                    "type": "MovieClip"
                },
                {
                    "name": "sourceRect",
                    "description": "A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\ndraw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\nmethod, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\nfound, the MovieClip will be skipped.",
                    "type": "Rectangle",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "The scale to draw the movie clip at.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "setupFunction",
                    "description": "A function to call immediately before drawing each frame. It will be called\nwith three parameters: the source, setupData, and the frame index.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "setupData",
                    "description": "Arbitrary setup data to pass to setupFunction as the second parameter.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "labelFunction",
                    "description": "This method will be called for each MovieClip label that is added with four\nparameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\nand the end index. It must return a new name for the label/animation, or `false` to exclude the label.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11338,
            "description": "Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.",
            "itemtype": "method",
            "name": "build",
            "return": {
                "description": "The created SpriteSheet instance, or null if a build is already running or an error\noccurred.",
                "type": "SpriteSheet"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11352,
            "description": "Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\nrun 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\nspecified callback.",
            "itemtype": "method",
            "name": "buildAsync",
            "params": [
                {
                    "name": "timeSlice",
                    "description": "Sets the timeSlice property on this instance.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11367,
            "description": "Stops the current asynchronous build.",
            "itemtype": "method",
            "name": "stopAsync",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11376,
            "description": "SpriteSheetBuilder instances cannot be cloned.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11384,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11395,
            "itemtype": "method",
            "name": "_startBuild",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11436,
            "itemtype": "method",
            "name": "_setupMovieClipFrame",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11449,
            "itemtype": "method",
            "name": "_getSize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11460,
            "itemtype": "method",
            "name": "_fillRow",
            "params": [
                {
                    "name": "frames",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "img",
                    "description": "",
                    "type": "HTMLImageElement"
                },
                {
                    "name": "dataFrames",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "pad",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "The width & height of the row.",
                "type": "Number"
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11498,
            "itemtype": "method",
            "name": "_endBuild",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11509,
            "itemtype": "method",
            "name": "_run",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11534,
            "itemtype": "method",
            "name": "_drawNext",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Boolean Returns false if this is the last draw."
            },
            "class": "Graphics.SpriteSheetBuilder",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11617,
            "description": "The DOM object to manage.",
            "itemtype": "property",
            "name": "htmlElement",
            "type": "HTMLElement",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11626,
            "itemtype": "property",
            "name": "_oldMtx",
            "type": "Matrix2D",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11640,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11651,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11668,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "cache",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11674,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "uncache",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11680,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "updateCache",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11686,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "hitTest",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11692,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "localToGlobal",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11698,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "globalToLocal",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11704,
            "description": "Not applicable to DOMElement.",
            "itemtype": "method",
            "name": "localToLocal",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11710,
            "description": "DOMElement cannot be cloned. Throws an error.",
            "itemtype": "method",
            "name": "clone",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11718,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11727,
            "description": "Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\nare not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "click",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11733,
            "description": "Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\nare not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "dblClick",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11739,
            "description": "Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\nare not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "mousedown",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11745,
            "description": "The HTMLElement can listen for the mouseover event, not the DOMElement instance.\nSince DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.",
            "itemtype": "event",
            "name": "mouseover",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11751,
            "description": "Not applicable to DOMElement.",
            "itemtype": "event",
            "name": "tick",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11758,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "evtObj",
                    "description": "An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\nfunction.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11770,
            "itemtype": "method",
            "name": "_handleDrawEnd",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.DOMElement",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11850,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11865,
            "description": "Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.",
            "itemtype": "method",
            "name": "getBounds",
            "params": [
                {
                    "name": "rect",
                    "description": "If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.",
                    "type": "Rectangle",
                    "optional": true
                }
            ],
            "return": {
                "description": "If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.",
                "type": "Rectangle"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11875,
            "description": "Applies the filter to the specified context.",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D",
                    "optional": true
                },
                {
                    "name": "targetX",
                    "description": "The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "targetY",
                    "description": "The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "If the filter was applied successfully.",
                "type": "Boolean"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11905,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11914,
            "description": "Returns a clone of this Filter instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current Filter instance.",
                "type": "Filter"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11924,
            "itemtype": "method",
            "name": "_applyFilter",
            "params": [
                {
                    "name": "imageData",
                    "description": "Target ImageData instance.",
                    "type": "ImageData"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.Filter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11978,
            "description": "Horizontal blur radius in pixels",
            "itemtype": "property",
            "name": "blurX",
            "default": "0",
            "type": "Number",
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11986,
            "description": "Vertical blur radius in pixels",
            "itemtype": "property",
            "name": "blurY",
            "default": "0",
            "type": "Number",
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 11994,
            "description": "Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\nsmoother blur, but take twice as long to run.",
            "itemtype": "property",
            "name": "quality",
            "default": "1",
            "type": "Number",
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12010,
            "description": "Array of multiply values for blur calculations.",
            "itemtype": "property",
            "name": "MUL_TABLE",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12019,
            "description": "Array of shift values for blur calculations.",
            "itemtype": "property",
            "name": "SHG_TABLE",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12029,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12037,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12042,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12050,
            "class": "Graphics.BlurFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12303,
            "description": "The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\ndimensions as the target.",
            "itemtype": "property",
            "name": "alphaMap",
            "type": "HTMLImageElement|HTMLCanvasElement",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12313,
            "itemtype": "property",
            "name": "_alphaMap",
            "access": "protected",
            "tagname": "",
            "type": "HTMLImageElement|HTMLCanvasElement",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12320,
            "itemtype": "property",
            "name": "_mapData",
            "access": "protected",
            "tagname": "",
            "type": "Uint8ClampedArray",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12334,
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12342,
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12349,
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12362,
            "itemtype": "method",
            "name": "_prepAlphaMap",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AlphaMapFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12442,
            "description": "The image (or canvas) to use as the mask.",
            "itemtype": "property",
            "name": "mask",
            "type": "HTMLImageElement|HTMLCanvasElement",
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12456,
            "description": "Applies the filter to the specified context.\n\n<strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\ncorrectly.</strong>",
            "itemtype": "method",
            "name": "applyFilter",
            "params": [
                {
                    "name": "ctx",
                    "description": "The 2D context to use as the source.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "x",
                    "description": "The x position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height to use for the source rect.",
                    "type": "Number"
                },
                {
                    "name": "targetCtx",
                    "description": "NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.",
                    "type": "CanvasRenderingContext2D",
                    "optional": true
                },
                {
                    "name": "targetX",
                    "description": "NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "targetY",
                    "description": "NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "If the filter was applied successfully.",
                "type": "Boolean"
            },
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12491,
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12496,
            "class": "Graphics.AlphaMaskFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12552,
            "description": "Red channel multiplier.",
            "itemtype": "property",
            "name": "redMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12559,
            "description": "Green channel multiplier.",
            "itemtype": "property",
            "name": "greenMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12566,
            "description": "Blue channel multiplier.",
            "itemtype": "property",
            "name": "blueMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12573,
            "description": "Alpha channel multiplier.",
            "itemtype": "property",
            "name": "alphaMultiplier",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12580,
            "description": "Red channel offset (added to value).",
            "itemtype": "property",
            "name": "redOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12587,
            "description": "Green channel offset (added to value).",
            "itemtype": "property",
            "name": "greenOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12594,
            "description": "Blue channel offset (added to value).",
            "itemtype": "property",
            "name": "blueOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12601,
            "description": "Alpha channel offset (added to value).",
            "itemtype": "property",
            "name": "alphaOffset",
            "type": "Number",
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12615,
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12620,
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12627,
            "class": "Graphics.ColorFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12677,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12692,
            "description": "Array of delta values for contrast calculations.",
            "itemtype": "property",
            "name": "DELTA_INDEX",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12713,
            "description": "Identity matrix values.",
            "itemtype": "property",
            "name": "IDENTITY_MATRIX",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12728,
            "description": "The constant length of a color matrix.",
            "itemtype": "property",
            "name": "LENGTH",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12739,
            "description": "Resets the instance with the specified values.",
            "itemtype": "method",
            "name": "setColor",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12753,
            "description": "Resets the matrix to identity values.",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12763,
            "description": "Shortcut method to adjust brightness, contrast, saturation and hue.\nEquivalent to calling adjustHue(hue), adjustContrast(contrast),\nadjustBrightness(brightness), adjustSaturation(saturation), in that order.",
            "itemtype": "method",
            "name": "adjustColor",
            "params": [
                {
                    "name": "brightness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "contrast",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "saturation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12782,
            "description": "Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\nPositive values will make the image brighter, negative values will make it darker.",
            "itemtype": "method",
            "name": "adjustBrightness",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -255 & 255 that will be added to the RGB channels.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12803,
            "description": "Adjusts the contrast of pixel color.\nPositive values will increase contrast, negative values will decrease contrast.",
            "itemtype": "method",
            "name": "adjustContrast",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -100 & 100.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12836,
            "description": "Adjusts the color saturation of the pixel.\nPositive values will increase saturation, negative values will decrease saturation (trend towards greyscale).",
            "itemtype": "method",
            "name": "adjustSaturation",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -100 & 100.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12862,
            "description": "Adjusts the hue of the pixel color.",
            "itemtype": "method",
            "name": "adjustHue",
            "params": [
                {
                    "name": "value",
                    "description": "A value between -180 & 180.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12887,
            "description": "Concatenates (multiplies) the specified matrix with this one.",
            "itemtype": "method",
            "name": "concat",
            "params": [
                {
                    "name": "matrix",
                    "description": "An array or ColorMatrix instance.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12901,
            "description": "Returns a clone of this ColorMatrix.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of this ColorMatrix.",
                "type": "ColorMatrix"
            },
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12910,
            "description": "Return a length 25 (5x5) array instance containing this matrix's values.",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "An array holding this matrix's values.",
                "type": "Array"
            },
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12923,
            "description": "Copy the specified matrix's values to this matrix.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "matrix",
                    "description": "An array or ColorMatrix instance.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The ColorMatrix instance the method is called on (useful for chaining calls.)",
                "type": "ColorMatrix"
            },
            "chainable": 1,
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12938,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12949,
            "itemtype": "method",
            "name": "_multiplyMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12971,
            "description": "Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.",
            "itemtype": "method",
            "name": "_cleanValue",
            "params": [
                {
                    "name": "value",
                    "description": "The raw number",
                    "type": "Number"
                },
                {
                    "name": "limit",
                    "description": "The maximum that the number can be. The minimum is the limit * -1.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 12982,
            "description": "Makes sure matrixes are 5x5 (25 long).",
            "itemtype": "method",
            "name": "_fixMatrix",
            "params": [
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.ColorMatrix",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13042,
            "description": "A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "matrix",
            "type": "Array | ColorMatrix",
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13056,
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13061,
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13067,
            "class": "Graphics.ColorMatrixFilter",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13131,
            "description": "Returns `true` if touch is supported in the current browser.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "Indicates whether touch is supported in the current browser.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13143,
            "description": "Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n(and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\nmulti-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\ndouble click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\nfor more information.",
            "itemtype": "method",
            "name": "enable",
            "params": [
                {
                    "name": "stage",
                    "description": "The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.",
                    "type": "Stage"
                },
                {
                    "name": "singleTouch",
                    "description": "If `true`, only a single touch will be active at a time.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "allowDefault",
                    "description": "If `true`, then default gesture actions (ex. scrolling, zooming) will be\nallowed when the user is interacting with the target canvas.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns `true` if touch was successfully enabled on the target stage.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13171,
            "description": "Removes all listeners that were set up when calling `Touch.enable()` on a stage.",
            "itemtype": "method",
            "name": "disable",
            "params": [
                {
                    "name": "stage",
                    "description": "The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13187,
            "itemtype": "method",
            "name": "_IOS_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13202,
            "itemtype": "method",
            "name": "_IOS_disable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13218,
            "itemtype": "method",
            "name": "_IOS_handleEvent",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "e",
                    "description": "The event to handle",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13245,
            "itemtype": "method",
            "name": "_IE_enable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13272,
            "itemtype": "method",
            "name": "_IE_disable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                }
            ],
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13298,
            "itemtype": "method",
            "name": "_IE_handleEvent",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "e",
                    "description": "The event to handle.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13327,
            "itemtype": "method",
            "name": "_handleStart",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13346,
            "itemtype": "method",
            "name": "_handleMove",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13360,
            "itemtype": "method",
            "name": "_handleEnd",
            "params": [
                {
                    "name": "stage",
                    "description": "",
                    "type": "Stage"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Touch",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13397,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.EaselJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js",
            "line": 13405,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.EaselJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 73,
            "description": "The SpriteSheet that this container enforces use of.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "{SpriteSheet}",
            "readonly": "",
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 83,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 98,
            "description": "Adds a child to the top of the display list.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nThe child must have the same spritesheet as this container (unless it's a DOMElement).\nIf a spritesheet hasn't been defined, this container uses this child's spritesheet.\n\n<h4>Example</h4>\n     container.addChild(bitmapInstance);\n\n You can also add multiple children at once:\n\n     container.addChild(bitmapInstance, shapeInstance, textInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 124,
            "description": "Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\nsetting its parent to this Container.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nThe child must have the same spritesheet as this container (unless it's a DOMElement).\nIf a spritesheet hasn't been defined, this container uses this child's spritesheet.\n\n<h4>Example</h4>\n     addChildAt(child1, index);\n\nYou can also add multiple children, such as:\n\n     addChildAt(child1, child2, ..., index);\n\nThe index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\nyou could use:\n\n     container.addChildAt(myShape, container.getChildIndex(otherShape));\n\nThis would also bump otherShape's index up by one. Fails silently if the index is out of range.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to add the child at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the last child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 178,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 249,
            "description": "Specifies whether or not the canvas is auto-cleared by WebGL. Spec discourages true.\nIf true, the canvas is NOT auto-cleared by WebGL. Value is ignored if `_alphaEnabled` is false.\nUseful if you want to use `autoClear = false`.",
            "itemtype": "property",
            "name": "_preserveDrawingBuffer",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 260,
            "description": "Specifies whether or not the browser's WebGL implementation should try to perform antialiasing.",
            "itemtype": "property",
            "name": "_antialias",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 269,
            "description": "The width of the canvas element.",
            "itemtype": "property",
            "name": "_viewportWidth",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 278,
            "description": "The height of the canvas element.",
            "itemtype": "property",
            "name": "_viewportHeight",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 287,
            "description": "A 2D projection matrix used to convert WebGL's clipspace into normal pixels.",
            "itemtype": "property",
            "name": "_projectionMatrix",
            "access": "protected",
            "tagname": "",
            "type": "{Float32Array}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 296,
            "description": "The current WebGL canvas context.",
            "itemtype": "property",
            "name": "_webGLContext",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLRenderingContext}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 305,
            "description": "Indicates whether or not an error has been detected when dealing with WebGL.\nIf the is true, the behavior should be to use Canvas 2D rendering instead.",
            "itemtype": "property",
            "name": "_webGLErrorDetected",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 315,
            "description": "The color to use when the WebGL canvas has been cleared.",
            "itemtype": "property",
            "name": "_clearColor",
            "access": "protected",
            "tagname": "",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 324,
            "description": "The maximum number of textures WebGL can work with per draw call.",
            "itemtype": "property",
            "name": "_maxTexturesPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 333,
            "description": "The maximum total number of boxes points that can be defined per draw call.",
            "itemtype": "property",
            "name": "_maxBoxesPointsPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 342,
            "description": "The maximum number of boxes (sprites) that can be drawn in one draw call.",
            "itemtype": "property",
            "name": "_maxBoxesPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 351,
            "description": "The maximum number of indices that can be drawn in one draw call.",
            "itemtype": "property",
            "name": "_maxIndicesPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 360,
            "description": "The shader program used to draw everything.",
            "itemtype": "property",
            "name": "_shaderProgram",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLProgram}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 369,
            "description": "The vertices data for the current draw call.",
            "itemtype": "property",
            "name": "_vertices",
            "access": "protected",
            "tagname": "",
            "type": "{Float32Array}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 378,
            "description": "The buffer that contains all the vertices data.",
            "itemtype": "property",
            "name": "_verticesBuffer",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLBuffer}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 387,
            "description": "The indices to the vertices defined in this._vertices.",
            "itemtype": "property",
            "name": "_indices",
            "access": "protected",
            "tagname": "",
            "type": "{Uint16Array}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 396,
            "description": "The buffer that contains all the indices data.",
            "itemtype": "property",
            "name": "_indicesBuffer",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLBuffer}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 405,
            "description": "The current box index being defined for drawing.",
            "itemtype": "property",
            "name": "_currentBoxIndex",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "-1",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 414,
            "description": "The current texture that will be used to draw into the GPU.",
            "itemtype": "property",
            "name": "_drawTexture",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLTexture}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 434,
            "description": "The number of properties defined per vertex in p._verticesBuffer.\nx, y, textureU, textureV, alpha",
            "itemtype": "property",
            "name": "NUM_VERTEX_PROPERTIES",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 445,
            "description": "The number of points in a box...obviously :)",
            "itemtype": "property",
            "name": "POINTS_PER_BOX",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 455,
            "description": "The number of vertex properties per box.",
            "itemtype": "property",
            "name": "NUM_VERTEX_PROPERTIES_PER_BOX",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 465,
            "description": "The number of indices needed to define a box using triangles.\n6 indices = 2 triangles = 1 box",
            "itemtype": "property",
            "name": "INDICES_PER_BOX",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 476,
            "description": "The maximum size WebGL allows for element index numbers: 16 bit unsigned integer",
            "itemtype": "property",
            "name": "MAX_INDEX_SIZE",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 486,
            "description": "The amount used to increment p._maxBoxesPointsPerDraw when the maximum has been reached.\nIf the maximum size of element index WebGL allows for (SpriteStage.MAX_INDEX_SIZE) was used,\nthe array size for p._vertices would equal 1280kb and p._indices 192kb. But since mobile phones\nwith less memory need to be accounted for, the maximum size is somewhat arbitrarily divided by 4,\nreducing the array sizes to 320kb and 48kb respectively.",
            "itemtype": "property",
            "name": "MAX_BOXES_POINTS_INCREMENT",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 502,
            "description": "Indicates whether WebGL is being used for rendering. For example, this would be false if WebGL is not\nsupported in the browser.",
            "readonly": "",
            "itemtype": "property",
            "name": "isWebGL",
            "type": "{Boolean}",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 521,
            "description": "Adds a child to the top of the display list.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nChildren also MUST have either an image or spriteSheet defined on them (unless it's a DOMElement).\n\n<h4>Example</h4>\n     container.addChild(bitmapInstance);\n\n You can also add multiple children at once:\n\n     container.addChild(bitmapInstance, shapeInstance, textInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 546,
            "description": "Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\nsetting its parent to this Container.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nChildren also MUST have either an image or spriteSheet defined on them (unless it's a DOMElement).\n\n<h4>Example</h4>\n\n     addChildAt(child1, index);\n\nYou can also add multiple children, such as:\n\n     addChildAt(child1, child2, ..., index);\n\nThe index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\nyou could use:\n\n     container.addChildAt(myShape, container.getChildIndex(otherShape));\n\nThis would also bump otherShape's index up by one. Fails silently if the index is out of range.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to add the child at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the last child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 596,
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 617,
            "description": "Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.",
            "itemtype": "method",
            "name": "clear",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 635,
            "description": "Draws the stage into the specified context (using WebGL) ignoring its visible, alpha, shadow, and transform.\nIf WebGL is not supported in the browser, it will default to a 2D context.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 656,
            "description": "Update the WebGL viewport. Note that this does NOT update the canvas element's width/height.",
            "itemtype": "method",
            "name": "updateViewport",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 677,
            "description": "Clears an image's texture to free it up for garbage collection.",
            "itemtype": "method",
            "name": "clearImageTexture",
            "params": [
                {
                    "name": "image",
                    "description": "",
                    "type": "HTMLImageElement"
                }
            ],
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 686,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 697,
            "description": "Initializes rendering with WebGL using the current canvas element.",
            "itemtype": "method",
            "name": "_initializeWebGL",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 708,
            "description": "Sets the WebGL context to use for future draws.",
            "itemtype": "method",
            "name": "_setWebGLContext",
            "return": {
                "description": "The newly created context.",
                "type": "WebGLRenderingContext"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 727,
            "description": "Sets up the WebGL context for rendering.",
            "itemtype": "method",
            "name": "_initializeWebGLContext",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 776,
            "description": "Sets the color to use when the WebGL canvas has been cleared.",
            "itemtype": "method",
            "name": "_setClearColor",
            "params": [
                {
                    "name": "r",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "a",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 796,
            "description": "Creates the shader program that's going to be used to draw everything.",
            "itemtype": "method",
            "name": "_createShaderProgram",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 861,
            "description": "Creates a shader from the specified string.",
            "itemtype": "method",
            "name": "_createShader",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "type",
                    "description": "The type of shader to create.",
                    "type": "Number"
                },
                {
                    "name": "str",
                    "description": "The definition for the shader.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "WebGLShader"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 884,
            "description": "Sets up the necessary vertices and indices buffers.",
            "itemtype": "method",
            "name": "_createBuffers",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 903,
            "description": "Updates the maximum total number of boxes points that can be defined per draw call,\nand updates the buffers with the new array length sizes.",
            "itemtype": "method",
            "name": "_setMaxBoxesPoints",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "value",
                    "description": "The new this._maxBoxesPointsPerDraw value.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 937,
            "description": "Sets up an image's WebGL texture.",
            "itemtype": "method",
            "name": "_setupImageTexture",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas WebGL context object to draw into.",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "image",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "WebGLTexture"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 962,
            "description": "Draw all the kids into the WebGL context.",
            "itemtype": "method",
            "name": "_drawWebGLKids",
            "params": [
                {
                    "name": "kids",
                    "description": "The list of kids to draw.",
                    "type": "Array"
                },
                {
                    "name": "ctx",
                    "description": "The canvas WebGL context object to draw into.",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "parentMVMatrix",
                    "description": "The parent's global transformation matrix.",
                    "type": "Matrix2D"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js",
            "line": 1092,
            "description": "Draws all the currently defined boxes to the GPU.",
            "itemtype": "method",
            "name": "_drawToGPU",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas WebGL context object to draw into.",
                    "type": "WebGLRenderingContext"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 73,
            "description": "The SpriteSheet that this container enforces use of.",
            "itemtype": "property",
            "name": "spriteSheet",
            "type": "{SpriteSheet}",
            "readonly": "",
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 83,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 98,
            "description": "Adds a child to the top of the display list.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nThe child must have the same spritesheet as this container (unless it's a DOMElement).\nIf a spritesheet hasn't been defined, this container uses this child's spritesheet.\n\n<h4>Example</h4>\n     container.addChild(bitmapInstance);\n\n You can also add multiple children at once:\n\n     container.addChild(bitmapInstance, shapeInstance, textInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 124,
            "description": "Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\nsetting its parent to this Container.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nThe child must have the same spritesheet as this container (unless it's a DOMElement).\nIf a spritesheet hasn't been defined, this container uses this child's spritesheet.\n\n<h4>Example</h4>\n     addChildAt(child1, index);\n\nYou can also add multiple children, such as:\n\n     addChildAt(child1, child2, ..., index);\n\nThe index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\nyou could use:\n\n     container.addChildAt(myShape, container.getChildIndex(otherShape));\n\nThis would also bump otherShape's index up by one. Fails silently if the index is out of range.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to add the child at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the last child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 178,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.SpriteContainer",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 249,
            "description": "Specifies whether or not the canvas is auto-cleared by WebGL. Spec discourages true.\nIf true, the canvas is NOT auto-cleared by WebGL. Value is ignored if `_alphaEnabled` is false.\nUseful if you want to use `autoClear = false`.",
            "itemtype": "property",
            "name": "_preserveDrawingBuffer",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 260,
            "description": "Specifies whether or not the browser's WebGL implementation should try to perform antialiasing.",
            "itemtype": "property",
            "name": "_antialias",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 269,
            "description": "The width of the canvas element.",
            "itemtype": "property",
            "name": "_viewportWidth",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 278,
            "description": "The height of the canvas element.",
            "itemtype": "property",
            "name": "_viewportHeight",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 287,
            "description": "A 2D projection matrix used to convert WebGL's clipspace into normal pixels.",
            "itemtype": "property",
            "name": "_projectionMatrix",
            "access": "protected",
            "tagname": "",
            "type": "{Float32Array}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 296,
            "description": "The current WebGL canvas context.",
            "itemtype": "property",
            "name": "_webGLContext",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLRenderingContext}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 305,
            "description": "Indicates whether or not an error has been detected when dealing with WebGL.\nIf the is true, the behavior should be to use Canvas 2D rendering instead.",
            "itemtype": "property",
            "name": "_webGLErrorDetected",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 315,
            "description": "The color to use when the WebGL canvas has been cleared.",
            "itemtype": "property",
            "name": "_clearColor",
            "access": "protected",
            "tagname": "",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 324,
            "description": "The maximum number of textures WebGL can work with per draw call.",
            "itemtype": "property",
            "name": "_maxTexturesPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 333,
            "description": "The maximum total number of boxes points that can be defined per draw call.",
            "itemtype": "property",
            "name": "_maxBoxesPointsPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 342,
            "description": "The maximum number of boxes (sprites) that can be drawn in one draw call.",
            "itemtype": "property",
            "name": "_maxBoxesPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 351,
            "description": "The maximum number of indices that can be drawn in one draw call.",
            "itemtype": "property",
            "name": "_maxIndicesPerDraw",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 360,
            "description": "The shader program used to draw everything.",
            "itemtype": "property",
            "name": "_shaderProgram",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLProgram}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 369,
            "description": "The vertices data for the current draw call.",
            "itemtype": "property",
            "name": "_vertices",
            "access": "protected",
            "tagname": "",
            "type": "{Float32Array}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 378,
            "description": "The buffer that contains all the vertices data.",
            "itemtype": "property",
            "name": "_verticesBuffer",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLBuffer}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 387,
            "description": "The indices to the vertices defined in this._vertices.",
            "itemtype": "property",
            "name": "_indices",
            "access": "protected",
            "tagname": "",
            "type": "{Uint16Array}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 396,
            "description": "The buffer that contains all the indices data.",
            "itemtype": "property",
            "name": "_indicesBuffer",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLBuffer}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 405,
            "description": "The current box index being defined for drawing.",
            "itemtype": "property",
            "name": "_currentBoxIndex",
            "access": "protected",
            "tagname": "",
            "type": "{Number}",
            "default": "-1",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 414,
            "description": "The current texture that will be used to draw into the GPU.",
            "itemtype": "property",
            "name": "_drawTexture",
            "access": "protected",
            "tagname": "",
            "type": "{WebGLTexture}",
            "default": "null",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 434,
            "description": "The number of properties defined per vertex in p._verticesBuffer.\nx, y, textureU, textureV, alpha",
            "itemtype": "property",
            "name": "NUM_VERTEX_PROPERTIES",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 445,
            "description": "The number of points in a box...obviously :)",
            "itemtype": "property",
            "name": "POINTS_PER_BOX",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 455,
            "description": "The number of vertex properties per box.",
            "itemtype": "property",
            "name": "NUM_VERTEX_PROPERTIES_PER_BOX",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 465,
            "description": "The number of indices needed to define a box using triangles.\n6 indices = 2 triangles = 1 box",
            "itemtype": "property",
            "name": "INDICES_PER_BOX",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 476,
            "description": "The maximum size WebGL allows for element index numbers: 16 bit unsigned integer",
            "itemtype": "property",
            "name": "MAX_INDEX_SIZE",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 486,
            "description": "The amount used to increment p._maxBoxesPointsPerDraw when the maximum has been reached.\nIf the maximum size of element index WebGL allows for (SpriteStage.MAX_INDEX_SIZE) was used,\nthe array size for p._vertices would equal 1280kb and p._indices 192kb. But since mobile phones\nwith less memory need to be accounted for, the maximum size is somewhat arbitrarily divided by 4,\nreducing the array sizes to 320kb and 48kb respectively.",
            "itemtype": "property",
            "name": "MAX_BOXES_POINTS_INCREMENT",
            "static": 1,
            "final": 1,
            "type": "{Number}",
            "readonly": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 502,
            "description": "Indicates whether WebGL is being used for rendering. For example, this would be false if WebGL is not\nsupported in the browser.",
            "readonly": "",
            "itemtype": "property",
            "name": "isWebGL",
            "type": "{Boolean}",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 521,
            "description": "Adds a child to the top of the display list.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nChildren also MUST have either an image or spriteSheet defined on them (unless it's a DOMElement).\n\n<h4>Example</h4>\n     container.addChild(bitmapInstance);\n\n You can also add multiple children at once:\n\n     container.addChild(bitmapInstance, shapeInstance, textInstance);",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                }
            ],
            "return": {
                "description": "The child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 546,
            "description": "Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\nsetting its parent to this Container.\nOnly children of type SpriteContainer, Sprite, Bitmap, BitmapText, or DOMElement are allowed.\nChildren also MUST have either an image or spriteSheet defined on them (unless it's a DOMElement).\n\n<h4>Example</h4>\n\n     addChildAt(child1, index);\n\nYou can also add multiple children, such as:\n\n     addChildAt(child1, child2, ..., index);\n\nThe index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\nyou could use:\n\n     container.addChildAt(myShape, container.getChildIndex(otherShape));\n\nThis would also bump otherShape's index up by one. Fails silently if the index is out of range.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The display object to add.",
                    "type": "DisplayObject"
                },
                {
                    "name": "index",
                    "description": "The index to add the child at.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the last child that was added, or the last child if multiple children were added.",
                "type": "DisplayObject"
            },
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 596,
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 617,
            "description": "Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.",
            "itemtype": "method",
            "name": "clear",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 635,
            "description": "Draws the stage into the specified context (using WebGL) ignoring its visible, alpha, shadow, and transform.\nIf WebGL is not supported in the browser, it will default to a 2D context.\nReturns true if the draw was handled (useful for overriding functionality).\n\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 656,
            "description": "Update the WebGL viewport. Note that this does NOT update the canvas element's width/height.",
            "itemtype": "method",
            "name": "updateViewport",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 677,
            "description": "Clears an image's texture to free it up for garbage collection.",
            "itemtype": "method",
            "name": "clearImageTexture",
            "params": [
                {
                    "name": "image",
                    "description": "",
                    "type": "HTMLImageElement"
                }
            ],
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 686,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 697,
            "description": "Initializes rendering with WebGL using the current canvas element.",
            "itemtype": "method",
            "name": "_initializeWebGL",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 708,
            "description": "Sets the WebGL context to use for future draws.",
            "itemtype": "method",
            "name": "_setWebGLContext",
            "return": {
                "description": "The newly created context.",
                "type": "WebGLRenderingContext"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 727,
            "description": "Sets up the WebGL context for rendering.",
            "itemtype": "method",
            "name": "_initializeWebGLContext",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 776,
            "description": "Sets the color to use when the WebGL canvas has been cleared.",
            "itemtype": "method",
            "name": "_setClearColor",
            "params": [
                {
                    "name": "r",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "a",
                    "description": "A number between 0 and 1.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 796,
            "description": "Creates the shader program that's going to be used to draw everything.",
            "itemtype": "method",
            "name": "_createShaderProgram",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 861,
            "description": "Creates a shader from the specified string.",
            "itemtype": "method",
            "name": "_createShader",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "type",
                    "description": "The type of shader to create.",
                    "type": "Number"
                },
                {
                    "name": "str",
                    "description": "The definition for the shader.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "WebGLShader"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 884,
            "description": "Sets up the necessary vertices and indices buffers.",
            "itemtype": "method",
            "name": "_createBuffers",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 903,
            "description": "Updates the maximum total number of boxes points that can be defined per draw call,\nand updates the buffers with the new array length sizes.",
            "itemtype": "method",
            "name": "_setMaxBoxesPoints",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "value",
                    "description": "The new this._maxBoxesPointsPerDraw value.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 937,
            "description": "Sets up an image's WebGL texture.",
            "itemtype": "method",
            "name": "_setupImageTexture",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas WebGL context object to draw into.",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "image",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "WebGLTexture"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 962,
            "description": "Draw all the kids into the WebGL context.",
            "itemtype": "method",
            "name": "_drawWebGLKids",
            "params": [
                {
                    "name": "kids",
                    "description": "The list of kids to draw.",
                    "type": "Array"
                },
                {
                    "name": "ctx",
                    "description": "The canvas WebGL context object to draw into.",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "parentMVMatrix",
                    "description": "The parent's global transformation matrix.",
                    "type": "Matrix2D"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js",
            "line": 1092,
            "description": "Draws all the currently defined boxes to the GPU.",
            "itemtype": "method",
            "name": "_drawToGPU",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas WebGL context object to draw into.",
                    "type": "WebGLRenderingContext"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.SpriteStage",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 45,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "static": 1,
            "class": "Graphics.PreloadJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 53,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "{String}",
            "static": 1,
            "class": "Graphics.PreloadJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 73,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 109,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 180,
            "description": "A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\ncallback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\nmethod gets called in the correct scope.\n\nAdditional arguments can be passed that will be applied to the function when it is called.\n\n<h4>Example</h4>\n\n     myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\n     function myHandler(arg1, arg2) {\n          // This gets called when myObject.myCallback is executed.\n     }",
            "itemtype": "method",
            "name": "proxy",
            "params": [
                {
                    "name": "method",
                    "description": "The function to call",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope to call the method name on",
                    "type": "Object"
                },
                {
                    "name": "arg",
                    "description": "* Arguments that are appended to the callback for additional params.",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 221,
            "description": "Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\nthat value.  Returns -1 if value is not found.\n\n     var i = createjs.indexOf(myArray, myElementToFind);",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "array",
                    "description": "Array to search for searchElement",
                    "type": "Array"
                },
                {
                    "name": "searchElement",
                    "description": "Element to find in array."
                }
            ],
            "return": {
                "description": "The first index of searchElement in array.",
                "type": "Number"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 269,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 276,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 285,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 297,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 310,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 319,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 329,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 338,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 348,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 358,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 368,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 379,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 393,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 403,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 412,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 422,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 436,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 445,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 458,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 490,
            "description": "The short error title, which indicates the type of error that occurred.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 497,
            "description": "The verbose error message, containing details about the error.",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 504,
            "description": "Additional data attached to an error.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 591,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 598,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 607,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 622,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 646,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 679,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 725,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 755,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 769,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 791,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 845,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 856,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 876,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 886,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 940,
            "description": "The amount that has been loaded (out of a total amount)",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Number}",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 947,
            "description": "The total \"size\" of the load.",
            "itemtype": "property",
            "name": "total",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 955,
            "description": "The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 966,
            "description": "Returns a clone of the ProgressEvent instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "ProgressEvent"
            },
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 1927,
            "description": "Parse XML using the DOM. This is required when preloading XML or SVG.",
            "itemtype": "method",
            "name": "parseXML",
            "params": [
                {
                    "name": "text",
                    "description": "The raw text or XML that is loaded by XHR.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The mime type of the XML. Use \"text/xml\" for XML, and  \"image/svg+xml\" for SVG parsing.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An XML document",
                "type": "XML"
            },
            "static": 1,
            "class": "Graphics.DataUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 1963,
            "description": "Parse a string into an Object.",
            "itemtype": "method",
            "name": "parseJSON",
            "params": [
                {
                    "name": "value",
                    "description": "The loaded JSON string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A JavaScript object.",
                "type": "Object"
            },
            "class": "Graphics.DataUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2005,
            "description": "The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\nstring (recommended), or an HTML tag.\nThis can also be an object, but in that case it has to include a type and be handled by a plugin.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2015,
            "description": "The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\nbe set manually. This is helpful in cases where a file does not have an extension.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2024,
            "description": "A string identifier which can be used to reference the loaded object. If none is provided, this will be\nautomatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2033,
            "description": "Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\nthat have also set the `maintainOrder` property to `true`. This only applies when the max connections has\nbeen set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\nproperty set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\norder when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.",
            "itemtype": "property",
            "name": "maintainOrder",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2045,
            "description": "A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.",
            "itemtype": "property",
            "name": "callback",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2053,
            "description": "An arbitrary data object, which is included with the loaded object.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2061,
            "description": "The request method used for HTTP calls. Both {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} or\n{{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\nconstants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "method",
            "type": "{String}",
            "default": "get",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2071,
            "description": "An object hash of name/value pairs to send to the server.",
            "itemtype": "property",
            "name": "values",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2079,
            "description": "An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\nheaders when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\ndefault headers by including them in your headers object.",
            "itemtype": "property",
            "name": "headers",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2089,
            "description": "Enable credentials for XHR requests.",
            "itemtype": "property",
            "name": "withCredentials",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2097,
            "description": "Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\nbased files (json, xml, text, css, js).",
            "itemtype": "property",
            "name": "mimeType",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2106,
            "description": "Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.",
            "itemtype": "property",
            "name": "crossOrigin",
            "type": "{boolean}",
            "default": "Anonymous",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2114,
            "description": "The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "loadTimeout",
            "type": "{Number}",
            "default": "8000 (8 seconds)",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2127,
            "description": "Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "LOAD_TIMEOUT_DEFAULT",
            "type": "{number}",
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2136,
            "description": "Create a LoadItem.\n<ul>\n    <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n    <li>LoadItem instances are returned as-is</li>\n    <li>Objects are returned with any needed properties added</li>\n</ul>",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "value",
                    "description": "The load item value",
                    "type": "LoadItem|String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "LoadItem|Object"
            },
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2165,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the LoadItem instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "LoadItem"
            },
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2197,
            "description": "The Regular Expression used to test file URLS for an absolute path.",
            "itemtype": "property",
            "name": "ABSOLUTE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2205,
            "description": "The Regular Expression used to test file URLS for a relative path.",
            "itemtype": "property",
            "name": "RELATIVE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2213,
            "description": "The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\nremoved.",
            "itemtype": "property",
            "name": "EXTENSION_PATT",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2222,
            "description": "Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n<ul>\n    <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n    `//networkPath`)</li>\n    <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n    <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n    the file path is expected to follow the format `name.ext`.</li>\n</ul>",
            "itemtype": "method",
            "name": "parseURI",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An Object with an `absolute` and `relative` Boolean values, as well as an optional 'extension`\nproperty, which is the lowercase extension.",
                "type": "Object"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2264,
            "description": "Formats an object into a query string for either a POST or GET request.",
            "itemtype": "method",
            "name": "formatQueryString",
            "params": [
                {
                    "name": "data",
                    "description": "The data to convert to a query string.",
                    "type": "Object"
                },
                {
                    "name": "query",
                    "description": "Existing name/value pairs to append on to this query.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2285,
            "description": "A utility method that builds a file path using a source and a data object, and formats it into a new path.",
            "itemtype": "method",
            "name": "buildPath",
            "params": [
                {
                    "name": "src",
                    "description": "The source path to add values to.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Object used to append values to this request as a query string. Existing parameters on the\npath will be preserved.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A formatted string that contains the path and the supplied parameters.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2314,
            "itemtype": "method",
            "name": "isCrossDomain",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from a different domain than the current location.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2334,
            "itemtype": "method",
            "name": "isLocal",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\nwell.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2347,
            "description": "Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\nspecifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\nback using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\na binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n{{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "isBinary",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is binary.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2368,
            "description": "Check if item is a valid HTMLImageElement",
            "itemtype": "method",
            "name": "isImageTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2379,
            "description": "Check if item is a valid HTMLAudioElement",
            "itemtype": "method",
            "name": "isAudioTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2394,
            "description": "Check if item is a valid HTMLVideoElement",
            "itemtype": "method",
            "name": "isVideoTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2409,
            "description": "Determine if a specific type is a text-based asset, and should be loaded as UTF-8.",
            "itemtype": "method",
            "name": "isText",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is text.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2432,
            "description": "Determine the type of the object using common extensions. Note that the type can be passed in with the load item\nif it is an unusual extension.",
            "itemtype": "method",
            "name": "getTypeByExtension",
            "params": [
                {
                    "name": "extension",
                    "description": "The file extension to use to determine the load type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The determined load type (for example, <code>AbstractLoader.IMAGE</code>). Will return `null` if\nthe type can not be determined by the extension.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2507,
            "description": "If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\nused for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2516,
            "description": "Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\nis readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\ninstead.",
            "itemtype": "property",
            "name": "canceled",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2527,
            "description": "The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\n<h4>Example</h4>\n\n    var queue = new createjs.LoadQueue();\n    queue.loadFile(\"largeImage.png\");\n    queue.on(\"progress\", function() {\n        console.log(\"Progress:\", queue.progress, event.progress);\n    });",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2544,
            "description": "The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\nsupported types.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2552,
            "description": "A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\nconverts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\ncan be overridden to provide custom formatting.\n\nOptionally, a resultFormatter can return a callback function in cases where the formatting needs to be\nasynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\nto handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\ncalled in the current scope, as well as the success and error callbacks.\n\n<h4>Example asynchronous resultFormatter</h4>\n\n\tfunction _formatResult(loader) {\n\t\treturn function(success, error) {\n\t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t\tsuccess(result);\n\t\t}\n\t}",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "{Function}",
            "default": "null",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2577,
            "description": "The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\nbut will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_item",
            "type": "{LoadItem|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2590,
            "description": "Whether the loader will try and load content using XHR (true) or HTML tags (false).",
            "itemtype": "property",
            "name": "_preferXHR",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2598,
            "description": "The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\nitems that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\nThe result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.",
            "itemtype": "property",
            "name": "_result",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2608,
            "description": "The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\nmethod, and passing `true`.",
            "itemtype": "property",
            "name": "_rawResult",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2617,
            "description": "A list of items that loaders load behind the scenes. This does not include the main item the loader is\nresponsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n{{#crossLink \"ManifestLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadItems",
            "type": "{null}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2627,
            "description": "The attribute the items loaded using tags use for the source.",
            "type": "{string}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2635,
            "description": "An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2651,
            "description": "Defines a POST request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "POST",
            "type": "{string}",
            "default": "post",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2660,
            "description": "Defines a GET request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "GET",
            "type": "{string}",
            "default": "get",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2669,
            "description": "The preload type for generic binary types. Note that images are loaded as binary files when using XHR.",
            "itemtype": "property",
            "name": "BINARY",
            "type": "{String}",
            "default": "binary",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2679,
            "description": "The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n&lt;style&gt; tag when loaded with tags.",
            "itemtype": "property",
            "name": "CSS",
            "type": "{String}",
            "default": "css",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2690,
            "description": "The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.",
            "itemtype": "property",
            "name": "IMAGE",
            "type": "{String}",
            "default": "image",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2700,
            "description": "The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n&lt;script&gt; tag.\n\nSince version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\nthe body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\nonly tag-loaded scripts are injected.",
            "itemtype": "property",
            "name": "JAVASCRIPT",
            "type": "{String}",
            "default": "javascript",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2715,
            "description": "The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\nno matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\nmust contain a matching wrapper function.",
            "itemtype": "property",
            "name": "JSON",
            "type": "{String}",
            "default": "json",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2728,
            "description": "The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\nNote that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\nproperty is set to.",
            "itemtype": "property",
            "name": "JSONP",
            "type": "{String}",
            "default": "jsonp",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2741,
            "description": "The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\nand parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\nArray of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nmethod. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\nregardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.",
            "itemtype": "property",
            "name": "MANIFEST",
            "type": "{String}",
            "default": "manifest",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2755,
            "description": "The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n&lt;audio&gt; tag.",
            "itemtype": "property",
            "name": "SOUND",
            "type": "{String}",
            "default": "sound",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2766,
            "description": "The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n&lt;video&gt; tag.",
            "itemtype": "property",
            "name": "VIDEO",
            "type": "{String}",
            "default": "video",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2777,
            "description": "The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.",
            "itemtype": "property",
            "name": "SPRITESHEET",
            "type": "{String}",
            "default": "spritesheet",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2787,
            "description": "The preload type for SVG files.",
            "itemtype": "property",
            "name": "SVG",
            "type": "{String}",
            "default": "svg",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2797,
            "description": "The preload type for text files, which is also the default file type if the type can not be determined. Text is\nloaded as raw text.",
            "itemtype": "property",
            "name": "TEXT",
            "type": "{String}",
            "default": "text",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2808,
            "description": "The preload type for xml files. XML is loaded into an XML document.",
            "itemtype": "property",
            "name": "XML",
            "type": "{String}",
            "default": "xml",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2819,
            "description": "The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\nversion 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "progress",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2826,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.",
            "itemtype": "event",
            "name": "loadstart",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.1",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2834,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2842,
            "description": "The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\nencountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\njust a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "error",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2850,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\nThis enables loaders to maintain internal queues, and surface file load errors.",
            "itemtype": "event",
            "name": "fileerror",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The even type (\"fileerror\")",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "item that encountered the error",
                    "type": "LoadItem|object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2860,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\nloaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\nand notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\nslightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"fileload\")",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a `src` property.",
                    "type": "Object"
                },
                {
                    "name": "result",
                    "description": "The HTML tag or parsed result of the loaded item.",
                    "type": "Object"
                },
                {
                    "name": "rawResult",
                    "description": "The unprocessed result, usually the raw text or binary data before it is converted\nto a usable object.",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2877,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\nThis allows updates to the loader for specific loading needs, such as binary or XHR image loading.",
            "itemtype": "event",
            "name": "initialize",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"initialize\")",
                    "type": "String"
                },
                {
                    "name": "loader",
                    "description": "The loader that has been initialized.",
                    "type": "AbstractLoader"
                }
            ],
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2887,
            "description": "Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\npassed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\nbe a {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getItem",
            "return": {
                "description": "The manifest item that this loader is responsible for loading.",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2900,
            "description": "Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\nevent is dispatched.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Determines if the returned result will be the formatted content, or the raw loaded\ndata (if it exists).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2913,
            "description": "Return the `tag` this object creates or uses for loading.",
            "itemtype": "method",
            "name": "getTag",
            "return": {
                "description": "The tag instance",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2923,
            "description": "Set the `tag` this item uses for loading.",
            "itemtype": "method",
            "name": "setTag",
            "params": [
                {
                    "name": "tag",
                    "description": "The tag instance",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2933,
            "description": "Begin loading the item. This method is required when using a loader by itself.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.on(\"complete\", handleComplete);\n     queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n     queue.load();",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2962,
            "description": "Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\nthe background), but events will not longer be dispatched.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2972,
            "description": "Clean up the loader.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 2993,
            "description": "Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto expose items it loads internally.",
            "itemtype": "method",
            "name": "getLoadedItems",
            "return": {
                "description": "A list of the items loaded by the loader.",
                "type": "Array"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3006,
            "description": "Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n{{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\nOther loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\nwhich uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.",
            "itemtype": "method",
            "name": "_createRequest",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3022,
            "description": "Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\nby loaders that require tag loading.",
            "itemtype": "method",
            "name": "_createTag",
            "params": [
                {
                    "name": "src",
                    "description": "The tag source",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The tag that was created",
                "type": "HTMLElement"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3032,
            "description": "Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendLoadStart",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3043,
            "description": "Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_sendProgress",
            "params": [
                {
                    "name": "value",
                    "description": "The progress of the loaded item, or an object containing <code>loaded</code>\nand <code>total</code> properties.",
                    "type": "Number | Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3065,
            "description": "Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event",
            "itemtype": "method",
            "name": "_sendComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3085,
            "description": "Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendError",
            "params": [
                {
                    "name": "event",
                    "description": "The event object containing specific error properties.",
                    "type": "ErrorEvent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3100,
            "description": "Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\ndo not cause issues after the queue has been cleaned up.",
            "itemtype": "method",
            "name": "_isCanceled",
            "return": {
                "description": "If the loader has been canceled.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3114,
            "description": "A custom result formatter function, which is called just before a request dispatches its complete event. Most\nloader types already have an internal formatter, but this can be user-overridden for custom formatting. The\nformatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "Function",
            "return": {
                "description": "The formatted result",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3125,
            "description": "Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\nthis method can be overridden for custom behaviours.",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The event that the internal request dispatches.",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3166,
            "description": "The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "result",
                    "description": "The formatted result",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3178,
            "description": "The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "error",
                    "description": "The error event",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3189,
            "itemtype": "method",
            "name": "buildPath",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "deprecationMessage": "Use the {{#crossLink \"RequestUtils\"}}{{/crossLink}} method {{#crossLink \"RequestUtils/buildPath\"}}{{/crossLink}}\ninstead.",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3199,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3260,
            "description": "Creates a new tag for loading if it doesn't exist yet.",
            "itemtype": "method",
            "name": "_createTag",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3277,
            "description": "Before the item loads, set its mimeType and responseType.",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3290,
            "description": "The result formatter for media files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLVideoElement|HTMLAudioElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3337,
            "description": "Begin a load.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3343,
            "description": "Clean up a request.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3349,
            "description": "Cancel an in-progress request.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3380,
            "description": "The HTML tag instance that is used to load.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{HTMLElement}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3388,
            "description": "The tag attribute that specifies the source, such as \"src\", \"href\", etc.",
            "itemtype": "property",
            "name": "_tagSrcAttribute",
            "type": "{String}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3396,
            "description": "A method closure used for handling the tag load event.",
            "itemtype": "property",
            "name": "_loadedHandler",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3404,
            "description": "Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.",
            "itemtype": "property",
            "name": "_addedToDOM",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3412,
            "description": "Determines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "type": "{null}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3455,
            "description": "Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\nand LINK tags), but other cases may exist.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3472,
            "description": "Handle any error events from the tag.",
            "itemtype": "method",
            "name": "_handleError",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3482,
            "description": "Handle the tag's onload callback.",
            "itemtype": "method",
            "name": "_handleTagComplete",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3497,
            "description": "The tag request has not loaded within the time specified in loadTimeout.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3508,
            "description": "Remove event listeners, but don't destroy the request object",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3532,
            "description": "Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\nthat is already in a load, but not complete.",
            "itemtype": "method",
            "name": "_handleStalled",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3610,
            "description": "An XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MediaTagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3664,
            "description": "A reference to the XHR request used to load the content.",
            "itemtype": "property",
            "name": "_request",
            "type": "{XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3672,
            "description": "A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\ntypically IE9).",
            "itemtype": "property",
            "name": "_loadTimeout",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3681,
            "description": "The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\nthe version, so we use capabilities to make a best guess.",
            "itemtype": "property",
            "name": "_xhrLevel",
            "type": "{Number}",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3691,
            "description": "The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\nnull until the file is loaded.",
            "itemtype": "property",
            "name": "_response",
            "type": "{mixed}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3700,
            "description": "The response of the loaded file before it is modified. In most cases, content is converted from raw text to\nan HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\nwant to access the raw content as it was loaded.",
            "itemtype": "property",
            "name": "_rawResponse",
            "type": "{String|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3729,
            "description": "A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.",
            "itemtype": "property",
            "name": "ACTIVEX_VERSIONS",
            "type": "{Array}",
            "since": "0.4.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3746,
            "description": "Look up the loaded result.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Return a raw result instead of a formatted result. This applies to content\nloaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\nreturned instead.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A result object containing the content that was loaded, such as:\n<ul>\n     <li>An image tag (&lt;image /&gt;) for images</li>\n     <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n     HTML head.</li>\n     <li>A style tag for CSS (&lt;style /&gt;)</li>\n     <li>Raw text for TEXT</li>\n     <li>A formatted JavaScript object defined by JSON</li>\n     <li>An XML document</li>\n     <li>An binary arraybuffer loaded by XHR</li>\n</ul>\nNote that if a raw result is requested, but not found, the result will be returned instead.",
                "type": "Object"
            },
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3836,
            "description": "Get all the response headers from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\nfor Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\nexcluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\npair.",
            "itemtype": "method",
            "name": "getAllResponseHeaders",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3855,
            "description": "Get a specific response header from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\nheader, unless the field name is Set-Cookie or Set-Cookie2.",
            "itemtype": "method",
            "name": "getResponseHeader",
            "params": [
                {
                    "name": "header",
                    "description": "The header name to retrieve.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3874,
            "description": "The XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3889,
            "description": "The XHR request has reported a load start.",
            "itemtype": "method",
            "name": "_handleLoadStart",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR loadStart event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3900,
            "description": "The XHR request has reported an abort event.",
            "itemtype": "method",
            "name": "handleAbort",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR abort event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3911,
            "description": "The XHR request has reported an error event.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3922,
            "description": "The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\nevent, so we must monitor the readyStateChange to determine if the file is loaded.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR readyStateChange event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3935,
            "description": "The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n<code>request.readyState == 4</code>. Only the first call to this method will be processed.",
            "itemtype": "method",
            "name": "_handleLoad",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR load event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3975,
            "description": "The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\ncallback.",
            "itemtype": "method",
            "name": "_handleTimeout",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR timeout event. This is occasionally null when called by the backup setTimeout.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 3989,
            "description": "Determine if there is an error in the current load. This checks the status of the request for problem codes. Note\nthat this does not check for an actual response. Currently, it only checks for 404 or 0 error code.",
            "itemtype": "method",
            "name": "_checkError",
            "return": {
                "description": "If the request status returns an error code.",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4008,
            "description": "Validate the response. Different browsers have different approaches, some of which throw errors when accessed\nin other browsers. If there is no response, the <code>_response</code> property will remain null.",
            "itemtype": "method",
            "name": "_getResponse",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4042,
            "description": "Create an XHR request. Depending on a number of factors, we get totally different results.\n<ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n     <li>XMLHttpRequest are created when available.</li>\n     <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n     <li>Text requests override the mime type if possible</li>\n     <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n     <li>Binary loads set the response type to \"arraybuffer\"</li></ol>",
            "itemtype": "method",
            "name": "_createXHR",
            "params": [
                {
                    "name": "item",
                    "description": "The requested item that is being loaded.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If an XHR request or equivalent was successfully created.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4137,
            "description": "A request has completed (or failed or canceled), and needs to be disposed.",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4359,
            "description": "An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_plugins",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4368,
            "description": "An object hash of callbacks that are fired for each file type before the file is loaded, giving plugins the\nability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\nmethod for more information.",
            "itemtype": "property",
            "name": "_typeCallbacks",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4378,
            "description": "An object hash of callbacks that are fired for each file extension before the file is loaded, giving plugins the\nability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\nmethod for more information.",
            "itemtype": "property",
            "name": "_extensionCallbacks",
            "type": "{null}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4388,
            "description": "The next preload queue to process when this one is complete. If an error is thrown in the current queue, and\n{{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}} is `true`, the next queue will not be processed.",
            "itemtype": "property",
            "name": "next",
            "type": "{LoadQueue}",
            "default": "null",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4397,
            "description": "Ensure loaded scripts \"complete\" in the order they are specified. Loaded scripts are added to the document head\nonce they are loaded. Scripts loaded via tags will load one-at-a-time when this property is `true`, whereas\nscripts loaded using XHR can load in any order, but will \"finish\" and be added to the document in the order\nspecified.\n\nAny items can be set to load in order by setting the {{#crossLink \"maintainOrder:property\"}}{{/crossLink}}\nproperty on the load item, or by ensuring that only one connection can be open at a time using\n{{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Note that when the `maintainScriptOrder` property\nis set to `true`, scripts items are automatically set to `maintainOrder=true`, and changing the\n`maintainScriptOrder` to `false` during a load will not change items already in a queue.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.setMaxConnections(3); // Set a higher number to load multiple items at once\n     queue.maintainScriptOrder = true; // Ensure scripts are loaded in order\n     queue.loadManifest([\n         \"script1.js\",\n         \"script2.js\",\n         \"image.png\", // Load any time\n         {src: \"image2.png\", maintainOrder: true} // Will wait for script2.js\n         \"image3.png\",\n         \"script3.js\" // Will wait for image2.png before loading (or completing when loading with XHR)\n     ]);",
            "itemtype": "property",
            "name": "maintainScriptOrder",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4429,
            "description": "Determines if the LoadQueue will stop processing the current queue when an error is encountered.",
            "itemtype": "property",
            "name": "stopOnError",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4437,
            "description": "The number of maximum open connections that a loadQueue tries to maintain. Please see\n{{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} for more information.",
            "itemtype": "property",
            "name": "_maxConnections",
            "type": "{Number}",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4447,
            "description": "An internal list of all the default Loaders that are included with PreloadJS. Before an item is loaded, the\navailable loader list is iterated, in the order they are included, and as soon as a loader indicates it can\nhandle the content, it will be selected. The default loader, ({{#crossLink \"TextLoader\"}}{{/crossLink}} is\nlast in the list, so it will be used if no other match is found. Typically, loaders will match based on the\n{{#crossLink \"LoadItem/type\"}}{{/crossLink}}, which is automatically determined using the file extension of\nthe {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}.\n\nLoaders can be removed from PreloadJS by simply not including them.\n\nCustom loaders installed using {{#crossLink \"registerLoader\"}}{{/crossLink}} will be prepended to this list\nso that they are checked first.",
            "itemtype": "property",
            "name": "_availableLoaders",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4480,
            "description": "The number of built in loaders, so they can't be removed by {{#crossLink \"unregisterLoader\"}}{{/crossLink}.",
            "itemtype": "property",
            "name": "_defaultLoaderLength",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4495,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4508,
            "description": "An internal initialization method, which is used for initial set up, but also to reset the LoadQueue.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "preferXHR",
                    "description": ""
                },
                {
                    "name": "basePath",
                    "description": ""
                },
                {
                    "name": "crossOrigin",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4519,
            "itemtype": "property",
            "name": "useXHR",
            "type": "{Boolean}",
            "readonly": "",
            "default": "true",
            "deprecated": true,
            "deprecationMessage": "Use preferXHR instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4528,
            "description": "Try and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\nloading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\nand plain text can not be loaded with tags, so it will default the the correct type instead of using the\nuser-defined type.",
            "type": "{Boolean}",
            "default": "true",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4542,
            "description": "Whether the queue is currently paused or not.",
            "itemtype": "property",
            "name": "_paused",
            "type": "{boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4550,
            "description": "A path that will be prepended on to the item's {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}. The\n`_basePath` property will only be used if an item's source is relative, and does not include a protocol such\nas `http://`, or a relative path such as `../`.",
            "itemtype": "property",
            "name": "_basePath",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "since": "0.3.1",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4561,
            "description": "An optional flag to set on images that are loaded using PreloadJS, which enables CORS support. Images loaded\ncross-domain by servers that support CORS require the crossOrigin flag to be loaded and interacted with by\na canvas. When loading locally, or with a server with no CORS support, this flag can cause other security issues,\nso it is recommended to only set it if you are sure the server supports it. Currently, supported values are \"\"\nand \"Anonymous\".",
            "itemtype": "property",
            "name": "_crossOrigin",
            "type": "{String}",
            "default": "\"\"",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4575,
            "description": "Determines if the loadStart event was dispatched already. This event is only fired one time, when the first\nfile is requested.",
            "itemtype": "property",
            "name": "_loadStartWasDispatched",
            "type": "{Boolean}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4585,
            "description": "Determines if there is currently a script loading. This helps ensure that only a single script loads at once when\nusing a script tag to do preloading.",
            "itemtype": "property",
            "name": "_currentlyLoadingScript",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4594,
            "description": "An array containing the currently downloading files.",
            "itemtype": "property",
            "name": "_currentLoads",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4602,
            "description": "An array containing the queued items that have not yet started downloading.",
            "itemtype": "property",
            "name": "_loadQueue",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4610,
            "description": "An array containing downloads that have not completed, so that the LoadQueue can be properly reset.",
            "itemtype": "property",
            "name": "_loadQueueBackup",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4618,
            "description": "An object hash of items that have finished downloading, indexed by the {{#crossLink \"LoadItem\"}}{{/crossLink}}\nid.",
            "itemtype": "property",
            "name": "_loadItemsById",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4627,
            "description": "An object hash of items that have finished downloading, indexed by {{#crossLink \"LoadItem\"}}{{/crossLink}}\nsource.",
            "itemtype": "property",
            "name": "_loadItemsBySrc",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4636,
            "description": "An object hash of loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadedResults",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4644,
            "description": "An object hash of un-parsed loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadedRawResults",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4652,
            "description": "The number of items that have been requested. This helps manage an overall progress without knowing how large\nthe files are before they are downloaded. This does not include items inside of loaders such as the\n{{#crossLink \"ManifestLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_numItems",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4663,
            "description": "The number of items that have completed loaded. This helps manage an overall progress without knowing how large\nthe files are before they are downloaded.",
            "itemtype": "property",
            "name": "_numItemsLoaded",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4673,
            "description": "A list of scripts in the order they were requested. This helps ensure that scripts are \"completed\" in the right\norder.",
            "itemtype": "property",
            "name": "_scriptOrder",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4682,
            "description": "A list of scripts that have been loaded. Items are added to this list as <code>null</code> when they are\nrequested, contain the loaded item if it has completed, but not been dispatched to the user, and <code>true</true>\nonce they are complete and have been dispatched.",
            "itemtype": "property",
            "name": "_loadedScripts",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4692,
            "description": "The last progress amount. This is used to suppress duplicate progress events.",
            "itemtype": "property",
            "name": "_lastProgress",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4704,
            "description": "The time in milliseconds to assume a load has failed. An {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\nevent is dispatched if the timeout is reached before any data is received.",
            "itemtype": "property",
            "name": "loadTimeout",
            "type": "{Number}",
            "default": "8000",
            "static": 1,
            "since": "0.4.1",
            "deprecated": true,
            "deprecationMessage": "In favour of {{#crossLink \"LoadItem/LOAD_TIMEOUT_DEFAULT:property}}{{/crossLink}} property.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4716,
            "description": "The time in milliseconds to assume a load has failed.",
            "itemtype": "property",
            "name": "LOAD_TIMEOUT",
            "type": "{Number}",
            "default": "0",
            "deprecated": true,
            "deprecationMessage": "in favor of the {{#crossLink \"LoadQueue/loadTimeout:property\"}}{{/crossLink}} property.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4726,
            "itemtype": "property",
            "name": "BINARY",
            "type": "{String}",
            "default": "binary",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4735,
            "itemtype": "property",
            "name": "CSS",
            "type": "{String}",
            "default": "css",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4744,
            "itemtype": "property",
            "name": "IMAGE",
            "type": "{String}",
            "default": "image",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4753,
            "itemtype": "property",
            "name": "JAVASCRIPT",
            "type": "{String}",
            "default": "javascript",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4762,
            "itemtype": "property",
            "name": "JSON",
            "type": "{String}",
            "default": "json",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4771,
            "itemtype": "property",
            "name": "JSONP",
            "type": "{String}",
            "default": "jsonp",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4780,
            "itemtype": "property",
            "name": "MANIFEST",
            "type": "{String}",
            "default": "manifest",
            "static": 1,
            "since": "0.4.1",
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4790,
            "itemtype": "property",
            "name": "SOUND",
            "type": "{String}",
            "default": "sound",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4799,
            "itemtype": "property",
            "name": "VIDEO",
            "type": "{String}",
            "default": "video",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4808,
            "itemtype": "property",
            "name": "SVG",
            "type": "{String}",
            "default": "svg",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4817,
            "itemtype": "property",
            "name": "TEXT",
            "type": "{String}",
            "default": "text",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4826,
            "itemtype": "property",
            "name": "XML",
            "type": "{String}",
            "default": "xml",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4835,
            "itemtype": "property",
            "name": "POST",
            "type": "{string}",
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4842,
            "itemtype": "property",
            "name": "GET",
            "type": "{string}",
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4850,
            "description": "This event is fired when an individual file has loaded, and been processed.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a `src` property.",
                    "type": "Object"
                },
                {
                    "name": "result",
                    "description": "The HTML tag or parsed result of the loaded item.",
                    "type": "Object"
                },
                {
                    "name": "rawResult",
                    "description": "The unprocessed result, usually the raw text or binary data before it is converted\nto a usable object.",
                    "type": "Object"
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4864,
            "description": "This {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when an an individual file's progress changes.",
            "itemtype": "event",
            "name": "fileprogress",
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4870,
            "description": "This event is fired when an individual file starts to load.",
            "itemtype": "event",
            "name": "filestart",
            "params": [
                {
                    "name": "The",
                    "description": "object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a property.",
                    "type": "Object"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4880,
            "description": "Although it extends {{#crossLink \"AbstractLoader\"}}{{/crossLink}}, the `initialize` event is never fired from\na LoadQueue instance.",
            "itemtype": "event",
            "name": "initialize",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4888,
            "description": "Register a custom loaders class. New loaders are given precedence over loaders added earlier and default loaders.\nIt is recommended that loaders extend {{#crossLink \"AbstractLoader\"}}{{/crossLink}}. Loaders can only be added\nonce, and will be prepended to the list of available loaders.",
            "itemtype": "method",
            "name": "registerLoader",
            "params": [
                {
                    "name": "loader",
                    "description": "The AbstractLoader class to add.",
                    "type": "Function|AbstractLoader"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4906,
            "description": "Remove a custom loader added using {{#crossLink \"registerLoader\"}}{{/crossLink}}. Only custom loaders can be\nunregistered, the default loaders will always be available.",
            "itemtype": "method",
            "name": "unregisterLoader",
            "params": [
                {
                    "name": "loader",
                    "description": "The AbstractLoader class to remove",
                    "type": "Function|AbstractLoader"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4919,
            "itemtype": "method",
            "name": "setUseXHR",
            "params": [
                {
                    "name": "value",
                    "description": "The new useXHR value to set.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The new useXHR value. If XHR is not supported by the browser, this will return false, even if\nthe provided value argument was true.",
                "type": "Boolean"
            },
            "since": "0.3.0",
            "deprecated": true,
            "deprecationMessage": "use the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property, or the\n{{#crossLink \"LoadQueue/setUseXHR\"}}{{/crossLink}} method instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4932,
            "description": "Change the {{#crossLink \"preferXHR:property\"}}{{/crossLink}} value. Note that if this is set to `true`, it may\nfail, or be ignored depending on the browser's capabilities and the load type.",
            "itemtype": "method",
            "name": "setPreferXHR",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The value of {{#crossLink \"preferXHR\"}}{{/crossLink}} that was successfully set.",
                "type": "Boolean"
            },
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4947,
            "description": "Stops all queued and loading items, and clears the queue. This also removes all internal references to loaded\ncontent, and allows the queue to be used again.",
            "itemtype": "method",
            "name": "removeAll",
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 4957,
            "description": "Stops an item from being loaded, and removes it from the queue. If nothing is passed, all items are removed.\nThis also removes internal references to loaded item(s).\n\n<h4>Example</h4>\n\n     queue.loadManifest([\n         {src:\"test.png\", id:\"png\"},\n         {src:\"test.jpg\", id:\"jpg\"},\n         {src:\"test.mp3\", id:\"mp3\"}\n     ]);\n     queue.remove(\"png\"); // Single item by ID\n     queue.remove(\"png\", \"test.jpg\"); // Items as arguments. Mixed id and src.\n     queue.remove([\"test.png\", \"jpg\"]); // Items in an Array. Mixed id and src.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "idsOrUrls",
                    "description": "The id or ids to remove from this queue. You can pass an item, an array of\nitems, or multiple items as arguments.",
                    "type": "String | Array",
                    "multiple": true
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5043,
            "description": "Stops all open loads, destroys any loaded items, and resets the queue, so all items can\nbe reloaded again by calling {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}}. Items are not removed from the\nqueue. To remove items use the {{#crossLink \"LoadQueue/remove\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/removeAll\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "reset",
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5066,
            "description": "Register a plugin. Plugins can map to load types (sound, image, etc), or specific extensions (png, mp3, etc).\nCurrently, only one plugin can exist per type/extension.\n\nWhen a plugin is installed, a <code>getPreloadHandlers()</code> method will be called on it. For more information\non this method, check out the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method in the\n{{#crossLink \"SamplePlugin\"}}{{/crossLink}} class.\n\nBefore a file is loaded, a matching plugin has an opportunity to modify the load. If a `callback` is returned\nfrom the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method, it will be invoked first, and its\nresult may cancel or modify the item. The callback method can also return a `completeHandler` to be fired when\nthe file is loaded, or a `tag` object, which will manage the actual download. For more information on these\nmethods, check out the {{#crossLink \"SamplePlugin/preloadHandler\"}}{{/crossLink}} and {{#crossLink \"SamplePlugin/fileLoadHandler\"}}{{/crossLink}}\nmethods on the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "installPlugin",
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install.",
                    "type": "Function"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5108,
            "description": "Set the maximum number of concurrent connections. Note that browsers and servers may have a built-in maximum\nnumber of open connections, so any additional connections may remain in a pending state until the browser\nopens the connection. When loading scripts using tags, and when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}}\nis `true`, only one script is loaded at a time due to browser limitations.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.setMaxConnections(10); // Allow 10 concurrent loads",
            "itemtype": "method",
            "name": "setMaxConnections",
            "params": [
                {
                    "name": "value",
                    "description": "The number of concurrent loads to allow. By default, only a single connection per LoadQueue\nis open at any time.",
                    "type": "Number"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5130,
            "description": "Load a single file. To add multiple files at once, use the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nmethod.\n\nFiles are always appended to the current queue, so this method can be used multiple times to add files.\nTo clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "loadFile",
            "params": [
                {
                    "name": "file",
                    "description": "The file object or path to load. A file can be either\n<ul>\n    <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n    <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n    <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n    in the background.</li>\n</ul>",
                    "type": "LoadItem|Object|String"
                },
                {
                    "name": "loadNow",
                    "description": "Kick off an immediate load (true) or wait for a load call (false). The default\nvalue is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}}, and the value is\n`true`, the queue will resume automatically.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "basePath",
                    "description": "A base path that will be prepended to each file. The basePath argument overrides the\npath specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}},\nits files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\nThis parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\nconstructor, or a `path` property in a manifest definition.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5168,
            "description": "Load an array of files. To load a single file, use the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} method.\nThe files in the manifest are requested in the same order, but may complete in a different order if the max\nconnections are set above 1 using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Scripts will load\nin the right order as long as {{#crossLink \"LoadQueue/maintainScriptOrder\"}}{{/crossLink}} is true (which is\ndefault).\n\nFiles are always appended to the current queue, so this method can be used multiple times to add files.\nTo clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "loadManifest",
            "params": [
                {
                    "name": "manifest",
                    "description": "An list of files to load. The loadManifest call supports four types of\nmanifests:\n<ol>\n    <li>A string path, which points to a manifest file, which is a JSON file that contains a \"manifest\" property,\n    which defines the list of files to load, and can optionally contain a \"path\" property, which will be\n    prepended to each file in the list.</li>\n    <li>An object which defines a \"src\", which is a JSON or JSONP file. A \"callback\" can be defined for JSONP\n    file. The JSON/JSONP file should contain a \"manifest\" property, which defines the list of files to load,\n    and can optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n    <li>An object which contains a \"manifest\" property, which defines the list of files to load, and can\n    optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n    <li>An Array of files to load.</li>\n</ol>\n\nEach \"file\" in a manifest can be either:\n<ul>\n    <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n    <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n    <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n    in the background.</li>\n</ul>",
                    "type": "Array|String|Object"
                },
                {
                    "name": "loadNow",
                    "description": "Kick off an immediate load (true) or wait for a load call (false). The default\nvalue is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} and this value is\n`true`, the queue will resume automatically.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "basePath",
                    "description": "A base path that will be prepended to each file. The basePath argument overrides the\npath specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"LoadQueue/MANIFEST:property\"}}{{/crossLink}},\nits files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\nThis parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\nconstructor, or a `path` property in a manifest definition.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5268,
            "description": "Start a LoadQueue that was created, but not automatically started.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5276,
            "description": "Look up a {{#crossLink \"LoadItem\"}}{{/crossLink}} using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\" was\nsupplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n`basePath` will not be part of the ID.",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "value",
                    "description": "The <code>id</code> or <code>src</code> of the load item.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The load item that was initially requested using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\nevent as the `item` parameter.",
                "type": "Object"
            },
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5290,
            "description": "Look up a loaded result using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\"\nwas supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n`basePath` will not be part of the ID.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "value",
                    "description": "The <code>id</code> or <code>src</code> of the load item.",
                    "type": "String"
                },
                {
                    "name": "rawResult",
                    "description": "Return a raw result instead of a formatted result. This applies to content\nloaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\nreturned instead.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A result object containing the content that was loaded, such as:\n<ul>\n     <li>An image tag (&lt;image /&gt;) for images</li>\n     <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts are automatically added to the HTML\n     DOM.</li>\n     <li>A style tag for CSS (&lt;style /&gt; or &lt;link &gt;)</li>\n     <li>Raw text for TEXT</li>\n     <li>A formatted JavaScript object defined by JSON</li>\n     <li>An XML document</li>\n     <li>A binary arraybuffer loaded by XHR</li>\n     <li>An audio tag (&lt;audio &gt;) for HTML audio. Note that it is recommended to use SoundJS APIs to play\n     loaded audio. Specifically, audio loaded by Flash and WebAudio will return a loader object using this method\n     which can not be used to play audio back.</li>\n</ul>\nThis object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event as the 'item`\nparameter. Note that if a raw result is requested, but not found, the result will be returned instead.",
                "type": "Object"
            },
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5328,
            "description": "Generate an list of items loaded by this queue.",
            "itemtype": "method",
            "name": "getItems",
            "params": [
                {
                    "name": "loaded",
                    "description": "Determines if only items that have been loaded should be returned. If false, in-progress\nand failed load items will also be included.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "A list of objects that have been loaded. Each item includes the {{#crossLink \"LoadItem\"}}{{/crossLink}},\nresult, and rawResult.",
                "type": "Array"
            },
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5354,
            "description": "Pause or resume the current load. Active loads will not be cancelled, but the next items in the queue will not\nbe processed when active loads complete. LoadQueues are not paused by default.\n\nNote that if new items are added to the queue using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}, a paused queue will be resumed, unless the `loadNow`\nargument is `false`.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Whether the queue should be paused or not.",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5371,
            "description": "Close the active queue. Closing a queue completely empties the queue, and prevents any remaining items from\nstarting to download. Note that currently any active loads will remain open, and events may be processed.\n\nTo stop and restart a queue, use the {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} method instead.",
            "itemtype": "method",
            "name": "close",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5390,
            "description": "Add an item to the queue. Items are formatted into a usable object containing all the properties necessary to\nload the content. The load queue is populated with the loader instance that handles preloading, and not the load\nitem that was passed in by the user. To look up the load item by id or src, use the {{#crossLink \"LoadQueue.getItem\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "_addItem",
            "params": [
                {
                    "name": "value",
                    "description": "The item to add to the queue.",
                    "type": "String|Object"
                },
                {
                    "name": "path",
                    "description": "An optional path prepended to the `src`. The path will only be prepended if the src is\nrelative, and does not start with a protocol such as `http://`, or a path like `../`. If the LoadQueue was\nprovided a {{#crossLink \"_basePath\"}}{{/crossLink}}, then it will optionally be prepended after.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "basePath",
                    "description": "<strong>Deprecated</strong>An optional basePath passed into a {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} call. This parameter will be removed in a future tagged\nversion.",
                    "type": "String",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5434,
            "description": "Create a refined {{#crossLink \"LoadItem\"}}{{/crossLink}}, which contains all the required properties. The type of\nitem is determined by browser support, requirements based on the file type, and developer settings. For example,\nXHR is only used for file types that support it in new browsers.\n\nBefore the item is returned, any plugins registered to handle the type or extension will be fired, which may\nalter the load item.",
            "itemtype": "method",
            "name": "_createLoadItem",
            "params": [
                {
                    "name": "value",
                    "description": "The item that needs to be preloaded.",
                    "type": "String | Object | HTMLAudioElement | HTMLImageElement"
                },
                {
                    "name": "path",
                    "description": "A path to prepend to the item's source. Sources beginning with http:// or similar will\nnot receive a path. Since PreloadJS 0.4.1, the src will be modified to include the `path` and {{#crossLink \"LoadQueue/_basePath:property\"}}{{/crossLink}}\nwhen it is added.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "basePath",
                    "description": "<strong>Deprectated</strong> A base path to prepend to the items source in addition to\nthe path argument.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The loader instance that will be used.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5545,
            "description": "Create a loader for a load item.",
            "itemtype": "method",
            "name": "_createLoader",
            "params": [
                {
                    "name": "item",
                    "description": "A formatted load item that can be used to generate a loader.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A loader that can be used to load content.",
                "type": "AbstractLoader"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5571,
            "description": "Load the next item in the queue. If the queue is empty (all items have been loaded), then the complete event\nis processed. The queue will \"fill up\" any empty slots, up to the max connection specified using\n{{#crossLink \"LoadQueue.setMaxConnections\"}}{{/crossLink}} method. The only exception is scripts that are loaded\nusing tags, which have to be loaded one at a time to maintain load order.",
            "itemtype": "method",
            "name": "_loadNext",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5621,
            "description": "Begin loading an item. Event listeners are not added to the loaders until the load starts.",
            "itemtype": "method",
            "name": "_loadItem",
            "params": [
                {
                    "name": "loader",
                    "description": "The loader instance to start. Currently, this will be an XHRLoader or TagLoader.",
                    "type": "AbstractLoader"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5638,
            "description": "The callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\nevents.",
            "params": [
                {
                    "name": "event",
                    "description": "The {{#crossLink \"AbstractLoader/fileload:event\"}}{{/crossLink}} event from the loader.",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5651,
            "description": "The callback that is fired when a loader encounters an error from an internal file load operation. This enables\nloaders like M",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5662,
            "description": "The callback that is fired when a loader encounters an error. The queue will continue loading unless {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}}\nis set to `true`.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The error event, containing relevant error information.",
                    "type": "ErrorEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5690,
            "description": "An item has finished loading. We can assume that it is totally loaded, has been parsed for immediate use, and\nis available as the \"result\" property on the load item. The raw text result for a parsed item (such as JSON, XML,\nCSS, JavaScript, etc) is available as the \"rawResult\" property, and can also be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_handleFileComplete",
            "params": [
                {
                    "name": "event",
                    "description": "The event object from the loader.",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5723,
            "description": "Some loaders might load additional content, other than the item they were passed (such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}).\nAny items exposed by the loader using {{#crossLink \"AbstractLoader/getLoadItems\"}}{{/crossLink}} are added to the\nLoadQueue's look-ups, including {{#crossLink \"getItem\"}}{{/crossLink}} and {{#crossLink \"getResult\"}}{{/crossLink}}\nmethods.",
            "itemtype": "method",
            "name": "_saveLoadedItems",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5754,
            "description": "Flag an item as finished. If the item's order is being managed, then ensure that it is allowed to finish, and if\nso, trigger prior items to trigger as well.",
            "itemtype": "method",
            "name": "_finishOrderedItem",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                },
                {
                    "name": "loadFailed",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the item's order is being managed. This allows the caller to take an alternate\nbehaviour if it is.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5788,
            "description": "Ensure the scripts load and dispatch in the correct order. When using XHR, scripts are stored in an array in the\norder they were added, but with a \"null\" value. When they are completed, the value is set to the load item,\nand then when they are processed and dispatched, the value is set to `true`. This method simply\niterates the array, and ensures that any loaded items that are not preceded by a `null` value are\ndispatched.",
            "itemtype": "method",
            "name": "_checkScriptLoadOrder",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5821,
            "description": "A file has completed loading, and the LoadQueue can move on. This triggers the complete event, and kick-starts\nthe next item.",
            "itemtype": "method",
            "name": "_processFinishedLoad",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5844,
            "description": "Ensure items with `maintainOrder=true` that are before the specified item have loaded. This only applies to\nJavaScript items that are being loaded with a TagLoader, since they have to be loaded and completed <strong>before</strong>\nthe script can even be started, since it exist in the DOM while loading.",
            "itemtype": "method",
            "name": "_canStartLoad",
            "params": [
                {
                    "name": "loader",
                    "description": "The loader for the item",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "Whether the item can start a load or not.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5878,
            "description": "A load item is completed or was canceled, and needs to be removed from the LoadQueue.",
            "itemtype": "method",
            "name": "_removeLoadItem",
            "params": [
                {
                    "name": "loader",
                    "description": "A loader instance to remove.",
                    "type": "AbstractLoader"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5894,
            "description": "Remove unneeded references from a loader.",
            "params": [
                {
                    "name": "loader",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5907,
            "description": "An item has dispatched progress. Propagate that progress, and update the LoadQueue's overall progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The progress event from the item.",
                    "type": "ProgressEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5919,
            "description": "Overall progress has changed, so determine the new progress amount and dispatch it. This changes any time an\nitem dispatches progress or completes. Note that since we don't always know the actual filesize of items before\nthey are loaded. In this case, we define a \"slot\" for each item (1 item in 10 would get 10%), and then append\nloaded progress on top of the already-loaded items.\n\nFor example, if 5/10 items have loaded, and item 6 is 20% loaded, the total progress would be:\n<ul>\n     <li>5/10 of the items in the queue (50%)</li>\n     <li>plus 20% of item 6's slot (2%)</li>\n     <li>equals 52%</li>\n</ul>",
            "itemtype": "method",
            "name": "_updateProgress",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5951,
            "description": "Clean out item results, to free them from memory. Mainly, the loaded item and results are cleared from internal\nhashes.",
            "itemtype": "method",
            "name": "_disposeItem",
            "params": [
                {
                    "name": "item",
                    "description": "The item that was passed in for preloading.",
                    "type": "LoadItem|Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5965,
            "description": "Dispatch a \"fileprogress\" {{#crossLink \"Event\"}}{{/crossLink}}. Please see the LoadQueue {{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendFileProgress",
            "params": [
                {
                    "name": "item",
                    "description": "The item that is being loaded.",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "progress",
                    "description": "The amount the item has been loaded (between 0 and 1).",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 5991,
            "description": "Dispatch a fileload {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event for\ndetails on the event payload.",
            "itemtype": "method",
            "name": "_sendFileComplete",
            "params": [
                {
                    "name": "item",
                    "description": "The item that is being loaded.",
                    "type": "LoadItemObject"
                },
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6018,
            "description": "Dispatch a filestart {{#crossLink \"Event\"}}{{/crossLink}} immediately before a file starts to load. Please see\nthe {{#crossLink \"LoadQueue/filestart:event\"}}{{/crossLink}} event for details on the event payload.",
            "itemtype": "method",
            "name": "_sendFileStart",
            "params": [
                {
                    "name": "item",
                    "description": "The item that is being loaded.",
                    "type": "LoadItem|Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6063,
            "description": "Determines if the loader can load a specific item. This loader loads items that are of type {{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}},\nbut is also the default loader if a file type can not be determined.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.TextLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6105,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.BinaryLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6118,
            "description": "Before the item loads, set the response type to \"arraybuffer\"",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.BinaryLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6173,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.CSSLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6186,
            "description": "The result formatter for CSS files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLLinkElement|HTMLStyleElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.CSSLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6265,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/IMAGE:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6294,
            "description": "Before the item loads, set its mimeType and responseType.",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6309,
            "description": "The result formatter for Image files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLImageElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6320,
            "description": "The asynchronous image formatter function. This is required because images have\na short delay before they are ready.",
            "itemtype": "method",
            "name": "_formatImage",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The method to call when the result has finished formatting",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The method to call if an error occurs during formatting",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6357,
            "description": "Clean up the ObjectURL, the tag is done with it. Note that this function is run\nas an event listener without a proxy/closure, as it doesn't require it - so do not\ninclude any functionality that requires scope without changing it.",
            "itemtype": "method",
            "name": "_cleanUpURL",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6407,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.JavaScriptLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6420,
            "description": "The result formatter for JavaScript files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLLinkElement|HTMLStyleElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.JavaScriptLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6469,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.JSONLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6482,
            "description": "The result formatter for JSON files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLLinkElement|HTMLStyleElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6566,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6584,
            "description": "Loads the JSONp file.  Because of the unique loading needs of JSONp\nwe don't use the AbstractLoader.load() method.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6617,
            "description": "Handle the JSONP callback, which is a public method defined on `window`.",
            "itemtype": "method",
            "name": "_handleLoad",
            "params": [
                {
                    "name": "data",
                    "description": "The formatted JSON data.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6630,
            "description": "The tag request has not loaded within the time specfied in loadTimeout.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6641,
            "description": "Clean up the JSONP load. This clears out the callback and script tag that this loader creates.",
            "itemtype": "method",
            "name": "_dispose",
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6699,
            "description": "An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}},\nused to pass plugins to new LoadQueues that may be created.",
            "itemtype": "property",
            "name": "_plugins",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6711,
            "description": "An internal {{#crossLink \"LoadQueue\"}}{{/crossLink}} that loads the contents of the manifest.",
            "itemtype": "property",
            "name": "_manifestQueue",
            "type": "{LoadQueue}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6724,
            "description": "The amount of progress that the manifest itself takes up.",
            "itemtype": "property",
            "name": "MANIFEST_PROGRESS",
            "type": "{number}",
            "default": "0.25 (25%)",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6735,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6785,
            "description": "Create and load the manifest items once the actual manifest has been loaded.",
            "itemtype": "method",
            "name": "_loadManifest",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6807,
            "description": "An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.",
            "itemtype": "method",
            "name": "_handleManifestFileLoad",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6818,
            "description": "The manifest has completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n{{#crossLink \"Event\"}}{{/crossLink}} from the ManifestLoader.",
            "itemtype": "method",
            "name": "_handleManifestComplete",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6830,
            "description": "The manifest has reported progress.",
            "itemtype": "method",
            "name": "_handleManifestProgress",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ProgressEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6841,
            "description": "The manifest has reported an error with one of the files.",
            "itemtype": "method",
            "name": "_handleManifestError",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ErrorEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6899,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SoundLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6960,
            "description": "Create a new video tag",
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.VideoLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 6971,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/VIDEO:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.VideoLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7023,
            "description": "An internal queue which loads the SpriteSheet's images.",
            "itemtype": "method",
            "name": "_manifestQueue",
            "type": "{LoadQueue}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7036,
            "description": "The amount of progress that the manifest itself takes up.",
            "itemtype": "property",
            "name": "SPRITESHEET_PROGRESS",
            "type": "{number}",
            "default": "0.25 (25%)",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7047,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7093,
            "description": "Create and load the images once the SpriteSheet JSON has been loaded.",
            "itemtype": "method",
            "name": "_loadManifest",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7110,
            "description": "An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.",
            "itemtype": "method",
            "name": "_handleManifestFileLoad",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7125,
            "description": "The images have completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n{{#crossLink \"Event\"}}{{/crossLink}} from the SpriteSheetLoader.",
            "itemtype": "method",
            "name": "_handleManifestComplete",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7138,
            "description": "The images {{#crossLink \"LoadQueue\"}}{{/crossLink}} has reported progress.",
            "itemtype": "method",
            "name": "_handleManifestProgress",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ProgressEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7149,
            "description": "An image has reported an error.",
            "itemtype": "method",
            "name": "_handleManifestError",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ErrorEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7204,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SVGLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7217,
            "description": "The result formatter for SVG files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.SVGLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7274,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.XMLLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js",
            "line": 7287,
            "description": "The result formatter for XML files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "XMLDocument"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XMLLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 45,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "static": 1,
            "class": "Graphics.PreloadJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 53,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "{String}",
            "static": 1,
            "class": "Graphics.PreloadJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 73,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 109,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 180,
            "description": "A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\ncallback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\nmethod gets called in the correct scope.\n\nAdditional arguments can be passed that will be applied to the function when it is called.\n\n<h4>Example</h4>\n\n     myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\n     function myHandler(arg1, arg2) {\n          // This gets called when myObject.myCallback is executed.\n     }",
            "itemtype": "method",
            "name": "proxy",
            "params": [
                {
                    "name": "method",
                    "description": "The function to call",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope to call the method name on",
                    "type": "Object"
                },
                {
                    "name": "arg",
                    "description": "* Arguments that are appended to the callback for additional params.",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 221,
            "description": "Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\nthat value.  Returns -1 if value is not found.\n\n     var i = createjs.indexOf(myArray, myElementToFind);",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "array",
                    "description": "Array to search for searchElement",
                    "type": "Array"
                },
                {
                    "name": "searchElement",
                    "description": "Element to find in array."
                }
            ],
            "return": {
                "description": "The first index of searchElement in array.",
                "type": "Number"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 269,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 276,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 285,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 297,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 310,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 319,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 329,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 338,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 348,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 358,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 368,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 379,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 393,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 403,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 412,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 422,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 436,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 445,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 458,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 490,
            "description": "The short error title, which indicates the type of error that occurred.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 497,
            "description": "The verbose error message, containing details about the error.",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 504,
            "description": "Additional data attached to an error.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 591,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 598,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 607,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 622,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 646,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 679,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 725,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 755,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 769,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 791,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 845,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 856,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 876,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 886,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 940,
            "description": "The amount that has been loaded (out of a total amount)",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Number}",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 947,
            "description": "The total \"size\" of the load.",
            "itemtype": "property",
            "name": "total",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 955,
            "description": "The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 966,
            "description": "Returns a clone of the ProgressEvent instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "ProgressEvent"
            },
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 1927,
            "description": "Parse XML using the DOM. This is required when preloading XML or SVG.",
            "itemtype": "method",
            "name": "parseXML",
            "params": [
                {
                    "name": "text",
                    "description": "The raw text or XML that is loaded by XHR.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The mime type of the XML. Use \"text/xml\" for XML, and  \"image/svg+xml\" for SVG parsing.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An XML document",
                "type": "XML"
            },
            "static": 1,
            "class": "Graphics.DataUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 1963,
            "description": "Parse a string into an Object.",
            "itemtype": "method",
            "name": "parseJSON",
            "params": [
                {
                    "name": "value",
                    "description": "The loaded JSON string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A JavaScript object.",
                "type": "Object"
            },
            "class": "Graphics.DataUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2005,
            "description": "The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\nstring (recommended), or an HTML tag.\nThis can also be an object, but in that case it has to include a type and be handled by a plugin.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2015,
            "description": "The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\nbe set manually. This is helpful in cases where a file does not have an extension.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2024,
            "description": "A string identifier which can be used to reference the loaded object. If none is provided, this will be\nautomatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2033,
            "description": "Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\nthat have also set the `maintainOrder` property to `true`. This only applies when the max connections has\nbeen set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\nproperty set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\norder when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.",
            "itemtype": "property",
            "name": "maintainOrder",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2045,
            "description": "A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.",
            "itemtype": "property",
            "name": "callback",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2053,
            "description": "An arbitrary data object, which is included with the loaded object.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2061,
            "description": "The request method used for HTTP calls. Both {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} or\n{{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\nconstants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "method",
            "type": "{String}",
            "default": "get",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2071,
            "description": "An object hash of name/value pairs to send to the server.",
            "itemtype": "property",
            "name": "values",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2079,
            "description": "An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\nheaders when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\ndefault headers by including them in your headers object.",
            "itemtype": "property",
            "name": "headers",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2089,
            "description": "Enable credentials for XHR requests.",
            "itemtype": "property",
            "name": "withCredentials",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2097,
            "description": "Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\nbased files (json, xml, text, css, js).",
            "itemtype": "property",
            "name": "mimeType",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2106,
            "description": "Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.",
            "itemtype": "property",
            "name": "crossOrigin",
            "type": "{boolean}",
            "default": "Anonymous",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2114,
            "description": "The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "loadTimeout",
            "type": "{Number}",
            "default": "8000 (8 seconds)",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2127,
            "description": "Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "LOAD_TIMEOUT_DEFAULT",
            "type": "{number}",
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2136,
            "description": "Create a LoadItem.\n<ul>\n    <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n    <li>LoadItem instances are returned as-is</li>\n    <li>Objects are returned with any needed properties added</li>\n</ul>",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "value",
                    "description": "The load item value",
                    "type": "LoadItem|String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "LoadItem|Object"
            },
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2165,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the LoadItem instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "LoadItem"
            },
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2197,
            "description": "The Regular Expression used to test file URLS for an absolute path.",
            "itemtype": "property",
            "name": "ABSOLUTE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2205,
            "description": "The Regular Expression used to test file URLS for a relative path.",
            "itemtype": "property",
            "name": "RELATIVE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2213,
            "description": "The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\nremoved.",
            "itemtype": "property",
            "name": "EXTENSION_PATT",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2222,
            "description": "Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n<ul>\n    <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n    `//networkPath`)</li>\n    <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n    <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n    the file path is expected to follow the format `name.ext`.</li>\n</ul>",
            "itemtype": "method",
            "name": "parseURI",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An Object with an `absolute` and `relative` Boolean values, as well as an optional 'extension`\nproperty, which is the lowercase extension.",
                "type": "Object"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2264,
            "description": "Formats an object into a query string for either a POST or GET request.",
            "itemtype": "method",
            "name": "formatQueryString",
            "params": [
                {
                    "name": "data",
                    "description": "The data to convert to a query string.",
                    "type": "Object"
                },
                {
                    "name": "query",
                    "description": "Existing name/value pairs to append on to this query.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2285,
            "description": "A utility method that builds a file path using a source and a data object, and formats it into a new path.",
            "itemtype": "method",
            "name": "buildPath",
            "params": [
                {
                    "name": "src",
                    "description": "The source path to add values to.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Object used to append values to this request as a query string. Existing parameters on the\npath will be preserved.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A formatted string that contains the path and the supplied parameters.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2314,
            "itemtype": "method",
            "name": "isCrossDomain",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from a different domain than the current location.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2334,
            "itemtype": "method",
            "name": "isLocal",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\nwell.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2347,
            "description": "Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\nspecifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\nback using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\na binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n{{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "isBinary",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is binary.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2368,
            "description": "Check if item is a valid HTMLImageElement",
            "itemtype": "method",
            "name": "isImageTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2379,
            "description": "Check if item is a valid HTMLAudioElement",
            "itemtype": "method",
            "name": "isAudioTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2394,
            "description": "Check if item is a valid HTMLVideoElement",
            "itemtype": "method",
            "name": "isVideoTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2409,
            "description": "Determine if a specific type is a text-based asset, and should be loaded as UTF-8.",
            "itemtype": "method",
            "name": "isText",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is text.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2432,
            "description": "Determine the type of the object using common extensions. Note that the type can be passed in with the load item\nif it is an unusual extension.",
            "itemtype": "method",
            "name": "getTypeByExtension",
            "params": [
                {
                    "name": "extension",
                    "description": "The file extension to use to determine the load type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The determined load type (for example, <code>AbstractLoader.IMAGE</code>). Will return `null` if\nthe type can not be determined by the extension.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2507,
            "description": "If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\nused for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2516,
            "description": "Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\nis readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\ninstead.",
            "itemtype": "property",
            "name": "canceled",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2527,
            "description": "The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\n<h4>Example</h4>\n\n    var queue = new createjs.LoadQueue();\n    queue.loadFile(\"largeImage.png\");\n    queue.on(\"progress\", function() {\n        console.log(\"Progress:\", queue.progress, event.progress);\n    });",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2544,
            "description": "The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\nsupported types.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2552,
            "description": "A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\nconverts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\ncan be overridden to provide custom formatting.\n\nOptionally, a resultFormatter can return a callback function in cases where the formatting needs to be\nasynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\nto handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\ncalled in the current scope, as well as the success and error callbacks.\n\n<h4>Example asynchronous resultFormatter</h4>\n\n\tfunction _formatResult(loader) {\n\t\treturn function(success, error) {\n\t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t\tsuccess(result);\n\t\t}\n\t}",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "{Function}",
            "default": "null",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2577,
            "description": "The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\nbut will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_item",
            "type": "{LoadItem|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2590,
            "description": "Whether the loader will try and load content using XHR (true) or HTML tags (false).",
            "itemtype": "property",
            "name": "_preferXHR",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2598,
            "description": "The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\nitems that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\nThe result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.",
            "itemtype": "property",
            "name": "_result",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2608,
            "description": "The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\nmethod, and passing `true`.",
            "itemtype": "property",
            "name": "_rawResult",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2617,
            "description": "A list of items that loaders load behind the scenes. This does not include the main item the loader is\nresponsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n{{#crossLink \"ManifestLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadItems",
            "type": "{null}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2627,
            "description": "The attribute the items loaded using tags use for the source.",
            "type": "{string}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2635,
            "description": "An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2651,
            "description": "Defines a POST request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "POST",
            "type": "{string}",
            "default": "post",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2660,
            "description": "Defines a GET request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "GET",
            "type": "{string}",
            "default": "get",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2669,
            "description": "The preload type for generic binary types. Note that images are loaded as binary files when using XHR.",
            "itemtype": "property",
            "name": "BINARY",
            "type": "{String}",
            "default": "binary",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2679,
            "description": "The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n&lt;style&gt; tag when loaded with tags.",
            "itemtype": "property",
            "name": "CSS",
            "type": "{String}",
            "default": "css",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2690,
            "description": "The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.",
            "itemtype": "property",
            "name": "IMAGE",
            "type": "{String}",
            "default": "image",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2700,
            "description": "The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n&lt;script&gt; tag.\n\nSince version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\nthe body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\nonly tag-loaded scripts are injected.",
            "itemtype": "property",
            "name": "JAVASCRIPT",
            "type": "{String}",
            "default": "javascript",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2715,
            "description": "The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\nno matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\nmust contain a matching wrapper function.",
            "itemtype": "property",
            "name": "JSON",
            "type": "{String}",
            "default": "json",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2728,
            "description": "The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\nNote that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\nproperty is set to.",
            "itemtype": "property",
            "name": "JSONP",
            "type": "{String}",
            "default": "jsonp",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2741,
            "description": "The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\nand parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\nArray of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nmethod. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\nregardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.",
            "itemtype": "property",
            "name": "MANIFEST",
            "type": "{String}",
            "default": "manifest",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2755,
            "description": "The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n&lt;audio&gt; tag.",
            "itemtype": "property",
            "name": "SOUND",
            "type": "{String}",
            "default": "sound",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2766,
            "description": "The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n&lt;video&gt; tag.",
            "itemtype": "property",
            "name": "VIDEO",
            "type": "{String}",
            "default": "video",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2777,
            "description": "The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.",
            "itemtype": "property",
            "name": "SPRITESHEET",
            "type": "{String}",
            "default": "spritesheet",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2787,
            "description": "The preload type for SVG files.",
            "itemtype": "property",
            "name": "SVG",
            "type": "{String}",
            "default": "svg",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2797,
            "description": "The preload type for text files, which is also the default file type if the type can not be determined. Text is\nloaded as raw text.",
            "itemtype": "property",
            "name": "TEXT",
            "type": "{String}",
            "default": "text",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2808,
            "description": "The preload type for xml files. XML is loaded into an XML document.",
            "itemtype": "property",
            "name": "XML",
            "type": "{String}",
            "default": "xml",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2819,
            "description": "The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\nversion 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "progress",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2826,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.",
            "itemtype": "event",
            "name": "loadstart",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.1",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2834,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2842,
            "description": "The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\nencountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\njust a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "error",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2850,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\nThis enables loaders to maintain internal queues, and surface file load errors.",
            "itemtype": "event",
            "name": "fileerror",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The even type (\"fileerror\")",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "item that encountered the error",
                    "type": "LoadItem|object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2860,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\nloaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\nand notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\nslightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"fileload\")",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a `src` property.",
                    "type": "Object"
                },
                {
                    "name": "result",
                    "description": "The HTML tag or parsed result of the loaded item.",
                    "type": "Object"
                },
                {
                    "name": "rawResult",
                    "description": "The unprocessed result, usually the raw text or binary data before it is converted\nto a usable object.",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2877,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\nThis allows updates to the loader for specific loading needs, such as binary or XHR image loading.",
            "itemtype": "event",
            "name": "initialize",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"initialize\")",
                    "type": "String"
                },
                {
                    "name": "loader",
                    "description": "The loader that has been initialized.",
                    "type": "AbstractLoader"
                }
            ],
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2887,
            "description": "Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\npassed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\nbe a {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getItem",
            "return": {
                "description": "The manifest item that this loader is responsible for loading.",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2900,
            "description": "Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\nevent is dispatched.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Determines if the returned result will be the formatted content, or the raw loaded\ndata (if it exists).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2913,
            "description": "Return the `tag` this object creates or uses for loading.",
            "itemtype": "method",
            "name": "getTag",
            "return": {
                "description": "The tag instance",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2923,
            "description": "Set the `tag` this item uses for loading.",
            "itemtype": "method",
            "name": "setTag",
            "params": [
                {
                    "name": "tag",
                    "description": "The tag instance",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2933,
            "description": "Begin loading the item. This method is required when using a loader by itself.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.on(\"complete\", handleComplete);\n     queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n     queue.load();",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2962,
            "description": "Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\nthe background), but events will not longer be dispatched.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2972,
            "description": "Clean up the loader.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 2993,
            "description": "Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto expose items it loads internally.",
            "itemtype": "method",
            "name": "getLoadedItems",
            "return": {
                "description": "A list of the items loaded by the loader.",
                "type": "Array"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3006,
            "description": "Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n{{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\nOther loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\nwhich uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.",
            "itemtype": "method",
            "name": "_createRequest",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3022,
            "description": "Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\nby loaders that require tag loading.",
            "itemtype": "method",
            "name": "_createTag",
            "params": [
                {
                    "name": "src",
                    "description": "The tag source",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The tag that was created",
                "type": "HTMLElement"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3032,
            "description": "Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendLoadStart",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3043,
            "description": "Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_sendProgress",
            "params": [
                {
                    "name": "value",
                    "description": "The progress of the loaded item, or an object containing <code>loaded</code>\nand <code>total</code> properties.",
                    "type": "Number | Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3065,
            "description": "Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event",
            "itemtype": "method",
            "name": "_sendComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3085,
            "description": "Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendError",
            "params": [
                {
                    "name": "event",
                    "description": "The event object containing specific error properties.",
                    "type": "ErrorEvent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3100,
            "description": "Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\ndo not cause issues after the queue has been cleaned up.",
            "itemtype": "method",
            "name": "_isCanceled",
            "return": {
                "description": "If the loader has been canceled.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3114,
            "description": "A custom result formatter function, which is called just before a request dispatches its complete event. Most\nloader types already have an internal formatter, but this can be user-overridden for custom formatting. The\nformatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "Function",
            "return": {
                "description": "The formatted result",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3125,
            "description": "Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\nthis method can be overridden for custom behaviours.",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The event that the internal request dispatches.",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3166,
            "description": "The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "result",
                    "description": "The formatted result",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3178,
            "description": "The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "error",
                    "description": "The error event",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3189,
            "itemtype": "method",
            "name": "buildPath",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "deprecationMessage": "Use the {{#crossLink \"RequestUtils\"}}{{/crossLink}} method {{#crossLink \"RequestUtils/buildPath\"}}{{/crossLink}}\ninstead.",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3199,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3260,
            "description": "Creates a new tag for loading if it doesn't exist yet.",
            "itemtype": "method",
            "name": "_createTag",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3277,
            "description": "Before the item loads, set its mimeType and responseType.",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3290,
            "description": "The result formatter for media files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLVideoElement|HTMLAudioElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3337,
            "description": "Begin a load.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3343,
            "description": "Clean up a request.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3349,
            "description": "Cancel an in-progress request.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3380,
            "description": "The HTML tag instance that is used to load.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{HTMLElement}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3388,
            "description": "The tag attribute that specifies the source, such as \"src\", \"href\", etc.",
            "itemtype": "property",
            "name": "_tagSrcAttribute",
            "type": "{String}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3396,
            "description": "A method closure used for handling the tag load event.",
            "itemtype": "property",
            "name": "_loadedHandler",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3404,
            "description": "Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.",
            "itemtype": "property",
            "name": "_addedToDOM",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3412,
            "description": "Determines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "type": "{null}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3455,
            "description": "Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\nand LINK tags), but other cases may exist.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3472,
            "description": "Handle any error events from the tag.",
            "itemtype": "method",
            "name": "_handleError",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3482,
            "description": "Handle the tag's onload callback.",
            "itemtype": "method",
            "name": "_handleTagComplete",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3497,
            "description": "The tag request has not loaded within the time specified in loadTimeout.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3508,
            "description": "Remove event listeners, but don't destroy the request object",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3532,
            "description": "Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\nthat is already in a load, but not complete.",
            "itemtype": "method",
            "name": "_handleStalled",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3610,
            "description": "An XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MediaTagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3664,
            "description": "A reference to the XHR request used to load the content.",
            "itemtype": "property",
            "name": "_request",
            "type": "{XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3672,
            "description": "A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\ntypically IE9).",
            "itemtype": "property",
            "name": "_loadTimeout",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3681,
            "description": "The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\nthe version, so we use capabilities to make a best guess.",
            "itemtype": "property",
            "name": "_xhrLevel",
            "type": "{Number}",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3691,
            "description": "The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\nnull until the file is loaded.",
            "itemtype": "property",
            "name": "_response",
            "type": "{mixed}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3700,
            "description": "The response of the loaded file before it is modified. In most cases, content is converted from raw text to\nan HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\nwant to access the raw content as it was loaded.",
            "itemtype": "property",
            "name": "_rawResponse",
            "type": "{String|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3729,
            "description": "A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.",
            "itemtype": "property",
            "name": "ACTIVEX_VERSIONS",
            "type": "{Array}",
            "since": "0.4.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3746,
            "description": "Look up the loaded result.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Return a raw result instead of a formatted result. This applies to content\nloaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\nreturned instead.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A result object containing the content that was loaded, such as:\n<ul>\n     <li>An image tag (&lt;image /&gt;) for images</li>\n     <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n     HTML head.</li>\n     <li>A style tag for CSS (&lt;style /&gt;)</li>\n     <li>Raw text for TEXT</li>\n     <li>A formatted JavaScript object defined by JSON</li>\n     <li>An XML document</li>\n     <li>An binary arraybuffer loaded by XHR</li>\n</ul>\nNote that if a raw result is requested, but not found, the result will be returned instead.",
                "type": "Object"
            },
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3836,
            "description": "Get all the response headers from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\nfor Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\nexcluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\npair.",
            "itemtype": "method",
            "name": "getAllResponseHeaders",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3855,
            "description": "Get a specific response header from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\nheader, unless the field name is Set-Cookie or Set-Cookie2.",
            "itemtype": "method",
            "name": "getResponseHeader",
            "params": [
                {
                    "name": "header",
                    "description": "The header name to retrieve.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3874,
            "description": "The XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3889,
            "description": "The XHR request has reported a load start.",
            "itemtype": "method",
            "name": "_handleLoadStart",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR loadStart event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3900,
            "description": "The XHR request has reported an abort event.",
            "itemtype": "method",
            "name": "handleAbort",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR abort event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3911,
            "description": "The XHR request has reported an error event.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3922,
            "description": "The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\nevent, so we must monitor the readyStateChange to determine if the file is loaded.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR readyStateChange event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3935,
            "description": "The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n<code>request.readyState == 4</code>. Only the first call to this method will be processed.",
            "itemtype": "method",
            "name": "_handleLoad",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR load event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3975,
            "description": "The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\ncallback.",
            "itemtype": "method",
            "name": "_handleTimeout",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR timeout event. This is occasionally null when called by the backup setTimeout.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 3989,
            "description": "Determine if there is an error in the current load. This checks the status of the request for problem codes. Note\nthat this does not check for an actual response. Currently, it only checks for 404 or 0 error code.",
            "itemtype": "method",
            "name": "_checkError",
            "return": {
                "description": "If the request status returns an error code.",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4008,
            "description": "Validate the response. Different browsers have different approaches, some of which throw errors when accessed\nin other browsers. If there is no response, the <code>_response</code> property will remain null.",
            "itemtype": "method",
            "name": "_getResponse",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4042,
            "description": "Create an XHR request. Depending on a number of factors, we get totally different results.\n<ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n     <li>XMLHttpRequest are created when available.</li>\n     <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n     <li>Text requests override the mime type if possible</li>\n     <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n     <li>Binary loads set the response type to \"arraybuffer\"</li></ol>",
            "itemtype": "method",
            "name": "_createXHR",
            "params": [
                {
                    "name": "item",
                    "description": "The requested item that is being loaded.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If an XHR request or equivalent was successfully created.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4137,
            "description": "A request has completed (or failed or canceled), and needs to be disposed.",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4359,
            "description": "An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_plugins",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4368,
            "description": "An object hash of callbacks that are fired for each file type before the file is loaded, giving plugins the\nability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\nmethod for more information.",
            "itemtype": "property",
            "name": "_typeCallbacks",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4378,
            "description": "An object hash of callbacks that are fired for each file extension before the file is loaded, giving plugins the\nability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\nmethod for more information.",
            "itemtype": "property",
            "name": "_extensionCallbacks",
            "type": "{null}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4388,
            "description": "The next preload queue to process when this one is complete. If an error is thrown in the current queue, and\n{{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}} is `true`, the next queue will not be processed.",
            "itemtype": "property",
            "name": "next",
            "type": "{LoadQueue}",
            "default": "null",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4397,
            "description": "Ensure loaded scripts \"complete\" in the order they are specified. Loaded scripts are added to the document head\nonce they are loaded. Scripts loaded via tags will load one-at-a-time when this property is `true`, whereas\nscripts loaded using XHR can load in any order, but will \"finish\" and be added to the document in the order\nspecified.\n\nAny items can be set to load in order by setting the {{#crossLink \"maintainOrder:property\"}}{{/crossLink}}\nproperty on the load item, or by ensuring that only one connection can be open at a time using\n{{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Note that when the `maintainScriptOrder` property\nis set to `true`, scripts items are automatically set to `maintainOrder=true`, and changing the\n`maintainScriptOrder` to `false` during a load will not change items already in a queue.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.setMaxConnections(3); // Set a higher number to load multiple items at once\n     queue.maintainScriptOrder = true; // Ensure scripts are loaded in order\n     queue.loadManifest([\n         \"script1.js\",\n         \"script2.js\",\n         \"image.png\", // Load any time\n         {src: \"image2.png\", maintainOrder: true} // Will wait for script2.js\n         \"image3.png\",\n         \"script3.js\" // Will wait for image2.png before loading (or completing when loading with XHR)\n     ]);",
            "itemtype": "property",
            "name": "maintainScriptOrder",
            "type": "{Boolean}",
            "default": "true",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4429,
            "description": "Determines if the LoadQueue will stop processing the current queue when an error is encountered.",
            "itemtype": "property",
            "name": "stopOnError",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4437,
            "description": "The number of maximum open connections that a loadQueue tries to maintain. Please see\n{{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} for more information.",
            "itemtype": "property",
            "name": "_maxConnections",
            "type": "{Number}",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4447,
            "description": "An internal list of all the default Loaders that are included with PreloadJS. Before an item is loaded, the\navailable loader list is iterated, in the order they are included, and as soon as a loader indicates it can\nhandle the content, it will be selected. The default loader, ({{#crossLink \"TextLoader\"}}{{/crossLink}} is\nlast in the list, so it will be used if no other match is found. Typically, loaders will match based on the\n{{#crossLink \"LoadItem/type\"}}{{/crossLink}}, which is automatically determined using the file extension of\nthe {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}.\n\nLoaders can be removed from PreloadJS by simply not including them.\n\nCustom loaders installed using {{#crossLink \"registerLoader\"}}{{/crossLink}} will be prepended to this list\nso that they are checked first.",
            "itemtype": "property",
            "name": "_availableLoaders",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4480,
            "description": "The number of built in loaders, so they can't be removed by {{#crossLink \"unregisterLoader\"}}{{/crossLink}.",
            "itemtype": "property",
            "name": "_defaultLoaderLength",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4495,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4508,
            "description": "An internal initialization method, which is used for initial set up, but also to reset the LoadQueue.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "preferXHR",
                    "description": ""
                },
                {
                    "name": "basePath",
                    "description": ""
                },
                {
                    "name": "crossOrigin",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4519,
            "itemtype": "property",
            "name": "useXHR",
            "type": "{Boolean}",
            "readonly": "",
            "default": "true",
            "deprecated": true,
            "deprecationMessage": "Use preferXHR instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4528,
            "description": "Try and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\nloading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\nand plain text can not be loaded with tags, so it will default the the correct type instead of using the\nuser-defined type.",
            "type": "{Boolean}",
            "default": "true",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4542,
            "description": "Whether the queue is currently paused or not.",
            "itemtype": "property",
            "name": "_paused",
            "type": "{boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4550,
            "description": "A path that will be prepended on to the item's {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}. The\n`_basePath` property will only be used if an item's source is relative, and does not include a protocol such\nas `http://`, or a relative path such as `../`.",
            "itemtype": "property",
            "name": "_basePath",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "since": "0.3.1",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4561,
            "description": "An optional flag to set on images that are loaded using PreloadJS, which enables CORS support. Images loaded\ncross-domain by servers that support CORS require the crossOrigin flag to be loaded and interacted with by\na canvas. When loading locally, or with a server with no CORS support, this flag can cause other security issues,\nso it is recommended to only set it if you are sure the server supports it. Currently, supported values are \"\"\nand \"Anonymous\".",
            "itemtype": "property",
            "name": "_crossOrigin",
            "type": "{String}",
            "default": "\"\"",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4575,
            "description": "Determines if the loadStart event was dispatched already. This event is only fired one time, when the first\nfile is requested.",
            "itemtype": "property",
            "name": "_loadStartWasDispatched",
            "type": "{Boolean}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4585,
            "description": "Determines if there is currently a script loading. This helps ensure that only a single script loads at once when\nusing a script tag to do preloading.",
            "itemtype": "property",
            "name": "_currentlyLoadingScript",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4594,
            "description": "An array containing the currently downloading files.",
            "itemtype": "property",
            "name": "_currentLoads",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4602,
            "description": "An array containing the queued items that have not yet started downloading.",
            "itemtype": "property",
            "name": "_loadQueue",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4610,
            "description": "An array containing downloads that have not completed, so that the LoadQueue can be properly reset.",
            "itemtype": "property",
            "name": "_loadQueueBackup",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4618,
            "description": "An object hash of items that have finished downloading, indexed by the {{#crossLink \"LoadItem\"}}{{/crossLink}}\nid.",
            "itemtype": "property",
            "name": "_loadItemsById",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4627,
            "description": "An object hash of items that have finished downloading, indexed by {{#crossLink \"LoadItem\"}}{{/crossLink}}\nsource.",
            "itemtype": "property",
            "name": "_loadItemsBySrc",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4636,
            "description": "An object hash of loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadedResults",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4644,
            "description": "An object hash of un-parsed loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadedRawResults",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4652,
            "description": "The number of items that have been requested. This helps manage an overall progress without knowing how large\nthe files are before they are downloaded. This does not include items inside of loaders such as the\n{{#crossLink \"ManifestLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_numItems",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4663,
            "description": "The number of items that have completed loaded. This helps manage an overall progress without knowing how large\nthe files are before they are downloaded.",
            "itemtype": "property",
            "name": "_numItemsLoaded",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4673,
            "description": "A list of scripts in the order they were requested. This helps ensure that scripts are \"completed\" in the right\norder.",
            "itemtype": "property",
            "name": "_scriptOrder",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4682,
            "description": "A list of scripts that have been loaded. Items are added to this list as <code>null</code> when they are\nrequested, contain the loaded item if it has completed, but not been dispatched to the user, and <code>true</true>\nonce they are complete and have been dispatched.",
            "itemtype": "property",
            "name": "_loadedScripts",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4692,
            "description": "The last progress amount. This is used to suppress duplicate progress events.",
            "itemtype": "property",
            "name": "_lastProgress",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4704,
            "description": "The time in milliseconds to assume a load has failed. An {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\nevent is dispatched if the timeout is reached before any data is received.",
            "itemtype": "property",
            "name": "loadTimeout",
            "type": "{Number}",
            "default": "8000",
            "static": 1,
            "since": "0.4.1",
            "deprecated": true,
            "deprecationMessage": "In favour of {{#crossLink \"LoadItem/LOAD_TIMEOUT_DEFAULT:property}}{{/crossLink}} property.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4716,
            "description": "The time in milliseconds to assume a load has failed.",
            "itemtype": "property",
            "name": "LOAD_TIMEOUT",
            "type": "{Number}",
            "default": "0",
            "deprecated": true,
            "deprecationMessage": "in favor of the {{#crossLink \"LoadQueue/loadTimeout:property\"}}{{/crossLink}} property.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4726,
            "itemtype": "property",
            "name": "BINARY",
            "type": "{String}",
            "default": "binary",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4735,
            "itemtype": "property",
            "name": "CSS",
            "type": "{String}",
            "default": "css",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4744,
            "itemtype": "property",
            "name": "IMAGE",
            "type": "{String}",
            "default": "image",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4753,
            "itemtype": "property",
            "name": "JAVASCRIPT",
            "type": "{String}",
            "default": "javascript",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4762,
            "itemtype": "property",
            "name": "JSON",
            "type": "{String}",
            "default": "json",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4771,
            "itemtype": "property",
            "name": "JSONP",
            "type": "{String}",
            "default": "jsonp",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4780,
            "itemtype": "property",
            "name": "MANIFEST",
            "type": "{String}",
            "default": "manifest",
            "static": 1,
            "since": "0.4.1",
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4790,
            "itemtype": "property",
            "name": "SOUND",
            "type": "{String}",
            "default": "sound",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4799,
            "itemtype": "property",
            "name": "VIDEO",
            "type": "{String}",
            "default": "video",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4808,
            "itemtype": "property",
            "name": "SVG",
            "type": "{String}",
            "default": "svg",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4817,
            "itemtype": "property",
            "name": "TEXT",
            "type": "{String}",
            "default": "text",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4826,
            "itemtype": "property",
            "name": "XML",
            "type": "{String}",
            "default": "xml",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4835,
            "itemtype": "property",
            "name": "POST",
            "type": "{string}",
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4842,
            "itemtype": "property",
            "name": "GET",
            "type": "{string}",
            "deprecated": true,
            "deprecationMessage": "Use the AbstractLoader {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4850,
            "description": "This event is fired when an individual file has loaded, and been processed.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a `src` property.",
                    "type": "Object"
                },
                {
                    "name": "result",
                    "description": "The HTML tag or parsed result of the loaded item.",
                    "type": "Object"
                },
                {
                    "name": "rawResult",
                    "description": "The unprocessed result, usually the raw text or binary data before it is converted\nto a usable object.",
                    "type": "Object"
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4864,
            "description": "This {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when an an individual file's progress changes.",
            "itemtype": "event",
            "name": "fileprogress",
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4870,
            "description": "This event is fired when an individual file starts to load.",
            "itemtype": "event",
            "name": "filestart",
            "params": [
                {
                    "name": "The",
                    "description": "object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a property.",
                    "type": "Object"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4880,
            "description": "Although it extends {{#crossLink \"AbstractLoader\"}}{{/crossLink}}, the `initialize` event is never fired from\na LoadQueue instance.",
            "itemtype": "event",
            "name": "initialize",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4888,
            "description": "Register a custom loaders class. New loaders are given precedence over loaders added earlier and default loaders.\nIt is recommended that loaders extend {{#crossLink \"AbstractLoader\"}}{{/crossLink}}. Loaders can only be added\nonce, and will be prepended to the list of available loaders.",
            "itemtype": "method",
            "name": "registerLoader",
            "params": [
                {
                    "name": "loader",
                    "description": "The AbstractLoader class to add.",
                    "type": "Function|AbstractLoader"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4906,
            "description": "Remove a custom loader added using {{#crossLink \"registerLoader\"}}{{/crossLink}}. Only custom loaders can be\nunregistered, the default loaders will always be available.",
            "itemtype": "method",
            "name": "unregisterLoader",
            "params": [
                {
                    "name": "loader",
                    "description": "The AbstractLoader class to remove",
                    "type": "Function|AbstractLoader"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4919,
            "itemtype": "method",
            "name": "setUseXHR",
            "params": [
                {
                    "name": "value",
                    "description": "The new useXHR value to set.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The new useXHR value. If XHR is not supported by the browser, this will return false, even if\nthe provided value argument was true.",
                "type": "Boolean"
            },
            "since": "0.3.0",
            "deprecated": true,
            "deprecationMessage": "use the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property, or the\n{{#crossLink \"LoadQueue/setUseXHR\"}}{{/crossLink}} method instead.",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4932,
            "description": "Change the {{#crossLink \"preferXHR:property\"}}{{/crossLink}} value. Note that if this is set to `true`, it may\nfail, or be ignored depending on the browser's capabilities and the load type.",
            "itemtype": "method",
            "name": "setPreferXHR",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The value of {{#crossLink \"preferXHR\"}}{{/crossLink}} that was successfully set.",
                "type": "Boolean"
            },
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4947,
            "description": "Stops all queued and loading items, and clears the queue. This also removes all internal references to loaded\ncontent, and allows the queue to be used again.",
            "itemtype": "method",
            "name": "removeAll",
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 4957,
            "description": "Stops an item from being loaded, and removes it from the queue. If nothing is passed, all items are removed.\nThis also removes internal references to loaded item(s).\n\n<h4>Example</h4>\n\n     queue.loadManifest([\n         {src:\"test.png\", id:\"png\"},\n         {src:\"test.jpg\", id:\"jpg\"},\n         {src:\"test.mp3\", id:\"mp3\"}\n     ]);\n     queue.remove(\"png\"); // Single item by ID\n     queue.remove(\"png\", \"test.jpg\"); // Items as arguments. Mixed id and src.\n     queue.remove([\"test.png\", \"jpg\"]); // Items in an Array. Mixed id and src.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "idsOrUrls",
                    "description": "The id or ids to remove from this queue. You can pass an item, an array of\nitems, or multiple items as arguments.",
                    "type": "String | Array",
                    "multiple": true
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5043,
            "description": "Stops all open loads, destroys any loaded items, and resets the queue, so all items can\nbe reloaded again by calling {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}}. Items are not removed from the\nqueue. To remove items use the {{#crossLink \"LoadQueue/remove\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/removeAll\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "reset",
            "since": "0.3.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5066,
            "description": "Register a plugin. Plugins can map to load types (sound, image, etc), or specific extensions (png, mp3, etc).\nCurrently, only one plugin can exist per type/extension.\n\nWhen a plugin is installed, a <code>getPreloadHandlers()</code> method will be called on it. For more information\non this method, check out the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method in the\n{{#crossLink \"SamplePlugin\"}}{{/crossLink}} class.\n\nBefore a file is loaded, a matching plugin has an opportunity to modify the load. If a `callback` is returned\nfrom the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method, it will be invoked first, and its\nresult may cancel or modify the item. The callback method can also return a `completeHandler` to be fired when\nthe file is loaded, or a `tag` object, which will manage the actual download. For more information on these\nmethods, check out the {{#crossLink \"SamplePlugin/preloadHandler\"}}{{/crossLink}} and {{#crossLink \"SamplePlugin/fileLoadHandler\"}}{{/crossLink}}\nmethods on the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "installPlugin",
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install.",
                    "type": "Function"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5108,
            "description": "Set the maximum number of concurrent connections. Note that browsers and servers may have a built-in maximum\nnumber of open connections, so any additional connections may remain in a pending state until the browser\nopens the connection. When loading scripts using tags, and when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}}\nis `true`, only one script is loaded at a time due to browser limitations.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.setMaxConnections(10); // Allow 10 concurrent loads",
            "itemtype": "method",
            "name": "setMaxConnections",
            "params": [
                {
                    "name": "value",
                    "description": "The number of concurrent loads to allow. By default, only a single connection per LoadQueue\nis open at any time.",
                    "type": "Number"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5130,
            "description": "Load a single file. To add multiple files at once, use the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nmethod.\n\nFiles are always appended to the current queue, so this method can be used multiple times to add files.\nTo clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "loadFile",
            "params": [
                {
                    "name": "file",
                    "description": "The file object or path to load. A file can be either\n<ul>\n    <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n    <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n    <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n    in the background.</li>\n</ul>",
                    "type": "LoadItem|Object|String"
                },
                {
                    "name": "loadNow",
                    "description": "Kick off an immediate load (true) or wait for a load call (false). The default\nvalue is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}}, and the value is\n`true`, the queue will resume automatically.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "basePath",
                    "description": "A base path that will be prepended to each file. The basePath argument overrides the\npath specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}},\nits files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\nThis parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\nconstructor, or a `path` property in a manifest definition.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5168,
            "description": "Load an array of files. To load a single file, use the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} method.\nThe files in the manifest are requested in the same order, but may complete in a different order if the max\nconnections are set above 1 using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Scripts will load\nin the right order as long as {{#crossLink \"LoadQueue/maintainScriptOrder\"}}{{/crossLink}} is true (which is\ndefault).\n\nFiles are always appended to the current queue, so this method can be used multiple times to add files.\nTo clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.",
            "itemtype": "method",
            "name": "loadManifest",
            "params": [
                {
                    "name": "manifest",
                    "description": "An list of files to load. The loadManifest call supports four types of\nmanifests:\n<ol>\n    <li>A string path, which points to a manifest file, which is a JSON file that contains a \"manifest\" property,\n    which defines the list of files to load, and can optionally contain a \"path\" property, which will be\n    prepended to each file in the list.</li>\n    <li>An object which defines a \"src\", which is a JSON or JSONP file. A \"callback\" can be defined for JSONP\n    file. The JSON/JSONP file should contain a \"manifest\" property, which defines the list of files to load,\n    and can optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n    <li>An object which contains a \"manifest\" property, which defines the list of files to load, and can\n    optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n    <li>An Array of files to load.</li>\n</ol>\n\nEach \"file\" in a manifest can be either:\n<ul>\n    <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n    <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n    <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n    in the background.</li>\n</ul>",
                    "type": "Array|String|Object"
                },
                {
                    "name": "loadNow",
                    "description": "Kick off an immediate load (true) or wait for a load call (false). The default\nvalue is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} and this value is\n`true`, the queue will resume automatically.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "basePath",
                    "description": "A base path that will be prepended to each file. The basePath argument overrides the\npath specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"LoadQueue/MANIFEST:property\"}}{{/crossLink}},\nits files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\nThis parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\nconstructor, or a `path` property in a manifest definition.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5268,
            "description": "Start a LoadQueue that was created, but not automatically started.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5276,
            "description": "Look up a {{#crossLink \"LoadItem\"}}{{/crossLink}} using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\" was\nsupplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n`basePath` will not be part of the ID.",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "value",
                    "description": "The <code>id</code> or <code>src</code> of the load item.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The load item that was initially requested using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\nevent as the `item` parameter.",
                "type": "Object"
            },
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5290,
            "description": "Look up a loaded result using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\"\nwas supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n`basePath` will not be part of the ID.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "value",
                    "description": "The <code>id</code> or <code>src</code> of the load item.",
                    "type": "String"
                },
                {
                    "name": "rawResult",
                    "description": "Return a raw result instead of a formatted result. This applies to content\nloaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\nreturned instead.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A result object containing the content that was loaded, such as:\n<ul>\n     <li>An image tag (&lt;image /&gt;) for images</li>\n     <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts are automatically added to the HTML\n     DOM.</li>\n     <li>A style tag for CSS (&lt;style /&gt; or &lt;link &gt;)</li>\n     <li>Raw text for TEXT</li>\n     <li>A formatted JavaScript object defined by JSON</li>\n     <li>An XML document</li>\n     <li>A binary arraybuffer loaded by XHR</li>\n     <li>An audio tag (&lt;audio &gt;) for HTML audio. Note that it is recommended to use SoundJS APIs to play\n     loaded audio. Specifically, audio loaded by Flash and WebAudio will return a loader object using this method\n     which can not be used to play audio back.</li>\n</ul>\nThis object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event as the 'item`\nparameter. Note that if a raw result is requested, but not found, the result will be returned instead.",
                "type": "Object"
            },
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5328,
            "description": "Generate an list of items loaded by this queue.",
            "itemtype": "method",
            "name": "getItems",
            "params": [
                {
                    "name": "loaded",
                    "description": "Determines if only items that have been loaded should be returned. If false, in-progress\nand failed load items will also be included.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "A list of objects that have been loaded. Each item includes the {{#crossLink \"LoadItem\"}}{{/crossLink}},\nresult, and rawResult.",
                "type": "Array"
            },
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5354,
            "description": "Pause or resume the current load. Active loads will not be cancelled, but the next items in the queue will not\nbe processed when active loads complete. LoadQueues are not paused by default.\n\nNote that if new items are added to the queue using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}, a paused queue will be resumed, unless the `loadNow`\nargument is `false`.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Whether the queue should be paused or not.",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5371,
            "description": "Close the active queue. Closing a queue completely empties the queue, and prevents any remaining items from\nstarting to download. Note that currently any active loads will remain open, and events may be processed.\n\nTo stop and restart a queue, use the {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} method instead.",
            "itemtype": "method",
            "name": "close",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5390,
            "description": "Add an item to the queue. Items are formatted into a usable object containing all the properties necessary to\nload the content. The load queue is populated with the loader instance that handles preloading, and not the load\nitem that was passed in by the user. To look up the load item by id or src, use the {{#crossLink \"LoadQueue.getItem\"}}{{/crossLink}}\nmethod.",
            "itemtype": "method",
            "name": "_addItem",
            "params": [
                {
                    "name": "value",
                    "description": "The item to add to the queue.",
                    "type": "String|Object"
                },
                {
                    "name": "path",
                    "description": "An optional path prepended to the `src`. The path will only be prepended if the src is\nrelative, and does not start with a protocol such as `http://`, or a path like `../`. If the LoadQueue was\nprovided a {{#crossLink \"_basePath\"}}{{/crossLink}}, then it will optionally be prepended after.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "basePath",
                    "description": "<strong>Deprecated</strong>An optional basePath passed into a {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} call. This parameter will be removed in a future tagged\nversion.",
                    "type": "String",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5434,
            "description": "Create a refined {{#crossLink \"LoadItem\"}}{{/crossLink}}, which contains all the required properties. The type of\nitem is determined by browser support, requirements based on the file type, and developer settings. For example,\nXHR is only used for file types that support it in new browsers.\n\nBefore the item is returned, any plugins registered to handle the type or extension will be fired, which may\nalter the load item.",
            "itemtype": "method",
            "name": "_createLoadItem",
            "params": [
                {
                    "name": "value",
                    "description": "The item that needs to be preloaded.",
                    "type": "String | Object | HTMLAudioElement | HTMLImageElement"
                },
                {
                    "name": "path",
                    "description": "A path to prepend to the item's source. Sources beginning with http:// or similar will\nnot receive a path. Since PreloadJS 0.4.1, the src will be modified to include the `path` and {{#crossLink \"LoadQueue/_basePath:property\"}}{{/crossLink}}\nwhen it is added.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "basePath",
                    "description": "<strong>Deprectated</strong> A base path to prepend to the items source in addition to\nthe path argument.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The loader instance that will be used.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5545,
            "description": "Create a loader for a load item.",
            "itemtype": "method",
            "name": "_createLoader",
            "params": [
                {
                    "name": "item",
                    "description": "A formatted load item that can be used to generate a loader.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A loader that can be used to load content.",
                "type": "AbstractLoader"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5571,
            "description": "Load the next item in the queue. If the queue is empty (all items have been loaded), then the complete event\nis processed. The queue will \"fill up\" any empty slots, up to the max connection specified using\n{{#crossLink \"LoadQueue.setMaxConnections\"}}{{/crossLink}} method. The only exception is scripts that are loaded\nusing tags, which have to be loaded one at a time to maintain load order.",
            "itemtype": "method",
            "name": "_loadNext",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5621,
            "description": "Begin loading an item. Event listeners are not added to the loaders until the load starts.",
            "itemtype": "method",
            "name": "_loadItem",
            "params": [
                {
                    "name": "loader",
                    "description": "The loader instance to start. Currently, this will be an XHRLoader or TagLoader.",
                    "type": "AbstractLoader"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5638,
            "description": "The callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\nevents.",
            "params": [
                {
                    "name": "event",
                    "description": "The {{#crossLink \"AbstractLoader/fileload:event\"}}{{/crossLink}} event from the loader.",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5651,
            "description": "The callback that is fired when a loader encounters an error from an internal file load operation. This enables\nloaders like M",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5662,
            "description": "The callback that is fired when a loader encounters an error. The queue will continue loading unless {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}}\nis set to `true`.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The error event, containing relevant error information.",
                    "type": "ErrorEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5690,
            "description": "An item has finished loading. We can assume that it is totally loaded, has been parsed for immediate use, and\nis available as the \"result\" property on the load item. The raw text result for a parsed item (such as JSON, XML,\nCSS, JavaScript, etc) is available as the \"rawResult\" property, and can also be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_handleFileComplete",
            "params": [
                {
                    "name": "event",
                    "description": "The event object from the loader.",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5723,
            "description": "Some loaders might load additional content, other than the item they were passed (such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}).\nAny items exposed by the loader using {{#crossLink \"AbstractLoader/getLoadItems\"}}{{/crossLink}} are added to the\nLoadQueue's look-ups, including {{#crossLink \"getItem\"}}{{/crossLink}} and {{#crossLink \"getResult\"}}{{/crossLink}}\nmethods.",
            "itemtype": "method",
            "name": "_saveLoadedItems",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5754,
            "description": "Flag an item as finished. If the item's order is being managed, then ensure that it is allowed to finish, and if\nso, trigger prior items to trigger as well.",
            "itemtype": "method",
            "name": "_finishOrderedItem",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                },
                {
                    "name": "loadFailed",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the item's order is being managed. This allows the caller to take an alternate\nbehaviour if it is.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5788,
            "description": "Ensure the scripts load and dispatch in the correct order. When using XHR, scripts are stored in an array in the\norder they were added, but with a \"null\" value. When they are completed, the value is set to the load item,\nand then when they are processed and dispatched, the value is set to `true`. This method simply\niterates the array, and ensures that any loaded items that are not preceded by a `null` value are\ndispatched.",
            "itemtype": "method",
            "name": "_checkScriptLoadOrder",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5821,
            "description": "A file has completed loading, and the LoadQueue can move on. This triggers the complete event, and kick-starts\nthe next item.",
            "itemtype": "method",
            "name": "_processFinishedLoad",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5844,
            "description": "Ensure items with `maintainOrder=true` that are before the specified item have loaded. This only applies to\nJavaScript items that are being loaded with a TagLoader, since they have to be loaded and completed <strong>before</strong>\nthe script can even be started, since it exist in the DOM while loading.",
            "itemtype": "method",
            "name": "_canStartLoad",
            "params": [
                {
                    "name": "loader",
                    "description": "The loader for the item",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "Whether the item can start a load or not.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5878,
            "description": "A load item is completed or was canceled, and needs to be removed from the LoadQueue.",
            "itemtype": "method",
            "name": "_removeLoadItem",
            "params": [
                {
                    "name": "loader",
                    "description": "A loader instance to remove.",
                    "type": "AbstractLoader"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5894,
            "description": "Remove unneeded references from a loader.",
            "params": [
                {
                    "name": "loader",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5907,
            "description": "An item has dispatched progress. Propagate that progress, and update the LoadQueue's overall progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The progress event from the item.",
                    "type": "ProgressEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5919,
            "description": "Overall progress has changed, so determine the new progress amount and dispatch it. This changes any time an\nitem dispatches progress or completes. Note that since we don't always know the actual filesize of items before\nthey are loaded. In this case, we define a \"slot\" for each item (1 item in 10 would get 10%), and then append\nloaded progress on top of the already-loaded items.\n\nFor example, if 5/10 items have loaded, and item 6 is 20% loaded, the total progress would be:\n<ul>\n     <li>5/10 of the items in the queue (50%)</li>\n     <li>plus 20% of item 6's slot (2%)</li>\n     <li>equals 52%</li>\n</ul>",
            "itemtype": "method",
            "name": "_updateProgress",
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5951,
            "description": "Clean out item results, to free them from memory. Mainly, the loaded item and results are cleared from internal\nhashes.",
            "itemtype": "method",
            "name": "_disposeItem",
            "params": [
                {
                    "name": "item",
                    "description": "The item that was passed in for preloading.",
                    "type": "LoadItem|Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5965,
            "description": "Dispatch a \"fileprogress\" {{#crossLink \"Event\"}}{{/crossLink}}. Please see the LoadQueue {{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendFileProgress",
            "params": [
                {
                    "name": "item",
                    "description": "The item that is being loaded.",
                    "type": "LoadItem|Object"
                },
                {
                    "name": "progress",
                    "description": "The amount the item has been loaded (between 0 and 1).",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 5991,
            "description": "Dispatch a fileload {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event for\ndetails on the event payload.",
            "itemtype": "method",
            "name": "_sendFileComplete",
            "params": [
                {
                    "name": "item",
                    "description": "The item that is being loaded.",
                    "type": "LoadItemObject"
                },
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6018,
            "description": "Dispatch a filestart {{#crossLink \"Event\"}}{{/crossLink}} immediately before a file starts to load. Please see\nthe {{#crossLink \"LoadQueue/filestart:event\"}}{{/crossLink}} event for details on the event payload.",
            "itemtype": "method",
            "name": "_sendFileStart",
            "params": [
                {
                    "name": "item",
                    "description": "The item that is being loaded.",
                    "type": "LoadItem|Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.LoadQueue",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6063,
            "description": "Determines if the loader can load a specific item. This loader loads items that are of type {{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}},\nbut is also the default loader if a file type can not be determined.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.TextLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6105,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.BinaryLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6118,
            "description": "Before the item loads, set the response type to \"arraybuffer\"",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.BinaryLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6173,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.CSSLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6186,
            "description": "The result formatter for CSS files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLLinkElement|HTMLStyleElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.CSSLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6265,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/IMAGE:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6294,
            "description": "Before the item loads, set its mimeType and responseType.",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6309,
            "description": "The result formatter for Image files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLImageElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6320,
            "description": "The asynchronous image formatter function. This is required because images have\na short delay before they are ready.",
            "itemtype": "method",
            "name": "_formatImage",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The method to call when the result has finished formatting",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The method to call if an error occurs during formatting",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6357,
            "description": "Clean up the ObjectURL, the tag is done with it. Note that this function is run\nas an event listener without a proxy/closure, as it doesn't require it - so do not\ninclude any functionality that requires scope without changing it.",
            "itemtype": "method",
            "name": "_cleanUpURL",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ImageLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6407,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.JavaScriptLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6420,
            "description": "The result formatter for JavaScript files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLLinkElement|HTMLStyleElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.JavaScriptLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6469,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.JSONLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6482,
            "description": "The result formatter for JSON files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLLinkElement|HTMLStyleElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6566,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6584,
            "description": "Loads the JSONp file.  Because of the unique loading needs of JSONp\nwe don't use the AbstractLoader.load() method.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6617,
            "description": "Handle the JSONP callback, which is a public method defined on `window`.",
            "itemtype": "method",
            "name": "_handleLoad",
            "params": [
                {
                    "name": "data",
                    "description": "The formatted JSON data.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6630,
            "description": "The tag request has not loaded within the time specfied in loadTimeout.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6641,
            "description": "Clean up the JSONP load. This clears out the callback and script tag that this loader creates.",
            "itemtype": "method",
            "name": "_dispose",
            "access": "private",
            "tagname": "",
            "class": "Graphics.JSONPLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6699,
            "description": "An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}},\nused to pass plugins to new LoadQueues that may be created.",
            "itemtype": "property",
            "name": "_plugins",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6711,
            "description": "An internal {{#crossLink \"LoadQueue\"}}{{/crossLink}} that loads the contents of the manifest.",
            "itemtype": "property",
            "name": "_manifestQueue",
            "type": "{LoadQueue}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6724,
            "description": "The amount of progress that the manifest itself takes up.",
            "itemtype": "property",
            "name": "MANIFEST_PROGRESS",
            "type": "{number}",
            "default": "0.25 (25%)",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6735,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6785,
            "description": "Create and load the manifest items once the actual manifest has been loaded.",
            "itemtype": "method",
            "name": "_loadManifest",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6807,
            "description": "An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.",
            "itemtype": "method",
            "name": "_handleManifestFileLoad",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6818,
            "description": "The manifest has completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n{{#crossLink \"Event\"}}{{/crossLink}} from the ManifestLoader.",
            "itemtype": "method",
            "name": "_handleManifestComplete",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6830,
            "description": "The manifest has reported progress.",
            "itemtype": "method",
            "name": "_handleManifestProgress",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ProgressEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6841,
            "description": "The manifest has reported an error with one of the files.",
            "itemtype": "method",
            "name": "_handleManifestError",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ErrorEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.ManifestLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6899,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SoundLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6960,
            "description": "Create a new video tag",
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.VideoLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 6971,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/VIDEO:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.VideoLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7023,
            "description": "An internal queue which loads the SpriteSheet's images.",
            "itemtype": "method",
            "name": "_manifestQueue",
            "type": "{LoadQueue}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7036,
            "description": "The amount of progress that the manifest itself takes up.",
            "itemtype": "property",
            "name": "SPRITESHEET_PROGRESS",
            "type": "{number}",
            "default": "0.25 (25%)",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7047,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7093,
            "description": "Create and load the images once the SpriteSheet JSON has been loaded.",
            "itemtype": "method",
            "name": "_loadManifest",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7110,
            "description": "An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.",
            "itemtype": "method",
            "name": "_handleManifestFileLoad",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7125,
            "description": "The images have completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n{{#crossLink \"Event\"}}{{/crossLink}} from the SpriteSheetLoader.",
            "itemtype": "method",
            "name": "_handleManifestComplete",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7138,
            "description": "The images {{#crossLink \"LoadQueue\"}}{{/crossLink}} has reported progress.",
            "itemtype": "method",
            "name": "_handleManifestProgress",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ProgressEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7149,
            "description": "An image has reported an error.",
            "itemtype": "method",
            "name": "_handleManifestError",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "ErrorEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.SpriteSheetLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7204,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SVGLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7217,
            "description": "The result formatter for SVG files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.SVGLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7274,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.XMLLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js",
            "line": 7287,
            "description": "The result formatter for XML files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "XMLDocument"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XMLLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 53,
            "description": "A Media object used to determine if src exists and to get duration",
            "itemtype": "property",
            "name": "_media",
            "type": "{Media}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 61,
            "description": "A time counter that triggers timeout if loading takes too long",
            "itemtype": "property",
            "name": "_loadTime",
            "type": "{number}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 69,
            "description": "The frequency to fire the loading timer until duration can be retrieved",
            "itemtype": "property",
            "name": "_TIMER_FREQUENCY",
            "type": "{number}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 94,
            "description": "Fires if audio cannot seek, indicating that src does not exist.",
            "itemtype": "method",
            "name": "_mediaErrorHandler",
            "params": [
                {
                    "name": "error",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 105,
            "description": "will attempt to get duration of audio until successful or time passes this._item.loadTimeout",
            "itemtype": "method",
            "name": "_getMediaDuration",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 153,
            "description": "Sets the playAudioWhenScreenIsLocked property for play calls on iOS devices.",
            "itemtype": "property",
            "name": "playWhenScreenLocked",
            "type": "{boolean}",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 161,
            "description": "Used to approximate the playback position by storing the number of milliseconds elapsed since\n1 January 1970 00:00:00 UTC when playing\nNote that if js clock is out of sync with Media playback, this will become increasingly inaccurate.",
            "itemtype": "property",
            "name": "_playStartTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 171,
            "description": "A TimeOut used to trigger the end and possible loop of audio sprites.",
            "itemtype": "property",
            "name": "_audioSpriteTimeout",
            "type": "{null}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 179,
            "description": "Boolean value that indicates if we are using an audioSprite",
            "itemtype": "property",
            "name": "_audioSprite",
            "type": "{boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 205,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 215,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 231,
            "description": "Maps to <a href=\"http://plugins.cordova.io/#/package/org.apache.cordova.media\" target=\"_blank\">Media.getCurrentPosition</a>,\nwhich is curiously asynchronus and requires a callback.",
            "itemtype": "method",
            "name": "getCurrentPosition",
            "params": [
                {
                    "name": "mediaSuccess",
                    "description": "The callback that is passed the current position in seconds.",
                    "type": "Method"
                },
                {
                    "name": "mediaError",
                    "description": "(Optional) The callback to execute if an error occurs.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 247,
            "description": "media object has failed and likely will never work",
            "itemtype": "method",
            "name": "_handleMediaError",
            "params": [
                {
                    "name": "error",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 303,
            "description": "Synchronizes the best guess position with the actual current position.",
            "itemtype": "method",
            "name": "_updatePausePos",
            "params": [
                {
                    "name": "pos",
                    "description": "The current position in seconds",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 437,
            "description": "Sets a default playAudioWhenScreenIsLocked property for play calls on iOS devices.\nIndividual SoundInstances can alter the default with {{#crossLink \"CordovaAudioSoundInstance/playWhenScreenLocked\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "playWhenScreenLocked",
            "type": "{boolean}",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 446,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"CordovaAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\nmethod. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for an overview of all\nof the available properties.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 459,
            "description": "Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\nbrowsers, but is disabled in iOS because of its limitations.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 471,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 516,
            "description": "Get the duration for a src.  Intended for internal use by CordovaAudioSoundInstance.",
            "itemtype": "method",
            "name": "getSrcDuration",
            "params": [
                {
                    "name": "src",
                    "description": ""
                }
            ],
            "return": {
                "description": "The duration of the src or null if it does not exist",
                "type": "Number"
            },
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 552,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js",
            "line": 561,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.min.js",
            "line": 13,
            "description": "SoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 53,
            "description": "A Media object used to determine if src exists and to get duration",
            "itemtype": "property",
            "name": "_media",
            "type": "{Media}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 61,
            "description": "A time counter that triggers timeout if loading takes too long",
            "itemtype": "property",
            "name": "_loadTime",
            "type": "{number}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 69,
            "description": "The frequency to fire the loading timer until duration can be retrieved",
            "itemtype": "property",
            "name": "_TIMER_FREQUENCY",
            "type": "{number}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 94,
            "description": "Fires if audio cannot seek, indicating that src does not exist.",
            "itemtype": "method",
            "name": "_mediaErrorHandler",
            "params": [
                {
                    "name": "error",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 105,
            "description": "will attempt to get duration of audio until successful or time passes this._item.loadTimeout",
            "itemtype": "method",
            "name": "_getMediaDuration",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 153,
            "description": "Sets the playAudioWhenScreenIsLocked property for play calls on iOS devices.",
            "itemtype": "property",
            "name": "playWhenScreenLocked",
            "type": "{boolean}",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 161,
            "description": "Used to approximate the playback position by storing the number of milliseconds elapsed since\n1 January 1970 00:00:00 UTC when playing\nNote that if js clock is out of sync with Media playback, this will become increasingly inaccurate.",
            "itemtype": "property",
            "name": "_playStartTime",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 171,
            "description": "A TimeOut used to trigger the end and possible loop of audio sprites.",
            "itemtype": "property",
            "name": "_audioSpriteTimeout",
            "type": "{null}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 179,
            "description": "Boolean value that indicates if we are using an audioSprite",
            "itemtype": "property",
            "name": "_audioSprite",
            "type": "{boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 205,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 215,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 231,
            "description": "Maps to <a href=\"http://plugins.cordova.io/#/package/org.apache.cordova.media\" target=\"_blank\">Media.getCurrentPosition</a>,\nwhich is curiously asynchronus and requires a callback.",
            "itemtype": "method",
            "name": "getCurrentPosition",
            "params": [
                {
                    "name": "mediaSuccess",
                    "description": "The callback that is passed the current position in seconds.",
                    "type": "Method"
                },
                {
                    "name": "mediaError",
                    "description": "(Optional) The callback to execute if an error occurs.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 247,
            "description": "media object has failed and likely will never work",
            "itemtype": "method",
            "name": "_handleMediaError",
            "params": [
                {
                    "name": "error",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 303,
            "description": "Synchronizes the best guess position with the actual current position.",
            "itemtype": "method",
            "name": "_updatePausePos",
            "params": [
                {
                    "name": "pos",
                    "description": "The current position in seconds",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.CordovaAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 437,
            "description": "Sets a default playAudioWhenScreenIsLocked property for play calls on iOS devices.\nIndividual SoundInstances can alter the default with {{#crossLink \"CordovaAudioSoundInstance/playWhenScreenLocked\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "playWhenScreenLocked",
            "type": "{boolean}",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 446,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"CordovaAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\nmethod. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for an overview of all\nof the available properties.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 459,
            "description": "Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\nbrowsers, but is disabled in iOS because of its limitations.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 471,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 516,
            "description": "Get the duration for a src.  Intended for internal use by CordovaAudioSoundInstance.",
            "itemtype": "method",
            "name": "getSrcDuration",
            "params": [
                {
                    "name": "src",
                    "description": ""
                }
            ],
            "return": {
                "description": "The duration of the src or null if it does not exist",
                "type": "Number"
            },
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 552,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js",
            "line": 561,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.CordovaAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.min.js",
            "line": 13,
            "description": "SoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 836,
            "description": "ID used to facilitate communication with flash.\nNot doc'd because this should not be altered externally",
            "itemtype": "property",
            "name": "flashId",
            "type": "{String}",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 853,
            "description": "A reference to the Flash instance that gets created.",
            "itemtype": "property",
            "name": "flash",
            "type": "{Object | Embed}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 861,
            "description": "A list of loader instances that tried to load before _flash was set",
            "itemtype": "property",
            "name": "_preloadInstances",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 869,
            "description": "Set the Flash instance on the class, and start loading on any instances that had load called\nbefore flash was ready",
            "itemtype": "method",
            "name": "setFlash",
            "params": [
                {
                    "name": "flash",
                    "description": "Flash instance that handles loading and playback"
                }
            ],
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 897,
            "description": "called from flash when loading has progress",
            "itemtype": "method",
            "name": "handleProgress",
            "params": [
                {
                    "name": "loaded",
                    "description": ""
                },
                {
                    "name": "total",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 908,
            "description": "Called from Flash when sound is loaded.  Set our ready state and fire callbacks / events",
            "itemtype": "method",
            "name": "handleComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 918,
            "description": "Receive error event from flash and pass it to callback.",
            "itemtype": "method",
            "name": "handleError",
            "params": [
                {
                    "name": "error",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 970,
            "description": "ID used to facilitate communication with flash.\nNot doc'd because this should not be altered externally\n#property flashId",
            "type": "{String}",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 988,
            "description": "A reference to the Flash instance that gets created.\n#property flash",
            "type": "{Object | Embed}",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 995,
            "description": "A list of loader instances that tried to load before _flash was set\n#property _preloadInstances",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1003,
            "description": "Set the Flash instance on the class, and start loading on any instances that had load called\nbefore flash was ready\n#method setFlash",
            "params": [
                {
                    "name": "flash",
                    "description": "Flash instance that handles loading and playback"
                }
            ],
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1119,
            "description": "Called from Flash.  Lets us know flash has finished playing a sound.\n#method handleSoundFinished",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1129,
            "description": "Called from Flash.  Lets us know that flash has played a sound to completion and is looping it.\n#method handleSoundLoop",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1185,
            "description": "A developer flag to output all flash events to the console (if it exists).  Used for debugging.\n\n     createjs.Sound.activePlugin.showOutput = true;",
            "itemtype": "property",
            "name": "showOutput",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1198,
            "description": "The id name of the DIV that gets created for Flash content.",
            "itemtype": "property",
            "name": "_CONTAINER_ID",
            "type": "{String}",
            "default": "flashAudioContainer",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1207,
            "description": "The id name of the DIV wrapper that contains the Flash content.",
            "itemtype": "property",
            "name": "_WRAPPER_ID",
            "type": "{String}",
            "default": "SoundJSFlashContainer",
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1217,
            "description": "A reference to the DIV container that gets created to hold the Flash instance.",
            "itemtype": "property",
            "name": "_container",
            "type": "{HTMLDivElement}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1225,
            "description": "A reference to the Flash instance that gets created.",
            "itemtype": "property",
            "name": "flash",
            "type": "{Object | Embed}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1233,
            "description": "Determines if the Flash object has been created and initialized. This is required to make <code>ExternalInterface</code>\ncalls from JavaScript to Flash.",
            "itemtype": "property",
            "name": "flashReady",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1242,
            "description": "A hash of SoundInstances indexed by the related ID in Flash. This lookup is required to connect sounds in\nJavaScript to their respective instances in Flash.",
            "itemtype": "property",
            "name": "_flashInstances",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1251,
            "description": "A hash of Sound Preload instances indexed by the related ID in Flash. This lookup is required to connect\na preloading sound in Flash with its respective instance in JavaScript.",
            "itemtype": "property",
            "name": "_flashPreloadInstances",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1295,
            "description": "Event constant for the \"registerFlashID\" event for cleaner code.",
            "itemtype": "property",
            "name": "_REG_FLASHID",
            "type": "{String}",
            "default": "registerflashid",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1305,
            "description": "Event constant for the \"unregisterFlashID\" event for cleaner code.",
            "itemtype": "property",
            "name": "_UNREG_FLASHID",
            "type": "{String}",
            "default": "unregisterflashid",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1315,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\nmethod. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for a list of available\ncapabilities.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1326,
            "description": "The path relative to the HTML page that the FlashAudioPlugin.swf resides. Note if this is not correct, this\nplugin will not work.",
            "itemtype": "property",
            "name": "swfPath",
            "type": "{String}",
            "default": "src/SoundJS",
            "static": 1,
            "since": "0.5.2",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1339,
            "description": "Determine if the plugin can be used in the current browser/OS.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1353,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1409,
            "description": "The SWF used for sound preloading and playback has been initialized.",
            "itemtype": "method",
            "name": "_handleSWFReady",
            "params": [
                {
                    "name": "event",
                    "description": "Contains a reference to the swf.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1419,
            "description": "The Flash application that handles preloading and playback is ready. We wait for a callback from Flash to\nensure that everything is in place before playback begins.",
            "itemtype": "method",
            "name": "_handleFlashReady",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1432,
            "description": "Internal function used to set the gain value for master audio.  Should not be called externally.",
            "itemtype": "method",
            "name": "_updateVolume",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1586,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js",
            "line": 1595,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.min.js",
            "line": 13,
            "description": "SoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 836,
            "description": "ID used to facilitate communication with flash.\nNot doc'd because this should not be altered externally",
            "itemtype": "property",
            "name": "flashId",
            "type": "{String}",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 853,
            "description": "A reference to the Flash instance that gets created.",
            "itemtype": "property",
            "name": "flash",
            "type": "{Object | Embed}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 861,
            "description": "A list of loader instances that tried to load before _flash was set",
            "itemtype": "property",
            "name": "_preloadInstances",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 869,
            "description": "Set the Flash instance on the class, and start loading on any instances that had load called\nbefore flash was ready",
            "itemtype": "method",
            "name": "setFlash",
            "params": [
                {
                    "name": "flash",
                    "description": "Flash instance that handles loading and playback"
                }
            ],
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 897,
            "description": "called from flash when loading has progress",
            "itemtype": "method",
            "name": "handleProgress",
            "params": [
                {
                    "name": "loaded",
                    "description": ""
                },
                {
                    "name": "total",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 908,
            "description": "Called from Flash when sound is loaded.  Set our ready state and fire callbacks / events",
            "itemtype": "method",
            "name": "handleComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 918,
            "description": "Receive error event from flash and pass it to callback.",
            "itemtype": "method",
            "name": "handleError",
            "params": [
                {
                    "name": "error",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 970,
            "description": "ID used to facilitate communication with flash.\nNot doc'd because this should not be altered externally\n#property flashId",
            "type": "{String}",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 988,
            "description": "A reference to the Flash instance that gets created.\n#property flash",
            "type": "{Object | Embed}",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 995,
            "description": "A list of loader instances that tried to load before _flash was set\n#property _preloadInstances",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1003,
            "description": "Set the Flash instance on the class, and start loading on any instances that had load called\nbefore flash was ready\n#method setFlash",
            "params": [
                {
                    "name": "flash",
                    "description": "Flash instance that handles loading and playback"
                }
            ],
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1119,
            "description": "Called from Flash.  Lets us know flash has finished playing a sound.\n#method handleSoundFinished",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1129,
            "description": "Called from Flash.  Lets us know that flash has played a sound to completion and is looping it.\n#method handleSoundLoop",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1185,
            "description": "A developer flag to output all flash events to the console (if it exists).  Used for debugging.\n\n     createjs.Sound.activePlugin.showOutput = true;",
            "itemtype": "property",
            "name": "showOutput",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1198,
            "description": "The id name of the DIV that gets created for Flash content.",
            "itemtype": "property",
            "name": "_CONTAINER_ID",
            "type": "{String}",
            "default": "flashAudioContainer",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1207,
            "description": "The id name of the DIV wrapper that contains the Flash content.",
            "itemtype": "property",
            "name": "_WRAPPER_ID",
            "type": "{String}",
            "default": "SoundJSFlashContainer",
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1217,
            "description": "A reference to the DIV container that gets created to hold the Flash instance.",
            "itemtype": "property",
            "name": "_container",
            "type": "{HTMLDivElement}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1225,
            "description": "A reference to the Flash instance that gets created.",
            "itemtype": "property",
            "name": "flash",
            "type": "{Object | Embed}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1233,
            "description": "Determines if the Flash object has been created and initialized. This is required to make <code>ExternalInterface</code>\ncalls from JavaScript to Flash.",
            "itemtype": "property",
            "name": "flashReady",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1242,
            "description": "A hash of SoundInstances indexed by the related ID in Flash. This lookup is required to connect sounds in\nJavaScript to their respective instances in Flash.",
            "itemtype": "property",
            "name": "_flashInstances",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1251,
            "description": "A hash of Sound Preload instances indexed by the related ID in Flash. This lookup is required to connect\na preloading sound in Flash with its respective instance in JavaScript.",
            "itemtype": "property",
            "name": "_flashPreloadInstances",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1295,
            "description": "Event constant for the \"registerFlashID\" event for cleaner code.",
            "itemtype": "property",
            "name": "_REG_FLASHID",
            "type": "{String}",
            "default": "registerflashid",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1305,
            "description": "Event constant for the \"unregisterFlashID\" event for cleaner code.",
            "itemtype": "property",
            "name": "_UNREG_FLASHID",
            "type": "{String}",
            "default": "unregisterflashid",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1315,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\nmethod. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for a list of available\ncapabilities.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1326,
            "description": "The path relative to the HTML page that the FlashAudioPlugin.swf resides. Note if this is not correct, this\nplugin will not work.",
            "itemtype": "property",
            "name": "swfPath",
            "type": "{String}",
            "default": "src/SoundJS",
            "static": 1,
            "since": "0.5.2",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1339,
            "description": "Determine if the plugin can be used in the current browser/OS.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1353,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1409,
            "description": "The SWF used for sound preloading and playback has been initialized.",
            "itemtype": "method",
            "name": "_handleSWFReady",
            "params": [
                {
                    "name": "event",
                    "description": "Contains a reference to the swf.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1419,
            "description": "The Flash application that handles preloading and playback is ready. We wait for a callback from Flash to\nensure that everything is in place before playback begins.",
            "itemtype": "method",
            "name": "_handleFlashReady",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1432,
            "description": "Internal function used to set the gain value for master audio.  Should not be called externally.",
            "itemtype": "method",
            "name": "_updateVolume",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1586,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js",
            "line": 1595,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.FlashAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.min.js",
            "line": 13,
            "description": "SoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "class": "Graphics.SoundJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 46,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.SoundJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 54,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.SoundJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 74,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 110,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 170,
            "description": "Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\nthat value.  Returns -1 if value is not found.\n\n     var i = createjs.indexOf(myArray, myElementToFind);",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "array",
                    "description": "Array to search for searchElement",
                    "type": "Array"
                },
                {
                    "name": "searchElement",
                    "description": "Element to find in array."
                }
            ],
            "return": {
                "description": "The first index of searchElement in array.",
                "type": "Number"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 213,
            "description": "A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\ncallback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\nmethod gets called in the correct scope.\n\nAdditional arguments can be passed that will be applied to the function when it is called.\n\n<h4>Example</h4>\n\n     myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\n     function myHandler(arg1, arg2) {\n          // This gets called when myObject.myCallback is executed.\n     }",
            "itemtype": "method",
            "name": "proxy",
            "params": [
                {
                    "name": "method",
                    "description": "The function to call",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope to call the method name on",
                    "type": "Object"
                },
                {
                    "name": "arg",
                    "description": "* Arguments that are appended to the callback for additional params.",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 256,
            "description": "An object that determines the current browser, version, operating system, and other environment\nvariables via user agent string.\n\nUsed for audio because feature detection is unable to detect the many limitations of mobile devices.\n\n<h4>Example</h4>\n\n     if (createjs.BrowserDetect.isIOS) { // do stuff }",
            "itemtype": "property",
            "name": "BrowserDetect",
            "type": "{Object}",
            "is_constructor": 1,
            "static": 1,
            "class": "Utility Methods",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "isFirefox",
                    "description": "True if our browser is Firefox.",
                    "type": "Boolean"
                },
                {
                    "name": "isOpera",
                    "description": "True if our browser is opera.",
                    "type": "Boolean"
                },
                {
                    "name": "isChrome",
                    "description": "True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\ncompletely different browser with different abilities.",
                    "type": "Boolean"
                },
                {
                    "name": "isIOS",
                    "description": "True if our browser is safari for iOS devices (iPad, iPhone, and iPod).",
                    "type": "Boolean"
                },
                {
                    "name": "isAndroid",
                    "description": "True if our browser is Android.",
                    "type": "Boolean"
                },
                {
                    "name": "isBlackberry",
                    "description": "True if our browser is Blackberry.",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 364,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 371,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 380,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 395,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 419,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 452,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 498,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 528,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 542,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 564,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 618,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 629,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 649,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 659,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 717,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 724,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 733,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 745,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 758,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 767,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 777,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 786,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 796,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 806,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 816,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 827,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 841,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 851,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 860,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 870,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 884,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 893,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 906,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 938,
            "description": "The short error title, which indicates the type of error that occurred.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 945,
            "description": "The verbose error message, containing details about the error.",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 952,
            "description": "Additional data attached to an error.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 992,
            "description": "The amount that has been loaded (out of a total amount)",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Number}",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 999,
            "description": "The total \"size\" of the load.",
            "itemtype": "property",
            "name": "total",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1007,
            "description": "The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1018,
            "description": "Returns a clone of the ProgressEvent instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "ProgressEvent"
            },
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1050,
            "description": "The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\nstring (recommended), or an HTML tag.\nThis can also be an object, but in that case it has to include a type and be handled by a plugin.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1060,
            "description": "The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\nbe set manually. This is helpful in cases where a file does not have an extension.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1069,
            "description": "A string identifier which can be used to reference the loaded object. If none is provided, this will be\nautomatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1078,
            "description": "Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\nthat have also set the `maintainOrder` property to `true`. This only applies when the max connections has\nbeen set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\nproperty set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\norder when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.",
            "itemtype": "property",
            "name": "maintainOrder",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1090,
            "description": "A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.",
            "itemtype": "property",
            "name": "callback",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1098,
            "description": "An arbitrary data object, which is included with the loaded object.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1106,
            "description": "The request method used for HTTP calls. Both {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} or\n{{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\nconstants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "method",
            "type": "{String}",
            "default": "get",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1116,
            "description": "An object hash of name/value pairs to send to the server.",
            "itemtype": "property",
            "name": "values",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1124,
            "description": "An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\nheaders when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\ndefault headers by including them in your headers object.",
            "itemtype": "property",
            "name": "headers",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1134,
            "description": "Enable credentials for XHR requests.",
            "itemtype": "property",
            "name": "withCredentials",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1142,
            "description": "Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\nbased files (json, xml, text, css, js).",
            "itemtype": "property",
            "name": "mimeType",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1151,
            "description": "Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.",
            "itemtype": "property",
            "name": "crossOrigin",
            "type": "{boolean}",
            "default": "Anonymous",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1159,
            "description": "The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "loadTimeout",
            "type": "{Number}",
            "default": "8000 (8 seconds)",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1172,
            "description": "Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "LOAD_TIMEOUT_DEFAULT",
            "type": "{number}",
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1181,
            "description": "Create a LoadItem.\n<ul>\n    <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n    <li>LoadItem instances are returned as-is</li>\n    <li>Objects are returned with any needed properties added</li>\n</ul>",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "value",
                    "description": "The load item value",
                    "type": "LoadItem|String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "LoadItem|Object"
            },
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1210,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the LoadItem instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "LoadItem"
            },
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1242,
            "description": "The Regular Expression used to test file URLS for an absolute path.",
            "itemtype": "property",
            "name": "ABSOLUTE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1250,
            "description": "The Regular Expression used to test file URLS for a relative path.",
            "itemtype": "property",
            "name": "RELATIVE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1258,
            "description": "The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\nremoved.",
            "itemtype": "property",
            "name": "EXTENSION_PATT",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1267,
            "description": "Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n<ul>\n    <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n    `//networkPath`)</li>\n    <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n    <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n    the file path is expected to follow the format `name.ext`.</li>\n</ul>",
            "itemtype": "method",
            "name": "parseURI",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An Object with an `absolute` and `relative` Boolean values, as well as an optional 'extension`\nproperty, which is the lowercase extension.",
                "type": "Object"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1309,
            "description": "Formats an object into a query string for either a POST or GET request.",
            "itemtype": "method",
            "name": "formatQueryString",
            "params": [
                {
                    "name": "data",
                    "description": "The data to convert to a query string.",
                    "type": "Object"
                },
                {
                    "name": "query",
                    "description": "Existing name/value pairs to append on to this query.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1330,
            "description": "A utility method that builds a file path using a source and a data object, and formats it into a new path.",
            "itemtype": "method",
            "name": "buildPath",
            "params": [
                {
                    "name": "src",
                    "description": "The source path to add values to.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Object used to append values to this request as a query string. Existing parameters on the\npath will be preserved.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A formatted string that contains the path and the supplied parameters.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1359,
            "itemtype": "method",
            "name": "isCrossDomain",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from a different domain than the current location.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1379,
            "itemtype": "method",
            "name": "isLocal",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\nwell.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1392,
            "description": "Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\nspecifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\nback using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\na binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n{{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "isBinary",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is binary.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1413,
            "description": "Check if item is a valid HTMLImageElement",
            "itemtype": "method",
            "name": "isImageTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1424,
            "description": "Check if item is a valid HTMLAudioElement",
            "itemtype": "method",
            "name": "isAudioTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1439,
            "description": "Check if item is a valid HTMLVideoElement",
            "itemtype": "method",
            "name": "isVideoTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1454,
            "description": "Determine if a specific type is a text-based asset, and should be loaded as UTF-8.",
            "itemtype": "method",
            "name": "isText",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is text.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1477,
            "description": "Determine the type of the object using common extensions. Note that the type can be passed in with the load item\nif it is an unusual extension.",
            "itemtype": "method",
            "name": "getTypeByExtension",
            "params": [
                {
                    "name": "extension",
                    "description": "The file extension to use to determine the load type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The determined load type (for example, <code>AbstractLoader.IMAGE</code>). Will return `null` if\nthe type can not be determined by the extension.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1552,
            "description": "If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\nused for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1561,
            "description": "Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\nis readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\ninstead.",
            "itemtype": "property",
            "name": "canceled",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1572,
            "description": "The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\n<h4>Example</h4>\n\n    var queue = new createjs.LoadQueue();\n    queue.loadFile(\"largeImage.png\");\n    queue.on(\"progress\", function() {\n        console.log(\"Progress:\", queue.progress, event.progress);\n    });",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1589,
            "description": "The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\nsupported types.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1597,
            "description": "A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\nconverts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\ncan be overridden to provide custom formatting.\n\nOptionally, a resultFormatter can return a callback function in cases where the formatting needs to be\nasynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\nto handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\ncalled in the current scope, as well as the success and error callbacks.\n\n<h4>Example asynchronous resultFormatter</h4>\n\n\tfunction _formatResult(loader) {\n\t\treturn function(success, error) {\n\t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t\tsuccess(result);\n\t\t}\n\t}",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "{Function}",
            "default": "null",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1622,
            "description": "The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\nbut will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_item",
            "type": "{LoadItem|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1635,
            "description": "Whether the loader will try and load content using XHR (true) or HTML tags (false).",
            "itemtype": "property",
            "name": "_preferXHR",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1643,
            "description": "The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\nitems that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\nThe result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.",
            "itemtype": "property",
            "name": "_result",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1653,
            "description": "The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\nmethod, and passing `true`.",
            "itemtype": "property",
            "name": "_rawResult",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1662,
            "description": "A list of items that loaders load behind the scenes. This does not include the main item the loader is\nresponsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n{{#crossLink \"ManifestLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadItems",
            "type": "{null}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1672,
            "description": "The attribute the items loaded using tags use for the source.",
            "type": "{string}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1680,
            "description": "An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1696,
            "description": "Defines a POST request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "POST",
            "type": "{string}",
            "default": "post",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1705,
            "description": "Defines a GET request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "GET",
            "type": "{string}",
            "default": "get",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1714,
            "description": "The preload type for generic binary types. Note that images are loaded as binary files when using XHR.",
            "itemtype": "property",
            "name": "BINARY",
            "type": "{String}",
            "default": "binary",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1724,
            "description": "The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n&lt;style&gt; tag when loaded with tags.",
            "itemtype": "property",
            "name": "CSS",
            "type": "{String}",
            "default": "css",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1735,
            "description": "The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.",
            "itemtype": "property",
            "name": "IMAGE",
            "type": "{String}",
            "default": "image",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1745,
            "description": "The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n&lt;script&gt; tag.\n\nSince version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\nthe body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\nonly tag-loaded scripts are injected.",
            "itemtype": "property",
            "name": "JAVASCRIPT",
            "type": "{String}",
            "default": "javascript",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1760,
            "description": "The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\nno matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\nmust contain a matching wrapper function.",
            "itemtype": "property",
            "name": "JSON",
            "type": "{String}",
            "default": "json",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1773,
            "description": "The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\nNote that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\nproperty is set to.",
            "itemtype": "property",
            "name": "JSONP",
            "type": "{String}",
            "default": "jsonp",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1786,
            "description": "The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\nand parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\nArray of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nmethod. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\nregardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.",
            "itemtype": "property",
            "name": "MANIFEST",
            "type": "{String}",
            "default": "manifest",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1800,
            "description": "The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n&lt;audio&gt; tag.",
            "itemtype": "property",
            "name": "SOUND",
            "type": "{String}",
            "default": "sound",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1811,
            "description": "The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n&lt;video&gt; tag.",
            "itemtype": "property",
            "name": "VIDEO",
            "type": "{String}",
            "default": "video",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1822,
            "description": "The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.",
            "itemtype": "property",
            "name": "SPRITESHEET",
            "type": "{String}",
            "default": "spritesheet",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1832,
            "description": "The preload type for SVG files.",
            "itemtype": "property",
            "name": "SVG",
            "type": "{String}",
            "default": "svg",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1842,
            "description": "The preload type for text files, which is also the default file type if the type can not be determined. Text is\nloaded as raw text.",
            "itemtype": "property",
            "name": "TEXT",
            "type": "{String}",
            "default": "text",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1853,
            "description": "The preload type for xml files. XML is loaded into an XML document.",
            "itemtype": "property",
            "name": "XML",
            "type": "{String}",
            "default": "xml",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1864,
            "description": "The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\nversion 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "progress",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1871,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.",
            "itemtype": "event",
            "name": "loadstart",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.1",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1879,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1887,
            "description": "The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\nencountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\njust a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "error",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1895,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\nThis enables loaders to maintain internal queues, and surface file load errors.",
            "itemtype": "event",
            "name": "fileerror",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The even type (\"fileerror\")",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "item that encountered the error",
                    "type": "LoadItem|object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1905,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\nloaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\nand notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\nslightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"fileload\")",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a `src` property.",
                    "type": "Object"
                },
                {
                    "name": "result",
                    "description": "The HTML tag or parsed result of the loaded item.",
                    "type": "Object"
                },
                {
                    "name": "rawResult",
                    "description": "The unprocessed result, usually the raw text or binary data before it is converted\nto a usable object.",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1922,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\nThis allows updates to the loader for specific loading needs, such as binary or XHR image loading.",
            "itemtype": "event",
            "name": "initialize",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"initialize\")",
                    "type": "String"
                },
                {
                    "name": "loader",
                    "description": "The loader that has been initialized.",
                    "type": "AbstractLoader"
                }
            ],
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1932,
            "description": "Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\npassed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\nbe a {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getItem",
            "return": {
                "description": "The manifest item that this loader is responsible for loading.",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1945,
            "description": "Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\nevent is dispatched.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Determines if the returned result will be the formatted content, or the raw loaded\ndata (if it exists).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1958,
            "description": "Return the `tag` this object creates or uses for loading.",
            "itemtype": "method",
            "name": "getTag",
            "return": {
                "description": "The tag instance",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1968,
            "description": "Set the `tag` this item uses for loading.",
            "itemtype": "method",
            "name": "setTag",
            "params": [
                {
                    "name": "tag",
                    "description": "The tag instance",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 1978,
            "description": "Begin loading the item. This method is required when using a loader by itself.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.on(\"complete\", handleComplete);\n     queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n     queue.load();",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2007,
            "description": "Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\nthe background), but events will not longer be dispatched.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2017,
            "description": "Clean up the loader.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2038,
            "description": "Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto expose items it loads internally.",
            "itemtype": "method",
            "name": "getLoadedItems",
            "return": {
                "description": "A list of the items loaded by the loader.",
                "type": "Array"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2051,
            "description": "Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n{{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\nOther loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\nwhich uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.",
            "itemtype": "method",
            "name": "_createRequest",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2067,
            "description": "Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\nby loaders that require tag loading.",
            "itemtype": "method",
            "name": "_createTag",
            "params": [
                {
                    "name": "src",
                    "description": "The tag source",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The tag that was created",
                "type": "HTMLElement"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2077,
            "description": "Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendLoadStart",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2088,
            "description": "Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_sendProgress",
            "params": [
                {
                    "name": "value",
                    "description": "The progress of the loaded item, or an object containing <code>loaded</code>\nand <code>total</code> properties.",
                    "type": "Number | Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2110,
            "description": "Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event",
            "itemtype": "method",
            "name": "_sendComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2130,
            "description": "Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendError",
            "params": [
                {
                    "name": "event",
                    "description": "The event object containing specific error properties.",
                    "type": "ErrorEvent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2145,
            "description": "Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\ndo not cause issues after the queue has been cleaned up.",
            "itemtype": "method",
            "name": "_isCanceled",
            "return": {
                "description": "If the loader has been canceled.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2159,
            "description": "A custom result formatter function, which is called just before a request dispatches its complete event. Most\nloader types already have an internal formatter, but this can be user-overridden for custom formatting. The\nformatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "Function",
            "return": {
                "description": "The formatted result",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2170,
            "description": "Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\nthis method can be overridden for custom behaviours.",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The event that the internal request dispatches.",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2211,
            "description": "The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "result",
                    "description": "The formatted result",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2223,
            "description": "The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "error",
                    "description": "The error event",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2234,
            "itemtype": "method",
            "name": "buildPath",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "deprecationMessage": "Use the {{#crossLink \"RequestUtils\"}}{{/crossLink}} method {{#crossLink \"RequestUtils/buildPath\"}}{{/crossLink}}\ninstead.",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2244,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2305,
            "description": "Creates a new tag for loading if it doesn't exist yet.",
            "itemtype": "method",
            "name": "_createTag",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2322,
            "description": "Before the item loads, set its mimeType and responseType.",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2335,
            "description": "The result formatter for media files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLVideoElement|HTMLAudioElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2382,
            "description": "Begin a load.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2388,
            "description": "Clean up a request.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2394,
            "description": "Cancel an in-progress request.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2425,
            "description": "The HTML tag instance that is used to load.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{HTMLElement}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2433,
            "description": "The tag attribute that specifies the source, such as \"src\", \"href\", etc.",
            "itemtype": "property",
            "name": "_tagSrcAttribute",
            "type": "{String}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2441,
            "description": "A method closure used for handling the tag load event.",
            "itemtype": "property",
            "name": "_loadedHandler",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2449,
            "description": "Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.",
            "itemtype": "property",
            "name": "_addedToDOM",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2457,
            "description": "Determines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "type": "{null}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2500,
            "description": "Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\nand LINK tags), but other cases may exist.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2517,
            "description": "Handle any error events from the tag.",
            "itemtype": "method",
            "name": "_handleError",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2527,
            "description": "Handle the tag's onload callback.",
            "itemtype": "method",
            "name": "_handleTagComplete",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2542,
            "description": "The tag request has not loaded within the time specified in loadTimeout.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2553,
            "description": "Remove event listeners, but don't destroy the request object",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2577,
            "description": "Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\nthat is already in a load, but not complete.",
            "itemtype": "method",
            "name": "_handleStalled",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2655,
            "description": "An XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MediaTagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2709,
            "description": "A reference to the XHR request used to load the content.",
            "itemtype": "property",
            "name": "_request",
            "type": "{XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2717,
            "description": "A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\ntypically IE9).",
            "itemtype": "property",
            "name": "_loadTimeout",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2726,
            "description": "The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\nthe version, so we use capabilities to make a best guess.",
            "itemtype": "property",
            "name": "_xhrLevel",
            "type": "{Number}",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2736,
            "description": "The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\nnull until the file is loaded.",
            "itemtype": "property",
            "name": "_response",
            "type": "{mixed}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2745,
            "description": "The response of the loaded file before it is modified. In most cases, content is converted from raw text to\nan HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\nwant to access the raw content as it was loaded.",
            "itemtype": "property",
            "name": "_rawResponse",
            "type": "{String|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2774,
            "description": "A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.",
            "itemtype": "property",
            "name": "ACTIVEX_VERSIONS",
            "type": "{Array}",
            "since": "0.4.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2791,
            "description": "Look up the loaded result.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Return a raw result instead of a formatted result. This applies to content\nloaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\nreturned instead.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A result object containing the content that was loaded, such as:\n<ul>\n     <li>An image tag (&lt;image /&gt;) for images</li>\n     <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n     HTML head.</li>\n     <li>A style tag for CSS (&lt;style /&gt;)</li>\n     <li>Raw text for TEXT</li>\n     <li>A formatted JavaScript object defined by JSON</li>\n     <li>An XML document</li>\n     <li>An binary arraybuffer loaded by XHR</li>\n</ul>\nNote that if a raw result is requested, but not found, the result will be returned instead.",
                "type": "Object"
            },
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2881,
            "description": "Get all the response headers from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\nfor Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\nexcluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\npair.",
            "itemtype": "method",
            "name": "getAllResponseHeaders",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2900,
            "description": "Get a specific response header from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\nheader, unless the field name is Set-Cookie or Set-Cookie2.",
            "itemtype": "method",
            "name": "getResponseHeader",
            "params": [
                {
                    "name": "header",
                    "description": "The header name to retrieve.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2919,
            "description": "The XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2934,
            "description": "The XHR request has reported a load start.",
            "itemtype": "method",
            "name": "_handleLoadStart",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR loadStart event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2945,
            "description": "The XHR request has reported an abort event.",
            "itemtype": "method",
            "name": "handleAbort",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR abort event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2956,
            "description": "The XHR request has reported an error event.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2967,
            "description": "The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\nevent, so we must monitor the readyStateChange to determine if the file is loaded.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR readyStateChange event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 2980,
            "description": "The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n<code>request.readyState == 4</code>. Only the first call to this method will be processed.",
            "itemtype": "method",
            "name": "_handleLoad",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR load event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3020,
            "description": "The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\ncallback.",
            "itemtype": "method",
            "name": "_handleTimeout",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR timeout event. This is occasionally null when called by the backup setTimeout.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3034,
            "description": "Determine if there is an error in the current load. This checks the status of the request for problem codes. Note\nthat this does not check for an actual response. Currently, it only checks for 404 or 0 error code.",
            "itemtype": "method",
            "name": "_checkError",
            "return": {
                "description": "If the request status returns an error code.",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3053,
            "description": "Validate the response. Different browsers have different approaches, some of which throw errors when accessed\nin other browsers. If there is no response, the <code>_response</code> property will remain null.",
            "itemtype": "method",
            "name": "_getResponse",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3087,
            "description": "Create an XHR request. Depending on a number of factors, we get totally different results.\n<ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n     <li>XMLHttpRequest are created when available.</li>\n     <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n     <li>Text requests override the mime type if possible</li>\n     <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n     <li>Binary loads set the response type to \"arraybuffer\"</li></ol>",
            "itemtype": "method",
            "name": "_createXHR",
            "params": [
                {
                    "name": "item",
                    "description": "The requested item that is being loaded.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If an XHR request or equivalent was successfully created.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3182,
            "description": "A request has completed (or failed or canceled), and needs to be disposed.",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3259,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SoundLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3397,
            "description": "How to interrupt any currently playing instances of audio with the same source,\nif the maximum number of instances of the sound are already playing. Values are defined as\n<code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n{{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "interrupt",
            "type": "{string}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3408,
            "description": "The amount of time to delay the start of audio playback, in milliseconds.",
            "itemtype": "property",
            "name": "delay",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3416,
            "description": "The offset from the start of the audio to begin playback, in milliseconds.",
            "itemtype": "property",
            "name": "offset",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3424,
            "description": "How many times the audio loops when it reaches the end of playback. The default is 0 (no\nloops), and -1 can be used for infinite playback.",
            "itemtype": "property",
            "name": "loop",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3433,
            "description": "The volume of the sound, between 0 and 1. Note that the master volume is applied\nagainst the individual volume.",
            "itemtype": "property",
            "name": "volume",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3442,
            "description": "The left-right pan of the sound (if supported), between -1 (left) and 1 (right).",
            "itemtype": "property",
            "name": "pan",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3450,
            "description": "Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.",
            "itemtype": "property",
            "name": "startTime",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3458,
            "description": "Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.",
            "itemtype": "property",
            "name": "duration",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3471,
            "description": "Creates a PlayPropsConfig from another PlayPropsConfig or an Object.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "value",
                    "description": "The play properties",
                    "type": "PlayPropsConfig|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "PlayPropsConfig"
            },
            "static": 1,
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3490,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the PlayPropsConfig instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "PlayPropsConfig"
            },
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3705,
            "description": "The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\ninstances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_ANY",
            "type": "{String}",
            "default": "any",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3715,
            "description": "The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\nleast distance in the audio track, if the maximum number of instances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_EARLY",
            "type": "{String}",
            "default": "early",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3725,
            "description": "The interrupt value to interrupt the currently playing instance with the same source that progressed the most\ndistance in the audio track, if the maximum number of instances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_LATE",
            "type": "{String}",
            "default": "late",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3735,
            "description": "The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\ninstances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_NONE",
            "type": "{String}",
            "default": "none",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3745,
            "description": "Defines the playState of an instance that is still initializing.",
            "itemtype": "property",
            "name": "PLAY_INITED",
            "type": "{String}",
            "default": "playInited",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3754,
            "description": "Defines the playState of an instance that is currently playing or paused.",
            "itemtype": "property",
            "name": "PLAY_SUCCEEDED",
            "type": "{String}",
            "default": "playSucceeded",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3763,
            "description": "Defines the playState of an instance that was interrupted by another instance.",
            "itemtype": "property",
            "name": "PLAY_INTERRUPTED",
            "type": "{String}",
            "default": "playInterrupted",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3772,
            "description": "Defines the playState of an instance that completed playback.",
            "itemtype": "property",
            "name": "PLAY_FINISHED",
            "type": "{String}",
            "default": "playFinished",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3781,
            "description": "Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\nwhen the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.",
            "itemtype": "property",
            "name": "PLAY_FAILED",
            "type": "{String}",
            "default": "playFailed",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3791,
            "description": "A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\ncan play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\nsupport additional media types.\n\nNOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\nMore details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\nA very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.",
            "itemtype": "property",
            "name": "SUPPORTED_EXTENSIONS",
            "type": "{Array[String]}",
            "default": "[\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]",
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3808,
            "description": "Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\nthat support so plugins can accurately determine if an extension is supported.  Adding to this list can help\nplugins determine more accurately if an extension is supported.\n\nA useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.",
            "itemtype": "property",
            "name": "EXTENSION_MAP",
            "type": "{Object}",
            "since": "0.4.0",
            "default": "{m4a:\"mp4\"}",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3824,
            "description": "The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\nquery strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.",
            "itemtype": "property",
            "name": "FILE_PATTERN",
            "type": "{RegExp}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3836,
            "description": "Determines the default behavior for interrupting other currently playing instances with the same source, if the\nmaximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\nbut this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\nis called without passing a value for interrupt.",
            "itemtype": "property",
            "name": "defaultInterruptBehavior",
            "type": "{String}",
            "default": "Sound.INTERRUPT_NONE, or \"none\"",
            "static": 1,
            "since": "0.4.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3849,
            "description": "An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\nThese are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\nextensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\nto exist in the same location, as only the extension is altered.\n\nNote that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\nand {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n\n<h4>Example</h4>\n\n\tvar sounds = [\n\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n\t];\n\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\tcreatejs.Sound.registerSounds(sounds, assetPath);\n\t// ...\n\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach",
            "itemtype": "property",
            "name": "alternateExtensions",
            "type": "{Array}",
            "since": "0.5.2",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3876,
            "description": "The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\nSound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n{{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "activePlugin",
            "type": "{Object}",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3888,
            "description": "Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\nexample, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\nsound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} instead.\n\n<h4>Example</h4>\n\n    createjs.Sound.volume = 0.5;",
            "itemtype": "property",
            "name": "volume",
            "type": "{Number}",
            "default": "1",
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3919,
            "description": "Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\nseparately and when set will override, but not change the mute property of individual instances. To mute an individual\ninstance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n\n<h4>Example</h4>\n\n    createjs.Sound.muted = true;",
            "itemtype": "property",
            "name": "muted",
            "type": "{Boolean}",
            "default": "false",
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3952,
            "description": "Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\nor if the plugin supports a specific feature. Capabilities include:\n<ul>\n    <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n    <li><b>volume;</b> If the plugin can control audio volume.</li>\n    <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n    if there is no known limit.</li>\n<br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n    <li><b>mp3:</b> If MP3 audio is supported.</li>\n    <li><b>ogg:</b> If OGG audio is supported.</li>\n    <li><b>wav:</b> If WAV audio is supported.</li>\n    <li><b>mpeg:</b> If MPEG audio is supported.</li>\n    <li><b>m4a:</b> If M4A audio is supported.</li>\n    <li><b>mp4:</b> If MP4 audio is supported.</li>\n    <li><b>aiff:</b> If aiff audio is supported.</li>\n    <li><b>wma:</b> If wma audio is supported.</li>\n    <li><b>mid:</b> If mid audio is supported.</li>\n</ul>\n\nYou can get a specific capability of the active plugin using standard object notation\n\n<h4>Example</h4>\n\n     var mp3 = createjs.Sound.capabilities.mp3;\n\nNote this property is read only.",
            "itemtype": "property",
            "name": "capabilities",
            "type": "{Object}",
            "static": 1,
            "readonly": "",
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 3996,
            "description": "Determines if the plugins have been registered. If false, the first call to play() will instantiate the default\nplugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\nIf plugins have been registered, but none are applicable, then sound playback will fail.",
            "itemtype": "property",
            "name": "_pluginsRegistered",
            "type": "{Boolean}",
            "default": "false",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4008,
            "description": "Used internally to assign unique IDs to each AbstractSoundInstance.",
            "itemtype": "property",
            "name": "_lastID",
            "type": "{Number}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4017,
            "description": "An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\nall instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/setVolume\"}}{{/crossLink}}.\nWhen an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\nmethod. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\nmethod.",
            "itemtype": "property",
            "name": "_instances",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4030,
            "description": "An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.",
            "itemtype": "property",
            "name": "_idHash",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4039,
            "description": "An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\nsource, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\nand data.",
            "itemtype": "property",
            "name": "_preloadHash",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4050,
            "description": "An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n{{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_defaultPlayPropsHash",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4074,
            "description": "This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\nso any handler methods should look up the <code>event.src</code> to handle a particular sound.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "The source of the sound that was loaded.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id passed in when the sound was registered. If one was not provided, it will be null.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Any additional data associated with the item. If not provided, it will be undefined.",
                    "type": "Number|Object",
                    "optional": true
                }
            ],
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4086,
            "description": "This event is fired when a file fails loading internally. This event is fired for each loaded sound,\nso any handler methods should look up the <code>event.src</code> to handle a particular sound.",
            "itemtype": "event",
            "name": "fileerror",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "The source of the sound that was loaded.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id passed in when the sound was registered. If one was not provided, it will be null.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Any additional data associated with the item. If not provided, it will be undefined.",
                    "type": "Number|Object",
                    "optional": true
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4100,
            "description": "Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\nAny load calls that have the matching type or extension will fire the callback method, and use the resulting\nobject, which is potentially modified by Sound. This helps when determining the correct path, as well as\nregistering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.",
            "itemtype": "method",
            "name": "getPreloadHandlers",
            "return": {
                "description": "An object containing:\n<ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n     Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n     <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n     <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>",
                "type": "Object"
            },
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4122,
            "description": "Used to dispatch fileload events from internal loading.",
            "itemtype": "method",
            "name": "_handleLoadComplete",
            "params": [
                {
                    "name": "event",
                    "description": "A loader event."
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4150,
            "description": "Used to dispatch error events from internal preloading.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4177,
            "description": "Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.",
            "itemtype": "method",
            "name": "_registerPlugin",
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether the plugin was successfully initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4195,
            "description": "Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n\n<h4>Example</h4>\n\n     createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n     createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);",
            "itemtype": "method",
            "name": "registerPlugins",
            "params": [
                {
                    "name": "plugins",
                    "description": "An array of plugins classes to install.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Whether a plugin was successfully initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4218,
            "description": "Initialize the default plugins. This method is automatically called when any audio is played or registered before\nthe user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\ndefault plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n\tif (!createjs.initializeDefaultPlugins()) { return; }",
            "itemtype": "method",
            "name": "initializeDefaultPlugins",
            "return": {
                "description": "True if a plugin was initialized, false otherwise.",
                "type": "Boolean"
            },
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4239,
            "description": "Determines if Sound has been initialized, and a plugin has been activated.\n\n<h4>Example</h4>\nThis example sets up a Flash fallback, but only if there is no plugin specified yet.\n\n\tif (!createjs.Sound.isReady()) {\n\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t}",
            "itemtype": "method",
            "name": "isReady",
            "return": {
                "description": "If Sound has initialized a plugin.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4258,
            "description": "Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getCapabilities",
            "return": {
                "description": "An object containing the capabilities of the active plugin.",
                "type": "Object"
            },
            "static": 1,
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4271,
            "description": "Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getCapability",
            "params": [
                {
                    "name": "key",
                    "description": "The capability to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The value of the capability.",
                "type": "Number|Boolean"
            },
            "static": 1,
            "see": [
                "getCapabilities"
            ],
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4286,
            "description": "Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\nfor usage by a plugin, and not for direct interaction.",
            "itemtype": "method",
            "name": "initLoad",
            "params": [
                {
                    "name": "src",
                    "description": "The object to load.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An instance of AbstractLoader.",
                "type": "Object|AbstractLoader"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4299,
            "description": "Internal method for loading sounds.  This should not be called directly.",
            "itemtype": "method",
            "name": "_registerSound",
            "params": [
                {
                    "name": "src",
                    "description": "The object to load, containing src property and optionally containing id and data.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An object with the modified values that were passed in, which defines the sound.\nReturns false if the source cannot be parsed or no plugins can be initialized.\nReturns true if the source is already loaded.",
                "type": "Object"
            },
            "static": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4367,
            "description": "Register an audio file for loading and future playback in Sound. This is automatically called when using\n<a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\nneed to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n\n<h4>Example</h4>\n\n     createjs.Sound.alternateExtensions = [\"mp3\"];\n     createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n     createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n     createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);",
            "itemtype": "method",
            "name": "registerSound",
            "params": [
                {
                    "name": "src",
                    "description": "The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.",
                    "type": "String | Object"
                },
                {
                    "name": "id",
                    "description": "An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Data associated with the item. Sound uses the data parameter as the number of\nchannels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\nfor other information. The audio channels will set a default based on plugin if no value is found.\nSound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n  id used to play the sound later, in the same manner as a sound src with an id.<br/>\n  startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n  duration is the amount of time to play the clip for, in milliseconds.<br/>\nThis allows Sound to support audio sprites that are played back by id.",
                    "type": "Number | Object",
                    "optional": true
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to src for loading.",
                    "type": "String"
                },
                {
                    "name": "defaultPlayProps",
                    "description": "Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\nSee {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.",
                    "type": "Object | PlayPropsConfig"
                }
            ],
            "return": {
                "description": "An object with the modified values that were passed in, which defines the sound.\nReturns false if the source cannot be parsed or no plugins can be initialized.\nReturns true if the source is already loaded.",
                "type": "Object"
            },
            "static": 1,
            "since": "0.4.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4428,
            "description": "Register an array of audio files for loading and future playback in Sound. It is recommended to register all\nsounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\nwhen required.\n\n<h4>Example</h4>\n\n\t\tvar assetPath = \"./myAudioPath/\";\n     var sounds = [\n         {src:\"asset0.ogg\", id:\"example\"},\n         {src:\"asset1.ogg\", id:\"1\", data:6},\n         {src:\"asset2.mp3\", id:\"works\"}\n         {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension}, id:\"better\"}\n     ];\n     createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n     createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n     createjs.Sound.registerSounds(sounds, assetPath);",
            "itemtype": "method",
            "name": "registerSounds",
            "params": [
                {
                    "name": "sounds",
                    "description": "An array of objects to load. Objects are expected to be in the format needed for\n{{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\nwith \"id\" and \"data\" being optional.\nYou can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\nNote id is required if src is an object with extension labeled src properties.",
                    "type": "Array"
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to each src when loading.  When creating, playing, or removing\naudio that was loaded with a basePath by src, the basePath must be included.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array of objects with the modified values that were passed in, which defines each sound.\nLike registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\nAlso, it will return true for any values when the source is already loaded.",
                "type": "Object"
            },
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4477,
            "description": "Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n{{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n<br />Note this will stop playback on active instances playing this sound before deleting them.\n<br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\n<h4>Example</h4>\n\n     createjs.Sound.removeSound(\"myID\");\n     createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n     createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n     createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");",
            "itemtype": "method",
            "name": "removeSound",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.",
                    "type": "String | Object"
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to each src when removing.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if sound is successfully removed.",
                "type": "Boolean"
            },
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4529,
            "description": "Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n{{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n<br />Note this will stop playback on active instances playing this audio before deleting them.\n<br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\n<h4>Example</h4>\n\n\t\tassetPath = \"./myPath/\";\n     var sounds = [\n         {src:\"asset0.ogg\", id:\"example\"},\n         {src:\"asset1.ogg\", id:\"1\", data:6},\n         {src:\"asset2.mp3\", id:\"works\"}\n     ];\n     createjs.Sound.removeSounds(sounds, assetPath);",
            "itemtype": "method",
            "name": "removeSounds",
            "params": [
                {
                    "name": "sounds",
                    "description": "An array of objects to remove. Objects are expected to be in the format needed for\n{{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\nYou can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.",
                    "type": "Array"
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to each src when removing.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array of Boolean values representing if the sounds with the same array index were\nsuccessfully removed.",
                "type": "Object"
            },
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4571,
            "description": "Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n{{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n<br />Note this will stop playback on all active sound instances before deleting them.\n\n<h4>Example</h4>\n\n    createjs.Sound.removeAllSounds();",
            "itemtype": "method",
            "name": "removeAllSounds",
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4591,
            "description": "Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\nnot completed preloading will not kick off a new internal preload if they are played.\n\n<h4>Example</h4>\n\n    var mySound = \"assetPath/asset0.ogg\";\n    if(createjs.Sound.loadComplete(mySound) {\n        createjs.Sound.play(mySound);\n    }",
            "itemtype": "method",
            "name": "loadComplete",
            "params": [
                {
                    "name": "src",
                    "description": "The src or id that is being loaded.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the src is already loaded.",
                "type": "Boolean"
            },
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4620,
            "description": "Parse the path of a sound. Alternate extensions will be attempted in order if the\ncurrent extension is not supported",
            "itemtype": "method",
            "name": "_parsePath",
            "params": [
                {
                    "name": "value",
                    "description": "The path to an audio source.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\nand returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4650,
            "description": "Parse the path of a sound based on properties of src matching with supported extensions.\nReturns false if none of the properties are supported",
            "itemtype": "method",
            "name": "_parseSrc",
            "params": [
                {
                    "name": "value",
                    "description": "The paths to an audio source, indexed by extension type.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\nand returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4686,
            "description": "Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to play, a\nAbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\nNote that even on sounds with failed playback, you may still be able to call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\nsince the failure could be due to lack of available channels. If the src does not have a supported extension or\nif there is no available plugin, a default AbstractSoundInstance will be returned which will not play any audio, but will not generate errors.\n\n<h4>Example</h4>\n\n     createjs.Sound.on(\"fileload\", handleLoad);\n     createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n     function handleLoad(event) {\n     \tcreatejs.Sound.play(\"myID\");\n     \t// store off AbstractSoundInstance for controlling\n     \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n     }\n\nNOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\nThis is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\n<b>Parameters Deprecated</b><br />\nThe parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID of the audio.",
                    "type": "String"
                },
                {
                    "name": "interrupt",
                    "description": "<b>This parameter will be renamed playProps in the next release.</b><br />\nThis parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\nincluding: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n<br /><strong>OR</strong><br />\n<b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\nif the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\nconstants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.",
                    "type": "String | Object",
                    "optional": true,
                    "optdefault": "\"none\"|options"
                },
                {
                    "name": "delay",
                    "description": "<b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "offset",
                    "description": "<b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "loop",
                    "description": "<b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\nloops), and -1 can be used for infinite playback.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "<b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\nagainst the individual volume.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "pan",
                    "description": "<b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "startTime",
                    "description": "<b>Deprecated</b> To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "duration",
                    "description": "<b>Deprecated</b> To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.",
                "type": "AbstractSoundInstance"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4743,
            "description": "Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\nsupported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\ncalled safely but does nothing.\n\n<h4>Example</h4>\n\n     var myInstance = null;\n     createjs.Sound.on(\"fileload\", handleLoad);\n     createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n     function handleLoad(event) {\n     \tmyInstance = createjs.Sound.createInstance(\"myID\");\n     \t// alternately we could call the following\n     \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n     }\n\nNOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\nThis is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.",
            "itemtype": "method",
            "name": "createInstance",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID of the audio.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "duration",
                    "description": "To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\nUnsupported extensions will return the default AbstractSoundInstance.",
                "type": "AbstractSoundInstance"
            },
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4798,
            "description": "Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\ncall AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n    createjs.Sound.stop();",
            "itemtype": "method",
            "name": "stop",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4816,
            "description": "Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The master volume value. The acceptable range is 0-1.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4836,
            "description": "Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The master volume, in a range of 0-1.",
                "type": "Number"
            },
            "static": 1,
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4848,
            "description": "Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "setMute",
            "params": [
                {
                    "name": "value",
                    "description": "Whether the audio should be muted or not.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the mute was set.",
                "type": "Boolean"
            },
            "static": 1,
            "since": "0.4.0",
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4871,
            "description": "Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getMute",
            "return": {
                "description": "The mute value of Sound.",
                "type": "Boolean"
            },
            "static": 1,
            "since": "0.4.0",
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4884,
            "description": "Set the default playback properties for all new SoundInstances of the passed in src or ID.\nSee {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.",
            "itemtype": "method",
            "name": "setDefaultPlayProps",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID used to register the audio.",
                    "type": "String"
                },
                {
                    "name": "playProps",
                    "description": "The playback properties you would like to set.",
                    "type": "Object | PlayPropsConfig"
                }
            ],
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4898,
            "description": "Get the default playback properties for the passed in src or ID.  These properties are applied to all\nnew SoundInstances.  Returns null if default does not exist.",
            "itemtype": "method",
            "name": "getDefaultPlayProps",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID used to register the audio.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns an existing PlayPropsConfig or null if one does not exist",
                "type": "PlayPropsConfig"
            },
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4916,
            "description": "Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\ncontrol delays.",
            "itemtype": "method",
            "name": "_playInstance",
            "params": [
                {
                    "name": "instance",
                    "description": "The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.",
                    "type": "AbstractSoundInstance"
                },
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig object.",
                    "type": "PlayPropsConfig"
                }
            ],
            "return": {
                "description": "If the sound can start playing. Sounds that fail immediately will return false. Sounds that\nhave a delay will return true, but may still fail to play.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4953,
            "description": "Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_beginPlaying",
            "params": [
                {
                    "name": "instance",
                    "description": "A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.",
                    "type": "AbstractSoundInstance"
                },
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig object.",
                    "type": "PlayPropsConfig"
                }
            ],
            "return": {
                "description": "If the sound can start playing. If there are no available channels, or the instance fails to\nstart, this will return false.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4976,
            "description": "Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\ninstead.",
            "itemtype": "method",
            "name": "_getSrcById",
            "params": [
                {
                    "name": "value",
                    "description": "The ID the sound was registered with.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The source of the sound if it has been registered with this ID or the value that was passed in.",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 4989,
            "description": "A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\nSound management. It will be added again, if the sound re-plays. Note that this method is called from the\ninstances themselves.",
            "itemtype": "method",
            "name": "_playFinished",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance that finished playback.",
                    "type": "AbstractSoundInstance"
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5006,
            "description": "An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\neach sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\nThe number of sounds is artificially limited by Sound in order to prevent over-saturation of a\nsingle sound, as well as to stay within hardware limitations, although the latter may disappear with better\nbrowser support.\n\nWhen a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\nsound that is already playing.\n#class SoundChannel",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the instances",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The number of instances allowed",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "is_constructor": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5029,
            "description": "A hash of channel instances indexed by source.\n#property channels",
            "type": "{Object}",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5037,
            "description": "Create a sound channel. Note that if the sound channel already exists, this will fail.\n#method create",
            "params": [
                {
                    "name": "src",
                    "description": "The source for the channel",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If the channels were created.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5053,
            "description": "Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n#method remove",
            "params": [
                {
                    "name": "src",
                    "description": "The source for the channel",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the channels were deleted.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5067,
            "description": "Delete all sound channels, stop and delete all related instances.\n#method removeAll",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5078,
            "description": "Add an instance to a sound channel.\n#method add",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to add to the channel",
                    "type": "AbstractSoundInstance"
                },
                {
                    "name": "interrupt",
                    "description": "The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\nfor details on interrupt modes.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The success of the method call. If the channel is full, it will return false.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5092,
            "description": "Remove an instance from the channel.\n#method remove",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to remove from the channel",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "The success of the method call. If there is no channel, it will return false."
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5105,
            "description": "Get the maximum number of sounds you can have in a channel.\n#method maxPerChannel",
            "return": {
                "description": "The maximum number of sounds you can have in a channel.",
                "type": "Number"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5113,
            "description": "Get a channel instance by its src.\n#method get",
            "params": [
                {
                    "name": "src",
                    "description": "The src to use to look up the channel",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5126,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5140,
            "description": "The source of the channel.\n#property src",
            "type": "{String}",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5147,
            "description": "The maximum number of instances in this channel.  -1 indicates no limit\n#property max",
            "type": "{Number}",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5154,
            "description": "The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n#property maxDefault",
            "type": "{Number}",
            "default": "100",
            "since": "0.4.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5163,
            "description": "The current number of active instances.\n#property length",
            "type": "{Number}",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5170,
            "description": "Initialize the channel.\n#method init",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the channel",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The maximum number of instances in the channel",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5184,
            "description": "Get an instance by index.\n#method get",
            "params": [
                {
                    "name": "index",
                    "description": "The index to return.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The AbstractSoundInstance at a specific instance.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5194,
            "description": "Add a new instance to the channel.\n#method add",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to add.",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "The success of the method call. If the channel is full, it will return false.",
                "type": "Boolean"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5207,
            "description": "Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n#method remove",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to remove",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "The success of the remove call. If the instance is not found in this channel, it will\nreturn false.",
                "type": "Boolean"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5222,
            "description": "Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n#method removeAll",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5233,
            "description": "Get an available slot depending on interrupt value and if slots are available.\n#method getSlot",
            "params": [
                {
                    "name": "interrupt",
                    "description": "The interrupt value to use.",
                    "type": "String"
                },
                {
                    "name": "instance",
                    "description": "The sound instance that will go in the channel if successful.",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\nan existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.",
                "type": "Boolean"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5351,
            "description": "The source of the sound.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5359,
            "description": "The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "uniqueId",
            "type": "{String} | Number",
            "default": "-1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5367,
            "description": "The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "playState",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5375,
            "description": "A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\nThis allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.",
            "itemtype": "property",
            "name": "delayTimeoutId",
            "type": "{timeoutVariable}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5391,
            "description": "The volume of the sound, between 0 and 1.\n\nThe actual output volume of a sound can be calculated using:\n<code>myInstance.volume * createjs.Sound.getVolume();</code>",
            "itemtype": "property",
            "name": "volume",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5407,
            "description": "The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n\n<br />Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio.",
            "itemtype": "property",
            "name": "pan",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5422,
            "description": "Audio sprite property used to determine the starting offset.",
            "itemtype": "property",
            "name": "startTime",
            "type": "{Number}",
            "default": "0",
            "since": "0.6.1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5435,
            "description": "Sets or gets the length of the audio clip, value is in milliseconds.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "default": "0",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5449,
            "description": "Object that holds plugin specific resource need for audio playback.\nThis is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\nHTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.",
            "itemtype": "property",
            "name": "playbackResource",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5465,
            "description": "The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.",
            "itemtype": "property",
            "name": "position",
            "type": "{Number}",
            "default": "0",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5479,
            "description": "The number of play loops remaining. Negative values will loop infinitely.",
            "itemtype": "property",
            "name": "loop",
            "type": "{Number}",
            "default": "0",
            "access": "public",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5494,
            "description": "Mutes or unmutes the current audio instance.",
            "itemtype": "property",
            "name": "muted",
            "type": "{Boolean}",
            "default": "false",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5508,
            "description": "Pauses or resumes the current audio instance.",
            "itemtype": "property",
            "name": "paused",
            "type": "{Boolean}",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5522,
            "description": "The event that is fired when playback has started successfully.",
            "itemtype": "event",
            "name": "succeeded",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5530,
            "description": "The event that is fired when playback is interrupted. This happens when another sound with the same\nsrc property is played using an interrupt value that causes this instance to stop playing.",
            "itemtype": "event",
            "name": "interrupted",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5539,
            "description": "The event that is fired when playback has failed. This happens when there are too many channels with the same\nsrc property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\nthe sound could not be played, perhaps due to a 404 error.",
            "itemtype": "event",
            "name": "failed",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5549,
            "description": "The event that is fired when a sound has completed playing but has loops remaining.",
            "itemtype": "event",
            "name": "loop",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5557,
            "description": "The event that is fired when playback completes. This means that the sound has finished playing in its\nentirety, including its loop iterations.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5574,
            "description": "Play an instance. This method is intended to be called on SoundInstances that already exist (created\nwith the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n\n<h4>Example</h4>\n\n     var myInstance = createjs.Sound.createInstance(mySrc);\n     myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n\nNote that if this sound is already playing, this call will still set the passed in parameters.\n\n<b>Parameters Deprecated</b><br />\nThe parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "interrupt",
                    "description": "<b>This parameter will be renamed playProps in the next release.</b><br />\nThis parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\nincluding: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n<br /><strong>OR</strong><br />\n<b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\nif the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\nconstants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.",
                    "type": "String | Object",
                    "optional": true,
                    "optdefault": "\"none\"|options"
                },
                {
                    "name": "delay",
                    "description": "<b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "offset",
                    "description": "<b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "loop",
                    "description": "<b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\nloops), and -1 can be used for infinite playback.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "<b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\nagainst the individual volume.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "pan",
                    "description": "<b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\nNote that pan is not supported for HTML Audio.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5624,
            "description": "Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\nwill fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\nIf you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n    myInstance.stop();",
            "itemtype": "method",
            "name": "stop",
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5646,
            "description": "Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work",
            "itemtype": "method",
            "name": "destroy",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5659,
            "description": "Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.",
            "itemtype": "method",
            "name": "applyPlayProps",
            "params": [
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig or object containing the same properties.",
                    "type": "PlayPropsConfig | Object"
                }
            ],
            "since": "0.6.1",
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5683,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property,",
            "deprecated": true,
            "itemtype": "method",
            "name": "getPaused",
            "return": {
                "description": "If the instance is currently paused",
                "type": "Boolean"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5695,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "since": "0.6.0",
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5717,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The volume to set, between 0 and 1.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5734,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The current volume of the sound instance.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5745,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setMuted",
            "params": [
                {
                    "name": "value",
                    "description": "If the sound should be muted.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5761,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getMuted",
            "return": {
                "description": "If the sound is muted.",
                "type": "Boolean"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5773,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPan",
            "params": [
                {
                    "name": "value",
                    "description": "The pan value, between -1 (left) and 1 (right).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5788,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getPan",
            "return": {
                "description": "The value of the pan, between -1 (left) and 1 (right).",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5799,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getPosition",
            "return": {
                "description": "The position of the playhead in the sound, in milliseconds.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5813,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to place the playhead, in milliseconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5829,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getStartTime",
            "return": {
                "description": "The startTime of the sound instance in milliseconds.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5840,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setStartTime",
            "params": [
                {
                    "name": "value",
                    "description": "The new startTime time in milli seconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5855,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "The duration of the sound instance in milliseconds.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5866,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setDuration",
            "params": [
                {
                    "name": "value",
                    "description": "The new duration time in milli seconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5882,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPlayback",
            "params": [
                {
                    "name": "value",
                    "description": "The new playback resource.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5897,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPlayback",
            "params": [
                {
                    "name": "value",
                    "description": "The new playback resource.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "playback resource used for playing audio",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5910,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getLoop",
            "return": {
                "description": "",
                "type": "Number"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5922,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property,",
            "deprecated": true,
            "itemtype": "method",
            "name": "setLoop",
            "params": [
                {
                    "name": "value",
                    "description": "The number of times to loop after play.",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5946,
            "description": "A helper method that dispatches all events for AbstractSoundInstance.",
            "itemtype": "method",
            "name": "_sendEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The event type",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5957,
            "description": "Clean up the instance. Remove references and clean up any additional properties such as timers.",
            "itemtype": "method",
            "name": "_cleanUp",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5970,
            "description": "The sound has been interrupted.",
            "itemtype": "method",
            "name": "_interrupt",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 5981,
            "description": "Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\nsrc is loaded, otherwise playback will fail.",
            "itemtype": "method",
            "name": "_beginPlaying",
            "params": [
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig object.",
                    "type": "PlayPropsConfig"
                }
            ],
            "return": {
                "description": "If playback succeeded.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6012,
            "description": "Play has failed, which can happen for a variety of reasons.\nCleans up instance and dispatches failed event",
            "itemtype": "method",
            "name": "_playFailed",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6024,
            "description": "Audio has finished playing. Manually loop it if required.",
            "itemtype": "method",
            "name": "_handleSoundComplete",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6046,
            "description": "Handles starting playback when the sound is ready for playing.",
            "itemtype": "method",
            "name": "_handleSoundReady",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6055,
            "description": "Internal function used to update the volume based on the instance volume, master volume, instance mute value,\nand master mute value.",
            "itemtype": "method",
            "name": "_updateVolume",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6065,
            "description": "Internal function used to update the pan",
            "itemtype": "method",
            "name": "_updatePan",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6075,
            "description": "Internal function used to update the startTime of the audio.",
            "itemtype": "method",
            "name": "_updateStartTime",
            "access": "protected",
            "tagname": "",
            "since": "0.6.1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6085,
            "description": "Internal function used to update the duration of the audio.",
            "itemtype": "method",
            "name": "_updateDuration",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6095,
            "description": "Internal function used to get the duration of the audio from the source we'll be playing.",
            "itemtype": "method",
            "name": "_updateDuration",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6105,
            "description": "Internal function that calculates the current position of the playhead and sets this._position to that value",
            "itemtype": "method",
            "name": "_calculateCurrentPosition",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6115,
            "description": "Internal function used to update the position of the playhead.",
            "itemtype": "method",
            "name": "_updatePosition",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6125,
            "description": "Internal function called when looping is removed during playback.",
            "itemtype": "method",
            "name": "_removeLooping",
            "params": [
                {
                    "name": "value",
                    "description": "The number of times to loop after play.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6136,
            "description": "Internal function called when looping is added during playback.",
            "itemtype": "method",
            "name": "_addLooping",
            "params": [
                {
                    "name": "value",
                    "description": "The number of times to loop after play.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6147,
            "description": "Internal function called when pausing playback",
            "itemtype": "method",
            "name": "_pause",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6157,
            "description": "Internal function called when resuming playback",
            "itemtype": "method",
            "name": "_resume",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6167,
            "description": "Internal function called when stopping playback",
            "itemtype": "method",
            "name": "_handleStop",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6177,
            "description": "Internal function called when AbstractSoundInstance is being cleaned up",
            "itemtype": "method",
            "name": "_handleCleanUp",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6187,
            "description": "Internal function called when AbstractSoundInstance has played to end and is looping",
            "itemtype": "method",
            "name": "_handleLoop",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6221,
            "description": "The capabilities of the plugin.\nmethod and is used internally.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6232,
            "description": "Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6239,
            "description": "Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\nis currently loading, or has completed loading.  Can be used to store non boolean data after loading\nis complete (for example arrayBuffers for web audio).",
            "itemtype": "property",
            "name": "_audioSources",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6249,
            "description": "Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\nand properly destroy them if sources are removed",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6257,
            "description": "The internal master volume value of the plugin.",
            "itemtype": "property",
            "name": "_volume",
            "type": "{Number}",
            "default": "1",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6266,
            "description": "A reference to a loader class used by a plugin that must be set.",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6273,
            "description": "A reference to an AbstractSoundInstance class used by a plugin that must be set.",
            "type": "{Object}",
            "access": "protected",
            "tagname": ";",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6282,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6298,
            "description": "The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6308,
            "description": "Determine if the plugin can be used in the current browser/OS.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6320,
            "description": "Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\nNote all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\ncan use to assist with preloading.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "loadItem",
                    "description": "An Object containing the source of the audio\nNote that not every plugin will manage this value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A result object, containing a \"tag\" for preloading purposes.",
                "type": "Object"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6342,
            "description": "Internally preload a sound.",
            "itemtype": "method",
            "name": "preload",
            "params": [
                {
                    "name": "loader",
                    "description": "The sound URI to load.",
                    "type": "Loader"
                }
            ],
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6352,
            "description": "Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\nor has already finished loading.",
            "itemtype": "method",
            "name": "isPreloadStarted",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6363,
            "description": "Checks if preloading has finished for a specific source.",
            "itemtype": "method",
            "name": "isPreloadComplete",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to load.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6373,
            "description": "Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.",
            "itemtype": "method",
            "name": "removeSound",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to unload.",
                    "type": "String"
                }
            ],
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6390,
            "description": "Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.",
            "itemtype": "method",
            "name": "removeAllSounds",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to unload.",
                    "type": "String"
                }
            ],
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6401,
            "description": "Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "src",
                    "description": "The sound source to use.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "Audio sprite property used to apply an offset, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Audio sprite property used to set the time the clip plays for, in milliseconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A sound instance for playback and control.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6419,
            "description": "Set the master volume of the plugin, which affects all SoundInstances.",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The volume to set, between 0 and 1.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If the plugin processes the setVolume call (true). The Sound class will affect all the\ninstances manually otherwise.",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6432,
            "description": "Get the master volume of the plugin, which affects all SoundInstances.",
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The volume level, between 0 and 1.",
                "type": "Number"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6441,
            "description": "Mute all sounds via the plugin.",
            "itemtype": "method",
            "name": "setMute",
            "params": [
                {
                    "name": "value",
                    "description": "If all sound should be muted or not. Note that plugin-level muting just looks up\nthe mute value of Sound {{#crossLink \"Sound/getMute\"}}{{/crossLink}}, so this property is not used here.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the mute call succeeds.",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6460,
            "description": "Handles internal preload completion.",
            "itemtype": "method",
            "name": "_handlePreloadComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6475,
            "description": "Handles internal preload erros",
            "itemtype": "method",
            "name": "_handlePreloadError",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6485,
            "description": "Set the gain value for master audio. Should not be called externally.",
            "itemtype": "method",
            "name": "_updateVolume",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6525,
            "description": "web audio context required for decoding audio",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "static": 1,
            "class": "Graphics.WebAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6554,
            "description": "The audio has been decoded.",
            "itemtype": "method",
            "name": "handleAudioDecoded",
            "params": [
                {
                    "name": "decoded",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6596,
            "description": "NOTE this is only intended for use by advanced users.\n<br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "gainNode",
            "type": "{AudioGainNode}",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6606,
            "description": "NOTE this is only intended for use by advanced users.\n<br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "panNode",
            "type": "{AudioPannerNode}",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6618,
            "description": "NOTE this is only intended for use by advanced users.\n<br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "sourceNode",
            "type": "{AudioNode}",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6630,
            "description": "Timeout that is created internally to handle sound playing to completion.\nStored so we can remove it when stop, pause, or cleanup are called",
            "itemtype": "property",
            "name": "_soundCompleteTimeout",
            "type": "{timeoutVariable}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6641,
            "description": "NOTE this is only intended for use by very advanced users.\n_sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\nlooping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_sourceNodeNext",
            "type": "{AudioNode}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6654,
            "description": "Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.",
            "itemtype": "property",
            "name": "_playbackStartTime",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6674,
            "description": "Note this is only intended for use by advanced users.\n<br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6684,
            "description": "Note this is only intended for use by advanced users.\n<br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \nThis is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_scratchBuffer",
            "type": "{AudioBufferSourceNode}",
            "static": 1,
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6694,
            "description": "Note this is only intended for use by advanced users.\n<br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>",
            "itemtype": "property",
            "name": "destinationNode",
            "type": "{AudioNode}",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6704,
            "description": "Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.",
            "itemtype": "property",
            "name": "_panningModel",
            "type": "{Number / String}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6763,
            "description": "Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection",
            "itemtype": "method",
            "name": "_cleanUpAudioNode",
            "params": [
                {
                    "name": "audioNode",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "AudioNode"
            },
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6799,
            "description": "Creates an audio node using the current src and context, connects it to the gain node, and starts playback.",
            "itemtype": "method",
            "name": "_createAndPlayAudioNode",
            "params": [
                {
                    "name": "startTime",
                    "description": "The time to add this to the web audio context, in seconds.",
                    "type": "Number"
                },
                {
                    "name": "offset",
                    "description": "The amount of time into the src audio to start playback, in seconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "AudioNode"
            },
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6930,
            "description": "Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.",
            "itemtype": "property",
            "name": "_panningModel",
            "type": "{Number / String}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6938,
            "description": "The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\nneed to be created within this context.",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6946,
            "description": "A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\nIt is connected to <code>context.destination</code>.\n\nCan be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.",
            "itemtype": "property",
            "name": "dynamicsCompressorNode",
            "type": "{AudioNode}",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6957,
            "description": "A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n\nCan be accessed by advanced users through createjs.Sound.activePlugin.gainNode.",
            "itemtype": "property",
            "name": "gainNode",
            "type": "{AudioGainNode}",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6983,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\nmethod and is used internally.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 6994,
            "description": "Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.",
            "itemtype": "property",
            "name": "_panningModel",
            "type": "{Number / String}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7003,
            "description": "The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\nneed to be created within this context.\n\nAdvanced users can set this to an existing context, but <b>must</b> do so before they call\n{{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7016,
            "description": "The scratch buffer that will be assigned to the buffer property of a source node on close.\nWorks around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n\nAdvanced users can set this to an existing source node, but <b>must</b> do so before they call\n{{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_scratchBuffer",
            "type": "{AudioBuffer}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7030,
            "description": "Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\nempty sound.",
            "itemtype": "property",
            "name": "_unlocked",
            "type": "{boolean}",
            "since": "0.6.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7042,
            "description": "Determine if the plugin can be used in the current browser/OS.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7058,
            "description": "Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\nrequire the first sound to be played inside of a user initiated event (touch/click).  This is called when\n{{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\nfor example).\n\n<h4>Example</h4>\n\n    function handleTouch(event) {\n        createjs.WebAudioPlugin.playEmptySound();\n    }",
            "itemtype": "method",
            "name": "playEmptySound",
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7084,
            "description": "Determine if XHR is supported, which is necessary for web audio.",
            "itemtype": "method",
            "name": "_isFileXHRSupported",
            "return": {
                "description": "If XHR is supported.",
                "type": "Boolean"
            },
            "since": "0.4.2",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7117,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7175,
            "description": "Set up compatibility if only deprecated web audio calls are supported.\nSee http://www.w3.org/TR/webaudio/#DeprecationNotes\nNeeded so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\ndon't support new calls.",
            "itemtype": "method",
            "name": "_compatibilitySetUp",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "since": "0.4.2",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7203,
            "description": "Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\na `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\nwill fail if the user presses for too long, indicating a scroll event instead of a click event.\n\nNote that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\na `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\nstick with `mousedown` and `touchend`.",
            "itemtype": "method",
            "name": "_unlock",
            "since": "0.6.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7233,
            "description": "Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.",
            "itemtype": "method",
            "name": "_addPropsToClasses",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7251,
            "description": "Set the gain value for master audio. Should not be called externally.",
            "itemtype": "method",
            "name": "_updateVolume",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7288,
            "description": "A hash lookup of each base audio tag, indexed by the audio source.",
            "itemtype": "property",
            "name": "_tags",
            "type": "{{}}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7297,
            "description": "An object pool for html audio tags",
            "itemtype": "property",
            "name": "_tagPool",
            "type": "{TagPool}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7306,
            "description": "A hash lookup of if a base audio tag is available, indexed by the audio source",
            "itemtype": "property",
            "name": "_tagsUsed",
            "type": "{{}}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7316,
            "description": "Get an audio tag with the given source.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7340,
            "description": "Return an audio tag to the pool.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                },
                {
                    "name": "tag",
                    "description": "Audio tag to set.",
                    "type": "HTMLElement"
                }
            ],
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7356,
            "description": "Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "src",
                    "description": "The source for the tag",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the TagPool was deleted.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7372,
            "description": "Gets the duration of the src audio in milliseconds",
            "itemtype": "method",
            "name": "getDuration",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Duration of src in milliseconds",
                "type": "Number"
            },
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7389,
            "description": "The TagPool is an object pool for HTMLAudio tag instances.\n#class TagPool",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the channel.",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7398,
            "description": "A list of all available tags in the pool.\n#property tags",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7412,
            "description": "Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n#method get",
            "return": {
                "description": "An HTML audio tag.",
                "type": "HTMLAudioElement"
            },
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7428,
            "description": "Put an HTMLAudioElement back in the pool for use.\n#method set",
            "params": [
                {
                    "name": "tag",
                    "description": "HTML audio tag",
                    "type": "HTMLAudioElement"
                }
            ],
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7448,
            "description": "Create an HTML audio tag.\n#method _createTag",
            "params": [
                {
                    "name": "src",
                    "description": "The source file to set for the audio tag.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an HTML audio tag.",
                "type": "HTMLElement"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7514,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7524,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7601,
            "description": "Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.",
            "itemtype": "method",
            "name": "_handleTagReady",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7643,
            "description": "Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener",
            "itemtype": "method",
            "name": "_handleSetPositionSeek",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7655,
            "description": "Timer used to loop audio sprites.\nNOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n(up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired",
            "itemtype": "method",
            "name": "_handleAudioSpriteLoop",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7778,
            "description": "This is no longer needed as we are now using object pooling for tags.\n\n<b>NOTE this property only exists as a limitation of HTML audio.</b>",
            "itemtype": "property",
            "name": "defaultNumChannels",
            "type": "{Number}",
            "default": "2",
            "since": "0.4.0",
            "deprecated": true,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7804,
            "description": "The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\nThe actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\nAudio sprites work around this limitation.",
            "itemtype": "property",
            "name": "MAX_INSTANCES",
            "type": "{Number}",
            "default": "30",
            "static": 1,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7815,
            "description": "Event constant for the \"canPlayThrough\" event for cleaner code.",
            "itemtype": "property",
            "name": "_AUDIO_READY",
            "type": "{String}",
            "default": "canplaythrough",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7825,
            "description": "Event constant for the \"ended\" event for cleaner code.",
            "itemtype": "property",
            "name": "_AUDIO_ENDED",
            "type": "{String}",
            "default": "ended",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7835,
            "description": "Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.",
            "itemtype": "property",
            "name": "_AUDIO_SEEKED",
            "type": "{String}",
            "default": "seeked",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7845,
            "description": "Event constant for the \"stalled\" event for cleaner code.",
            "itemtype": "property",
            "name": "_AUDIO_STALLED",
            "type": "{String}",
            "default": "stalled",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7855,
            "description": "Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\nThis event callsback ever 15 to 250ms and can be dropped by the browser for performance.",
            "itemtype": "property",
            "name": "_TIME_UPDATE",
            "type": "{String}",
            "default": "timeupdate",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7866,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\nmethod. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for an overview of all\nof the available properties.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7879,
            "description": "Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\nbrowsers, but is disabled in iOS because of its limitations.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js",
            "line": 7891,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.min.js",
            "line": 13,
            "description": "SoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "class": "Graphics.SoundJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 46,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.SoundJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 54,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.SoundJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 74,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 110,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 170,
            "description": "Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\nthat value.  Returns -1 if value is not found.\n\n     var i = createjs.indexOf(myArray, myElementToFind);",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "array",
                    "description": "Array to search for searchElement",
                    "type": "Array"
                },
                {
                    "name": "searchElement",
                    "description": "Element to find in array."
                }
            ],
            "return": {
                "description": "The first index of searchElement in array.",
                "type": "Number"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 213,
            "description": "A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\ncallback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\nmethod gets called in the correct scope.\n\nAdditional arguments can be passed that will be applied to the function when it is called.\n\n<h4>Example</h4>\n\n     myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\n     function myHandler(arg1, arg2) {\n          // This gets called when myObject.myCallback is executed.\n     }",
            "itemtype": "method",
            "name": "proxy",
            "params": [
                {
                    "name": "method",
                    "description": "The function to call",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope to call the method name on",
                    "type": "Object"
                },
                {
                    "name": "arg",
                    "description": "* Arguments that are appended to the callback for additional params.",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 256,
            "description": "An object that determines the current browser, version, operating system, and other environment\nvariables via user agent string.\n\nUsed for audio because feature detection is unable to detect the many limitations of mobile devices.\n\n<h4>Example</h4>\n\n     if (createjs.BrowserDetect.isIOS) { // do stuff }",
            "itemtype": "property",
            "name": "BrowserDetect",
            "type": "{Object}",
            "is_constructor": 1,
            "static": 1,
            "class": "Utility Methods",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "isFirefox",
                    "description": "True if our browser is Firefox.",
                    "type": "Boolean"
                },
                {
                    "name": "isOpera",
                    "description": "True if our browser is opera.",
                    "type": "Boolean"
                },
                {
                    "name": "isChrome",
                    "description": "True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\ncompletely different browser with different abilities.",
                    "type": "Boolean"
                },
                {
                    "name": "isIOS",
                    "description": "True if our browser is safari for iOS devices (iPad, iPhone, and iPod).",
                    "type": "Boolean"
                },
                {
                    "name": "isAndroid",
                    "description": "True if our browser is Android.",
                    "type": "Boolean"
                },
                {
                    "name": "isBlackberry",
                    "description": "True if our browser is Blackberry.",
                    "type": "Boolean"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 364,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 371,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 380,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 395,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 419,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 452,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 498,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 528,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 542,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 564,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 618,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 629,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 649,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 659,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 717,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 724,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 733,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 745,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 758,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 767,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 777,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 786,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 796,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 806,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 816,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 827,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 841,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 851,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 860,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 870,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 884,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 893,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 906,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 938,
            "description": "The short error title, which indicates the type of error that occurred.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 945,
            "description": "The verbose error message, containing details about the error.",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 952,
            "description": "Additional data attached to an error.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "class": "Graphics.ErrorEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 992,
            "description": "The amount that has been loaded (out of a total amount)",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Number}",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 999,
            "description": "The total \"size\" of the load.",
            "itemtype": "property",
            "name": "total",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1007,
            "description": "The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1018,
            "description": "Returns a clone of the ProgressEvent instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "ProgressEvent"
            },
            "class": "Graphics.ProgressEvent",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1050,
            "description": "The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\nstring (recommended), or an HTML tag.\nThis can also be an object, but in that case it has to include a type and be handled by a plugin.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1060,
            "description": "The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\nbe set manually. This is helpful in cases where a file does not have an extension.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1069,
            "description": "A string identifier which can be used to reference the loaded object. If none is provided, this will be\nautomatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1078,
            "description": "Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\nthat have also set the `maintainOrder` property to `true`. This only applies when the max connections has\nbeen set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\nproperty set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\norder when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.",
            "itemtype": "property",
            "name": "maintainOrder",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1090,
            "description": "A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.",
            "itemtype": "property",
            "name": "callback",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1098,
            "description": "An arbitrary data object, which is included with the loaded object.",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1106,
            "description": "The request method used for HTTP calls. Both {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} or\n{{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\nconstants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "method",
            "type": "{String}",
            "default": "get",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1116,
            "description": "An object hash of name/value pairs to send to the server.",
            "itemtype": "property",
            "name": "values",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1124,
            "description": "An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\nheaders when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\ndefault headers by including them in your headers object.",
            "itemtype": "property",
            "name": "headers",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1134,
            "description": "Enable credentials for XHR requests.",
            "itemtype": "property",
            "name": "withCredentials",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1142,
            "description": "Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\nbased files (json, xml, text, css, js).",
            "itemtype": "property",
            "name": "mimeType",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1151,
            "description": "Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.",
            "itemtype": "property",
            "name": "crossOrigin",
            "type": "{boolean}",
            "default": "Anonymous",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1159,
            "description": "The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "loadTimeout",
            "type": "{Number}",
            "default": "8000 (8 seconds)",
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1172,
            "description": "Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n(level one) loading, as XHR (level 2) provides its own timeout event.",
            "itemtype": "property",
            "name": "LOAD_TIMEOUT_DEFAULT",
            "type": "{number}",
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1181,
            "description": "Create a LoadItem.\n<ul>\n    <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n    <li>LoadItem instances are returned as-is</li>\n    <li>Objects are returned with any needed properties added</li>\n</ul>",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "value",
                    "description": "The load item value",
                    "type": "LoadItem|String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "LoadItem|Object"
            },
            "static": 1,
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1210,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the LoadItem instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "LoadItem"
            },
            "class": "Graphics.LoadItem",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1242,
            "description": "The Regular Expression used to test file URLS for an absolute path.",
            "itemtype": "property",
            "name": "ABSOLUTE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1250,
            "description": "The Regular Expression used to test file URLS for a relative path.",
            "itemtype": "property",
            "name": "RELATIVE_PATH",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1258,
            "description": "The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\nremoved.",
            "itemtype": "property",
            "name": "EXTENSION_PATT",
            "type": "{RegExp}",
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1267,
            "description": "Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n<ul>\n    <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n    `//networkPath`)</li>\n    <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n    <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n    the file path is expected to follow the format `name.ext`.</li>\n</ul>",
            "itemtype": "method",
            "name": "parseURI",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An Object with an `absolute` and `relative` Boolean values, as well as an optional 'extension`\nproperty, which is the lowercase extension.",
                "type": "Object"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1309,
            "description": "Formats an object into a query string for either a POST or GET request.",
            "itemtype": "method",
            "name": "formatQueryString",
            "params": [
                {
                    "name": "data",
                    "description": "The data to convert to a query string.",
                    "type": "Object"
                },
                {
                    "name": "query",
                    "description": "Existing name/value pairs to append on to this query.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1330,
            "description": "A utility method that builds a file path using a source and a data object, and formats it into a new path.",
            "itemtype": "method",
            "name": "buildPath",
            "params": [
                {
                    "name": "src",
                    "description": "The source path to add values to.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Object used to append values to this request as a query string. Existing parameters on the\npath will be preserved.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "A formatted string that contains the path and the supplied parameters.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1359,
            "itemtype": "method",
            "name": "isCrossDomain",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from a different domain than the current location.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1379,
            "itemtype": "method",
            "name": "isLocal",
            "params": [
                {
                    "name": "item",
                    "description": "A load item with a `src` property",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\nwell.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1392,
            "description": "Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\nspecifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\nback using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\na binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n{{#crossLink \"AbstractLoader\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "isBinary",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is binary.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1413,
            "description": "Check if item is a valid HTMLImageElement",
            "itemtype": "method",
            "name": "isImageTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1424,
            "description": "Check if item is a valid HTMLAudioElement",
            "itemtype": "method",
            "name": "isAudioTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1439,
            "description": "Check if item is a valid HTMLVideoElement",
            "itemtype": "method",
            "name": "isVideoTag",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1454,
            "description": "Determine if a specific type is a text-based asset, and should be loaded as UTF-8.",
            "itemtype": "method",
            "name": "isText",
            "params": [
                {
                    "name": "type",
                    "description": "The item type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the specified type is text.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1477,
            "description": "Determine the type of the object using common extensions. Note that the type can be passed in with the load item\nif it is an unusual extension.",
            "itemtype": "method",
            "name": "getTypeByExtension",
            "params": [
                {
                    "name": "extension",
                    "description": "The file extension to use to determine the load type.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The determined load type (for example, <code>AbstractLoader.IMAGE</code>). Will return `null` if\nthe type can not be determined by the extension.",
                "type": "String"
            },
            "static": 1,
            "class": "Graphics.RequestUtils",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1552,
            "description": "If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\nused for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "loaded",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1561,
            "description": "Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\nis readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\ninstead.",
            "itemtype": "property",
            "name": "canceled",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1572,
            "description": "The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\n<h4>Example</h4>\n\n    var queue = new createjs.LoadQueue();\n    queue.loadFile(\"largeImage.png\");\n    queue.on(\"progress\", function() {\n        console.log(\"Progress:\", queue.progress, event.progress);\n    });",
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1589,
            "description": "The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\nsupported types.",
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1597,
            "description": "A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\nconverts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\ncan be overridden to provide custom formatting.\n\nOptionally, a resultFormatter can return a callback function in cases where the formatting needs to be\nasynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\nto handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\ncalled in the current scope, as well as the success and error callbacks.\n\n<h4>Example asynchronous resultFormatter</h4>\n\n\tfunction _formatResult(loader) {\n\t\treturn function(success, error) {\n\t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t\tsuccess(result);\n\t\t}\n\t}",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "{Function}",
            "default": "null",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1622,
            "description": "The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\nbut will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_item",
            "type": "{LoadItem|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1635,
            "description": "Whether the loader will try and load content using XHR (true) or HTML tags (false).",
            "itemtype": "property",
            "name": "_preferXHR",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1643,
            "description": "The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\nitems that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\nThe result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.",
            "itemtype": "property",
            "name": "_result",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1653,
            "description": "The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\nmethod, and passing `true`.",
            "itemtype": "property",
            "name": "_rawResult",
            "type": "{Object|String}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1662,
            "description": "A list of items that loaders load behind the scenes. This does not include the main item the loader is\nresponsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n{{#crossLink \"ManifestLoader\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_loadItems",
            "type": "{null}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1672,
            "description": "The attribute the items loaded using tags use for the source.",
            "type": "{string}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1680,
            "description": "An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1696,
            "description": "Defines a POST request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "POST",
            "type": "{string}",
            "default": "post",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1705,
            "description": "Defines a GET request, use for a method value when loading data.",
            "itemtype": "property",
            "name": "GET",
            "type": "{string}",
            "default": "get",
            "static": 1,
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1714,
            "description": "The preload type for generic binary types. Note that images are loaded as binary files when using XHR.",
            "itemtype": "property",
            "name": "BINARY",
            "type": "{String}",
            "default": "binary",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1724,
            "description": "The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n&lt;style&gt; tag when loaded with tags.",
            "itemtype": "property",
            "name": "CSS",
            "type": "{String}",
            "default": "css",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1735,
            "description": "The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.",
            "itemtype": "property",
            "name": "IMAGE",
            "type": "{String}",
            "default": "image",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1745,
            "description": "The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n&lt;script&gt; tag.\n\nSince version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\nthe body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\nonly tag-loaded scripts are injected.",
            "itemtype": "property",
            "name": "JAVASCRIPT",
            "type": "{String}",
            "default": "javascript",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1760,
            "description": "The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\nno matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\nmust contain a matching wrapper function.",
            "itemtype": "property",
            "name": "JSON",
            "type": "{String}",
            "default": "json",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1773,
            "description": "The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\nJavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\nNote that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\nproperty is set to.",
            "itemtype": "property",
            "name": "JSONP",
            "type": "{String}",
            "default": "jsonp",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1786,
            "description": "The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\nand parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\nArray of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\nmethod. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\nregardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.",
            "itemtype": "property",
            "name": "MANIFEST",
            "type": "{String}",
            "default": "manifest",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1800,
            "description": "The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n&lt;audio&gt; tag.",
            "itemtype": "property",
            "name": "SOUND",
            "type": "{String}",
            "default": "sound",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1811,
            "description": "The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n&lt;video&gt; tag.",
            "itemtype": "property",
            "name": "VIDEO",
            "type": "{String}",
            "default": "video",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1822,
            "description": "The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.",
            "itemtype": "property",
            "name": "SPRITESHEET",
            "type": "{String}",
            "default": "spritesheet",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1832,
            "description": "The preload type for SVG files.",
            "itemtype": "property",
            "name": "SVG",
            "type": "{String}",
            "default": "svg",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1842,
            "description": "The preload type for text files, which is also the default file type if the type can not be determined. Text is\nloaded as raw text.",
            "itemtype": "property",
            "name": "TEXT",
            "type": "{String}",
            "default": "text",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1853,
            "description": "The preload type for xml files. XML is loaded into an XML document.",
            "itemtype": "property",
            "name": "XML",
            "type": "{String}",
            "default": "xml",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1864,
            "description": "The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\nversion 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "progress",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1871,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.",
            "itemtype": "event",
            "name": "loadstart",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.1",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1879,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1887,
            "description": "The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\nencountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\njust a regular {{#crossLink \"Event\"}}{{/crossLink}}.",
            "itemtype": "event",
            "name": "error",
            "since": "0.3.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1895,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\nThis enables loaders to maintain internal queues, and surface file load errors.",
            "itemtype": "event",
            "name": "fileerror",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The even type (\"fileerror\")",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "item that encountered the error",
                    "type": "LoadItem|object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1905,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\nloaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\nand notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\nslightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"fileload\")",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\nor {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\nobject will contain that value as a `src` property.",
                    "type": "Object"
                },
                {
                    "name": "result",
                    "description": "The HTML tag or parsed result of the loaded item.",
                    "type": "Object"
                },
                {
                    "name": "rawResult",
                    "description": "The unprocessed result, usually the raw text or binary data before it is converted\nto a usable object.",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1922,
            "description": "The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\nThis allows updates to the loader for specific loading needs, such as binary or XHR image loading.",
            "itemtype": "event",
            "name": "initialize",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type (\"initialize\")",
                    "type": "String"
                },
                {
                    "name": "loader",
                    "description": "The loader that has been initialized.",
                    "type": "AbstractLoader"
                }
            ],
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1932,
            "description": "Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\npassed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n{{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\nbe a {{#crossLink \"LoadItem\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "getItem",
            "return": {
                "description": "The manifest item that this loader is responsible for loading.",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1945,
            "description": "Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\nevent is dispatched.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Determines if the returned result will be the formatted content, or the raw loaded\ndata (if it exists).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1958,
            "description": "Return the `tag` this object creates or uses for loading.",
            "itemtype": "method",
            "name": "getTag",
            "return": {
                "description": "The tag instance",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1968,
            "description": "Set the `tag` this item uses for loading.",
            "itemtype": "method",
            "name": "setTag",
            "params": [
                {
                    "name": "tag",
                    "description": "The tag instance",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 1978,
            "description": "Begin loading the item. This method is required when using a loader by itself.\n\n<h4>Example</h4>\n\n     var queue = new createjs.LoadQueue();\n     queue.on(\"complete\", handleComplete);\n     queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n     queue.load();",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2007,
            "description": "Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\nthe background), but events will not longer be dispatched.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2017,
            "description": "Clean up the loader.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2038,
            "description": "Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto expose items it loads internally.",
            "itemtype": "method",
            "name": "getLoadedItems",
            "return": {
                "description": "A list of the items loaded by the loader.",
                "type": "Array"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2051,
            "description": "Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n{{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\nOther loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\nwhich uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.",
            "itemtype": "method",
            "name": "_createRequest",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2067,
            "description": "Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\nby loaders that require tag loading.",
            "itemtype": "method",
            "name": "_createTag",
            "params": [
                {
                    "name": "src",
                    "description": "The tag source",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The tag that was created",
                "type": "HTMLElement"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2077,
            "description": "Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendLoadStart",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2088,
            "description": "Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_sendProgress",
            "params": [
                {
                    "name": "value",
                    "description": "The progress of the loaded item, or an object containing <code>loaded</code>\nand <code>total</code> properties.",
                    "type": "Number | Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2110,
            "description": "Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event",
            "itemtype": "method",
            "name": "_sendComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2130,
            "description": "Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\nevent for details on the event payload.",
            "itemtype": "method",
            "name": "_sendError",
            "params": [
                {
                    "name": "event",
                    "description": "The event object containing specific error properties.",
                    "type": "ErrorEvent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2145,
            "description": "Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\ndo not cause issues after the queue has been cleaned up.",
            "itemtype": "method",
            "name": "_isCanceled",
            "return": {
                "description": "If the loader has been canceled.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2159,
            "description": "A custom result formatter function, which is called just before a request dispatches its complete event. Most\nloader types already have an internal formatter, but this can be user-overridden for custom formatting. The\nformatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.",
            "itemtype": "property",
            "name": "resultFormatter",
            "type": "Function",
            "return": {
                "description": "The formatted result",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2170,
            "description": "Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\nthis method can be overridden for custom behaviours.",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The event that the internal request dispatches.",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2211,
            "description": "The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "result",
                    "description": "The formatted result",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2223,
            "description": "The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\nfunctions.",
            "itemtype": "method",
            "name": "_resultFormatSuccess",
            "params": [
                {
                    "name": "error",
                    "description": "The error event",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2234,
            "itemtype": "method",
            "name": "buildPath",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "deprecationMessage": "Use the {{#crossLink \"RequestUtils\"}}{{/crossLink}} method {{#crossLink \"RequestUtils/buildPath\"}}{{/crossLink}}\ninstead.",
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2244,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.AbstractLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2305,
            "description": "Creates a new tag for loading if it doesn't exist yet.",
            "itemtype": "method",
            "name": "_createTag",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2322,
            "description": "Before the item loads, set its mimeType and responseType.",
            "itemtype": "property",
            "name": "_updateXHR",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics",
            "subprops": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ]
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2335,
            "description": "The result formatter for media files.",
            "itemtype": "method",
            "name": "_formatResult",
            "params": [
                {
                    "name": "loader",
                    "description": "",
                    "type": "AbstractLoader"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLVideoElement|HTMLAudioElement"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractMediaLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2382,
            "description": "Begin a load.",
            "itemtype": "method",
            "name": "load",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2388,
            "description": "Clean up a request.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2394,
            "description": "Cancel an in-progress request.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Graphics.AbstractRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2425,
            "description": "The HTML tag instance that is used to load.",
            "itemtype": "property",
            "name": "_tag",
            "type": "{HTMLElement}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2433,
            "description": "The tag attribute that specifies the source, such as \"src\", \"href\", etc.",
            "itemtype": "property",
            "name": "_tagSrcAttribute",
            "type": "{String}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2441,
            "description": "A method closure used for handling the tag load event.",
            "itemtype": "property",
            "name": "_loadedHandler",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2449,
            "description": "Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.",
            "itemtype": "property",
            "name": "_addedToDOM",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2457,
            "description": "Determines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "type": "{null}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2500,
            "description": "Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\nand LINK tags), but other cases may exist.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2517,
            "description": "Handle any error events from the tag.",
            "itemtype": "method",
            "name": "_handleError",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2527,
            "description": "Handle the tag's onload callback.",
            "itemtype": "method",
            "name": "_handleTagComplete",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2542,
            "description": "The tag request has not loaded within the time specified in loadTimeout.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2553,
            "description": "Remove event listeners, but don't destroy the request object",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2577,
            "description": "Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\nthat is already in a load, but not complete.",
            "itemtype": "method",
            "name": "_handleStalled",
            "access": "private",
            "tagname": "",
            "class": "Graphics.TagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2655,
            "description": "An XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.MediaTagRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2709,
            "description": "A reference to the XHR request used to load the content.",
            "itemtype": "property",
            "name": "_request",
            "type": "{XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2717,
            "description": "A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\ntypically IE9).",
            "itemtype": "property",
            "name": "_loadTimeout",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2726,
            "description": "The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\nthe version, so we use capabilities to make a best guess.",
            "itemtype": "property",
            "name": "_xhrLevel",
            "type": "{Number}",
            "default": "1",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2736,
            "description": "The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\nnull until the file is loaded.",
            "itemtype": "property",
            "name": "_response",
            "type": "{mixed}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2745,
            "description": "The response of the loaded file before it is modified. In most cases, content is converted from raw text to\nan HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\nwant to access the raw content as it was loaded.",
            "itemtype": "property",
            "name": "_rawResponse",
            "type": "{String|Object}",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2774,
            "description": "A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.",
            "itemtype": "property",
            "name": "ACTIVEX_VERSIONS",
            "type": "{Array}",
            "since": "0.4.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2791,
            "description": "Look up the loaded result.",
            "itemtype": "method",
            "name": "getResult",
            "params": [
                {
                    "name": "raw",
                    "description": "Return a raw result instead of a formatted result. This applies to content\nloaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\nreturned instead.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A result object containing the content that was loaded, such as:\n<ul>\n     <li>An image tag (&lt;image /&gt;) for images</li>\n     <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n     HTML head.</li>\n     <li>A style tag for CSS (&lt;style /&gt;)</li>\n     <li>Raw text for TEXT</li>\n     <li>A formatted JavaScript object defined by JSON</li>\n     <li>An XML document</li>\n     <li>An binary arraybuffer loaded by XHR</li>\n</ul>\nNote that if a raw result is requested, but not found, the result will be returned instead.",
                "type": "Object"
            },
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2881,
            "description": "Get all the response headers from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\nfor Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\nexcluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\npair.",
            "itemtype": "method",
            "name": "getAllResponseHeaders",
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2900,
            "description": "Get a specific response header from the XmlHttpRequest.\n\n<strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\nheader, unless the field name is Set-Cookie or Set-Cookie2.",
            "itemtype": "method",
            "name": "getResponseHeader",
            "params": [
                {
                    "name": "header",
                    "description": "The header name to retrieve.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "since": "0.4.1",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2919,
            "description": "The XHR request has reported progress.",
            "itemtype": "method",
            "name": "_handleProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR progress event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2934,
            "description": "The XHR request has reported a load start.",
            "itemtype": "method",
            "name": "_handleLoadStart",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR loadStart event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2945,
            "description": "The XHR request has reported an abort event.",
            "itemtype": "method",
            "name": "handleAbort",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR abort event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2956,
            "description": "The XHR request has reported an error event.",
            "itemtype": "method",
            "name": "_handleError",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR error event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2967,
            "description": "The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\nevent, so we must monitor the readyStateChange to determine if the file is loaded.",
            "itemtype": "method",
            "name": "_handleReadyStateChange",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR readyStateChange event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 2980,
            "description": "The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n<code>request.readyState == 4</code>. Only the first call to this method will be processed.",
            "itemtype": "method",
            "name": "_handleLoad",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR load event.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3020,
            "description": "The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\ncallback.",
            "itemtype": "method",
            "name": "_handleTimeout",
            "params": [
                {
                    "name": "event",
                    "description": "The XHR timeout event. This is occasionally null when called by the backup setTimeout.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3034,
            "description": "Determine if there is an error in the current load. This checks the status of the request for problem codes. Note\nthat this does not check for an actual response. Currently, it only checks for 404 or 0 error code.",
            "itemtype": "method",
            "name": "_checkError",
            "return": {
                "description": "If the request status returns an error code.",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3053,
            "description": "Validate the response. Different browsers have different approaches, some of which throw errors when accessed\nin other browsers. If there is no response, the <code>_response</code> property will remain null.",
            "itemtype": "method",
            "name": "_getResponse",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3087,
            "description": "Create an XHR request. Depending on a number of factors, we get totally different results.\n<ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n     <li>XMLHttpRequest are created when available.</li>\n     <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n     <li>Text requests override the mime type if possible</li>\n     <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n     <li>Binary loads set the response type to \"arraybuffer\"</li></ol>",
            "itemtype": "method",
            "name": "_createXHR",
            "params": [
                {
                    "name": "item",
                    "description": "The requested item that is being loaded.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If an XHR request or equivalent was successfully created.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3182,
            "description": "A request has completed (or failed or canceled), and needs to be disposed.",
            "itemtype": "method",
            "name": "_clean",
            "access": "private",
            "tagname": "",
            "class": "Graphics.XHRRequest",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3259,
            "description": "Determines if the loader can load a specific item. This loader can only load items that are of type\n{{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "canLoadItem",
            "params": [
                {
                    "name": "item",
                    "description": "The LoadItem that a LoadQueue is trying to load.",
                    "type": "LoadItem|Object"
                }
            ],
            "return": {
                "description": "Whether the loader can load the item.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.SoundLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3397,
            "description": "How to interrupt any currently playing instances of audio with the same source,\nif the maximum number of instances of the sound are already playing. Values are defined as\n<code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n{{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "interrupt",
            "type": "{string}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3408,
            "description": "The amount of time to delay the start of audio playback, in milliseconds.",
            "itemtype": "property",
            "name": "delay",
            "type": "{Number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3416,
            "description": "The offset from the start of the audio to begin playback, in milliseconds.",
            "itemtype": "property",
            "name": "offset",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3424,
            "description": "How many times the audio loops when it reaches the end of playback. The default is 0 (no\nloops), and -1 can be used for infinite playback.",
            "itemtype": "property",
            "name": "loop",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3433,
            "description": "The volume of the sound, between 0 and 1. Note that the master volume is applied\nagainst the individual volume.",
            "itemtype": "property",
            "name": "volume",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3442,
            "description": "The left-right pan of the sound (if supported), between -1 (left) and 1 (right).",
            "itemtype": "property",
            "name": "pan",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3450,
            "description": "Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.",
            "itemtype": "property",
            "name": "startTime",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3458,
            "description": "Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.",
            "itemtype": "property",
            "name": "duration",
            "type": "{number}",
            "default": "null",
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3471,
            "description": "Creates a PlayPropsConfig from another PlayPropsConfig or an Object.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "value",
                    "description": "The play properties",
                    "type": "PlayPropsConfig|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "PlayPropsConfig"
            },
            "static": 1,
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3490,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.\n\n<h4>Example</h4>\n\n     var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the PlayPropsConfig instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "PlayPropsConfig"
            },
            "class": "Graphics.PlayPropsConfig",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3705,
            "description": "The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\ninstances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_ANY",
            "type": "{String}",
            "default": "any",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3715,
            "description": "The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\nleast distance in the audio track, if the maximum number of instances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_EARLY",
            "type": "{String}",
            "default": "early",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3725,
            "description": "The interrupt value to interrupt the currently playing instance with the same source that progressed the most\ndistance in the audio track, if the maximum number of instances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_LATE",
            "type": "{String}",
            "default": "late",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3735,
            "description": "The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\ninstances of the sound are already playing.",
            "itemtype": "property",
            "name": "INTERRUPT_NONE",
            "type": "{String}",
            "default": "none",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3745,
            "description": "Defines the playState of an instance that is still initializing.",
            "itemtype": "property",
            "name": "PLAY_INITED",
            "type": "{String}",
            "default": "playInited",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3754,
            "description": "Defines the playState of an instance that is currently playing or paused.",
            "itemtype": "property",
            "name": "PLAY_SUCCEEDED",
            "type": "{String}",
            "default": "playSucceeded",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3763,
            "description": "Defines the playState of an instance that was interrupted by another instance.",
            "itemtype": "property",
            "name": "PLAY_INTERRUPTED",
            "type": "{String}",
            "default": "playInterrupted",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3772,
            "description": "Defines the playState of an instance that completed playback.",
            "itemtype": "property",
            "name": "PLAY_FINISHED",
            "type": "{String}",
            "default": "playFinished",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3781,
            "description": "Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\nwhen the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.",
            "itemtype": "property",
            "name": "PLAY_FAILED",
            "type": "{String}",
            "default": "playFailed",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3791,
            "description": "A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\ncan play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\nsupport additional media types.\n\nNOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\nMore details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\nA very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.",
            "itemtype": "property",
            "name": "SUPPORTED_EXTENSIONS",
            "type": "{Array[String]}",
            "default": "[\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]",
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3808,
            "description": "Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\nthat support so plugins can accurately determine if an extension is supported.  Adding to this list can help\nplugins determine more accurately if an extension is supported.\n\nA useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.",
            "itemtype": "property",
            "name": "EXTENSION_MAP",
            "type": "{Object}",
            "since": "0.4.0",
            "default": "{m4a:\"mp4\"}",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3824,
            "description": "The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\nquery strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.",
            "itemtype": "property",
            "name": "FILE_PATTERN",
            "type": "{RegExp}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3836,
            "description": "Determines the default behavior for interrupting other currently playing instances with the same source, if the\nmaximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\nbut this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\nis called without passing a value for interrupt.",
            "itemtype": "property",
            "name": "defaultInterruptBehavior",
            "type": "{String}",
            "default": "Sound.INTERRUPT_NONE, or \"none\"",
            "static": 1,
            "since": "0.4.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3849,
            "description": "An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\nThese are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\nextensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\nto exist in the same location, as only the extension is altered.\n\nNote that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\nand {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n\n<h4>Example</h4>\n\n\tvar sounds = [\n\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n\t];\n\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\tcreatejs.Sound.registerSounds(sounds, assetPath);\n\t// ...\n\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach",
            "itemtype": "property",
            "name": "alternateExtensions",
            "type": "{Array}",
            "since": "0.5.2",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3876,
            "description": "The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\nSound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n{{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "activePlugin",
            "type": "{Object}",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3888,
            "description": "Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\nexample, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\nsound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} instead.\n\n<h4>Example</h4>\n\n    createjs.Sound.volume = 0.5;",
            "itemtype": "property",
            "name": "volume",
            "type": "{Number}",
            "default": "1",
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3919,
            "description": "Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\nseparately and when set will override, but not change the mute property of individual instances. To mute an individual\ninstance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n\n<h4>Example</h4>\n\n    createjs.Sound.muted = true;",
            "itemtype": "property",
            "name": "muted",
            "type": "{Boolean}",
            "default": "false",
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3952,
            "description": "Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\nor if the plugin supports a specific feature. Capabilities include:\n<ul>\n    <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n    <li><b>volume;</b> If the plugin can control audio volume.</li>\n    <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n    if there is no known limit.</li>\n<br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n    <li><b>mp3:</b> If MP3 audio is supported.</li>\n    <li><b>ogg:</b> If OGG audio is supported.</li>\n    <li><b>wav:</b> If WAV audio is supported.</li>\n    <li><b>mpeg:</b> If MPEG audio is supported.</li>\n    <li><b>m4a:</b> If M4A audio is supported.</li>\n    <li><b>mp4:</b> If MP4 audio is supported.</li>\n    <li><b>aiff:</b> If aiff audio is supported.</li>\n    <li><b>wma:</b> If wma audio is supported.</li>\n    <li><b>mid:</b> If mid audio is supported.</li>\n</ul>\n\nYou can get a specific capability of the active plugin using standard object notation\n\n<h4>Example</h4>\n\n     var mp3 = createjs.Sound.capabilities.mp3;\n\nNote this property is read only.",
            "itemtype": "property",
            "name": "capabilities",
            "type": "{Object}",
            "static": 1,
            "readonly": "",
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 3996,
            "description": "Determines if the plugins have been registered. If false, the first call to play() will instantiate the default\nplugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\nIf plugins have been registered, but none are applicable, then sound playback will fail.",
            "itemtype": "property",
            "name": "_pluginsRegistered",
            "type": "{Boolean}",
            "default": "false",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4008,
            "description": "Used internally to assign unique IDs to each AbstractSoundInstance.",
            "itemtype": "property",
            "name": "_lastID",
            "type": "{Number}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4017,
            "description": "An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\nall instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/setVolume\"}}{{/crossLink}}.\nWhen an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\nmethod. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\nmethod.",
            "itemtype": "property",
            "name": "_instances",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4030,
            "description": "An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.",
            "itemtype": "property",
            "name": "_idHash",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4039,
            "description": "An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\nsource, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\nand data.",
            "itemtype": "property",
            "name": "_preloadHash",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4050,
            "description": "An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n{{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_defaultPlayPropsHash",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4074,
            "description": "This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\nso any handler methods should look up the <code>event.src</code> to handle a particular sound.",
            "itemtype": "event",
            "name": "fileload",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "The source of the sound that was loaded.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id passed in when the sound was registered. If one was not provided, it will be null.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Any additional data associated with the item. If not provided, it will be undefined.",
                    "type": "Number|Object",
                    "optional": true
                }
            ],
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4086,
            "description": "This event is fired when a file fails loading internally. This event is fired for each loaded sound,\nso any handler methods should look up the <code>event.src</code> to handle a particular sound.",
            "itemtype": "event",
            "name": "fileerror",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "src",
                    "description": "The source of the sound that was loaded.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id passed in when the sound was registered. If one was not provided, it will be null.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Any additional data associated with the item. If not provided, it will be undefined.",
                    "type": "Number|Object",
                    "optional": true
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4100,
            "description": "Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\nAny load calls that have the matching type or extension will fire the callback method, and use the resulting\nobject, which is potentially modified by Sound. This helps when determining the correct path, as well as\nregistering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.",
            "itemtype": "method",
            "name": "getPreloadHandlers",
            "return": {
                "description": "An object containing:\n<ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n     Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n     <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n     <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>",
                "type": "Object"
            },
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4122,
            "description": "Used to dispatch fileload events from internal loading.",
            "itemtype": "method",
            "name": "_handleLoadComplete",
            "params": [
                {
                    "name": "event",
                    "description": "A loader event."
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4150,
            "description": "Used to dispatch error events from internal preloading.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4177,
            "description": "Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.",
            "itemtype": "method",
            "name": "_registerPlugin",
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether the plugin was successfully initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4195,
            "description": "Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n\n<h4>Example</h4>\n\n     createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n     createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);",
            "itemtype": "method",
            "name": "registerPlugins",
            "params": [
                {
                    "name": "plugins",
                    "description": "An array of plugins classes to install.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Whether a plugin was successfully initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4218,
            "description": "Initialize the default plugins. This method is automatically called when any audio is played or registered before\nthe user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\ndefault plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n\tif (!createjs.initializeDefaultPlugins()) { return; }",
            "itemtype": "method",
            "name": "initializeDefaultPlugins",
            "return": {
                "description": "True if a plugin was initialized, false otherwise.",
                "type": "Boolean"
            },
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4239,
            "description": "Determines if Sound has been initialized, and a plugin has been activated.\n\n<h4>Example</h4>\nThis example sets up a Flash fallback, but only if there is no plugin specified yet.\n\n\tif (!createjs.Sound.isReady()) {\n\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t}",
            "itemtype": "method",
            "name": "isReady",
            "return": {
                "description": "If Sound has initialized a plugin.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4258,
            "description": "Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getCapabilities",
            "return": {
                "description": "An object containing the capabilities of the active plugin.",
                "type": "Object"
            },
            "static": 1,
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4271,
            "description": "Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getCapability",
            "params": [
                {
                    "name": "key",
                    "description": "The capability to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The value of the capability.",
                "type": "Number|Boolean"
            },
            "static": 1,
            "see": [
                "getCapabilities"
            ],
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4286,
            "description": "Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\nfor usage by a plugin, and not for direct interaction.",
            "itemtype": "method",
            "name": "initLoad",
            "params": [
                {
                    "name": "src",
                    "description": "The object to load.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An instance of AbstractLoader.",
                "type": "Object|AbstractLoader"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4299,
            "description": "Internal method for loading sounds.  This should not be called directly.",
            "itemtype": "method",
            "name": "_registerSound",
            "params": [
                {
                    "name": "src",
                    "description": "The object to load, containing src property and optionally containing id and data.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An object with the modified values that were passed in, which defines the sound.\nReturns false if the source cannot be parsed or no plugins can be initialized.\nReturns true if the source is already loaded.",
                "type": "Object"
            },
            "static": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4367,
            "description": "Register an audio file for loading and future playback in Sound. This is automatically called when using\n<a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\nneed to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n\n<h4>Example</h4>\n\n     createjs.Sound.alternateExtensions = [\"mp3\"];\n     createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n     createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n     createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);",
            "itemtype": "method",
            "name": "registerSound",
            "params": [
                {
                    "name": "src",
                    "description": "The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.",
                    "type": "String | Object"
                },
                {
                    "name": "id",
                    "description": "An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Data associated with the item. Sound uses the data parameter as the number of\nchannels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\nfor other information. The audio channels will set a default based on plugin if no value is found.\nSound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n  id used to play the sound later, in the same manner as a sound src with an id.<br/>\n  startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n  duration is the amount of time to play the clip for, in milliseconds.<br/>\nThis allows Sound to support audio sprites that are played back by id.",
                    "type": "Number | Object",
                    "optional": true
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to src for loading.",
                    "type": "String"
                },
                {
                    "name": "defaultPlayProps",
                    "description": "Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\nSee {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.",
                    "type": "Object | PlayPropsConfig"
                }
            ],
            "return": {
                "description": "An object with the modified values that were passed in, which defines the sound.\nReturns false if the source cannot be parsed or no plugins can be initialized.\nReturns true if the source is already loaded.",
                "type": "Object"
            },
            "static": 1,
            "since": "0.4.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4428,
            "description": "Register an array of audio files for loading and future playback in Sound. It is recommended to register all\nsounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\nwhen required.\n\n<h4>Example</h4>\n\n\t\tvar assetPath = \"./myAudioPath/\";\n     var sounds = [\n         {src:\"asset0.ogg\", id:\"example\"},\n         {src:\"asset1.ogg\", id:\"1\", data:6},\n         {src:\"asset2.mp3\", id:\"works\"}\n         {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension\"}, id:\"better\"}\n     ];\n     createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n     createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n     createjs.Sound.registerSounds(sounds, assetPath);",
            "itemtype": "method",
            "name": "registerSounds",
            "params": [
                {
                    "name": "sounds",
                    "description": "An array of objects to load. Objects are expected to be in the format needed for\n{{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\nwith \"id\" and \"data\" being optional.\nYou can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\nNote id is required if src is an object with extension labeled src properties.",
                    "type": "Array"
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to each src when loading.  When creating, playing, or removing\naudio that was loaded with a basePath by src, the basePath must be included.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array of objects with the modified values that were passed in, which defines each sound.\nLike registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\nAlso, it will return true for any values when the source is already loaded.",
                "type": "Object"
            },
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4477,
            "description": "Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n{{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n<br />Note this will stop playback on active instances playing this sound before deleting them.\n<br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\n<h4>Example</h4>\n\n     createjs.Sound.removeSound(\"myID\");\n     createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n     createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n     createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");",
            "itemtype": "method",
            "name": "removeSound",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.",
                    "type": "String | Object"
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to each src when removing.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if sound is successfully removed.",
                "type": "Boolean"
            },
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4529,
            "description": "Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n{{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n<br />Note this will stop playback on active instances playing this audio before deleting them.\n<br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\n<h4>Example</h4>\n\n\t\tassetPath = \"./myPath/\";\n     var sounds = [\n         {src:\"asset0.ogg\", id:\"example\"},\n         {src:\"asset1.ogg\", id:\"1\", data:6},\n         {src:\"asset2.mp3\", id:\"works\"}\n     ];\n     createjs.Sound.removeSounds(sounds, assetPath);",
            "itemtype": "method",
            "name": "removeSounds",
            "params": [
                {
                    "name": "sounds",
                    "description": "An array of objects to remove. Objects are expected to be in the format needed for\n{{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\nYou can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.",
                    "type": "Array"
                },
                {
                    "name": "basePath",
                    "description": "Set a path that will be prepended to each src when removing.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array of Boolean values representing if the sounds with the same array index were\nsuccessfully removed.",
                "type": "Object"
            },
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4571,
            "description": "Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n{{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n<br />Note this will stop playback on all active sound instances before deleting them.\n\n<h4>Example</h4>\n\n    createjs.Sound.removeAllSounds();",
            "itemtype": "method",
            "name": "removeAllSounds",
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4591,
            "description": "Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\nnot completed preloading will not kick off a new internal preload if they are played.\n\n<h4>Example</h4>\n\n    var mySound = \"assetPath/asset0.ogg\";\n    if(createjs.Sound.loadComplete(mySound) {\n        createjs.Sound.play(mySound);\n    }",
            "itemtype": "method",
            "name": "loadComplete",
            "params": [
                {
                    "name": "src",
                    "description": "The src or id that is being loaded.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the src is already loaded.",
                "type": "Boolean"
            },
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4620,
            "description": "Parse the path of a sound. Alternate extensions will be attempted in order if the\ncurrent extension is not supported",
            "itemtype": "method",
            "name": "_parsePath",
            "params": [
                {
                    "name": "value",
                    "description": "The path to an audio source.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\nand returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4650,
            "description": "Parse the path of a sound based on properties of src matching with supported extensions.\nReturns false if none of the properties are supported",
            "itemtype": "method",
            "name": "_parseSrc",
            "params": [
                {
                    "name": "value",
                    "description": "The paths to an audio source, indexed by extension type.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\nand returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4686,
            "description": "Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to play, a\nAbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\nNote that even on sounds with failed playback, you may still be able to call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\nsince the failure could be due to lack of available channels. If the src does not have a supported extension or\nif there is no available plugin, a default AbstractSoundInstance will be returned which will not play any audio, but will not generate errors.\n\n<h4>Example</h4>\n\n     createjs.Sound.on(\"fileload\", handleLoad);\n     createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n     function handleLoad(event) {\n     \tcreatejs.Sound.play(\"myID\");\n     \t// store off AbstractSoundInstance for controlling\n     \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n     }\n\nNOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\nThis is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\n<b>Parameters Deprecated</b><br />\nThe parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID of the audio.",
                    "type": "String"
                },
                {
                    "name": "interrupt",
                    "description": "<b>This parameter will be renamed playProps in the next release.</b><br />\nThis parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\nincluding: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n<br /><strong>OR</strong><br />\n<b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\nif the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\nconstants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.",
                    "type": "String | Object",
                    "optional": true,
                    "optdefault": "\"none\"|options"
                },
                {
                    "name": "delay",
                    "description": "<b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "offset",
                    "description": "<b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "loop",
                    "description": "<b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\nloops), and -1 can be used for infinite playback.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "<b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\nagainst the individual volume.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "pan",
                    "description": "<b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "startTime",
                    "description": "<b>Deprecated</b> To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "duration",
                    "description": "<b>Deprecated</b> To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.",
                "type": "AbstractSoundInstance"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4743,
            "description": "Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\nsupported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\ncalled safely but does nothing.\n\n<h4>Example</h4>\n\n     var myInstance = null;\n     createjs.Sound.on(\"fileload\", handleLoad);\n     createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n     function handleLoad(event) {\n     \tmyInstance = createjs.Sound.createInstance(\"myID\");\n     \t// alternately we could call the following\n     \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n     }\n\nNOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\nThis is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.",
            "itemtype": "method",
            "name": "createInstance",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID of the audio.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "duration",
                    "description": "To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\nUnsupported extensions will return the default AbstractSoundInstance.",
                "type": "AbstractSoundInstance"
            },
            "since": "0.4.0",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4798,
            "description": "Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\ncall AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n    createjs.Sound.stop();",
            "itemtype": "method",
            "name": "stop",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4816,
            "description": "Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The master volume value. The acceptable range is 0-1.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4836,
            "description": "Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The master volume, in a range of 0-1.",
                "type": "Number"
            },
            "static": 1,
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4848,
            "description": "Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "setMute",
            "params": [
                {
                    "name": "value",
                    "description": "Whether the audio should be muted or not.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the mute was set.",
                "type": "Boolean"
            },
            "static": 1,
            "since": "0.4.0",
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4871,
            "description": "Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.",
            "itemtype": "method",
            "name": "getMute",
            "return": {
                "description": "The mute value of Sound.",
                "type": "Boolean"
            },
            "static": 1,
            "since": "0.4.0",
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4884,
            "description": "Set the default playback properties for all new SoundInstances of the passed in src or ID.\nSee {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.",
            "itemtype": "method",
            "name": "setDefaultPlayProps",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID used to register the audio.",
                    "type": "String"
                },
                {
                    "name": "playProps",
                    "description": "The playback properties you would like to set.",
                    "type": "Object | PlayPropsConfig"
                }
            ],
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4898,
            "description": "Get the default playback properties for the passed in src or ID.  These properties are applied to all\nnew SoundInstances.  Returns null if default does not exist.",
            "itemtype": "method",
            "name": "getDefaultPlayProps",
            "params": [
                {
                    "name": "src",
                    "description": "The src or ID used to register the audio.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns an existing PlayPropsConfig or null if one does not exist",
                "type": "PlayPropsConfig"
            },
            "since": "0.6.1",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4916,
            "description": "Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\ncontrol delays.",
            "itemtype": "method",
            "name": "_playInstance",
            "params": [
                {
                    "name": "instance",
                    "description": "The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.",
                    "type": "AbstractSoundInstance"
                },
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig object.",
                    "type": "PlayPropsConfig"
                }
            ],
            "return": {
                "description": "If the sound can start playing. Sounds that fail immediately will return false. Sounds that\nhave a delay will return true, but may still fail to play.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4953,
            "description": "Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "_beginPlaying",
            "params": [
                {
                    "name": "instance",
                    "description": "A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.",
                    "type": "AbstractSoundInstance"
                },
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig object.",
                    "type": "PlayPropsConfig"
                }
            ],
            "return": {
                "description": "If the sound can start playing. If there are no available channels, or the instance fails to\nstart, this will return false.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4976,
            "description": "Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\ninstead.",
            "itemtype": "method",
            "name": "_getSrcById",
            "params": [
                {
                    "name": "value",
                    "description": "The ID the sound was registered with.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The source of the sound if it has been registered with this ID or the value that was passed in.",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 4989,
            "description": "A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\nSound management. It will be added again, if the sound re-plays. Note that this method is called from the\ninstances themselves.",
            "itemtype": "method",
            "name": "_playFinished",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance that finished playback.",
                    "type": "AbstractSoundInstance"
                }
            ],
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5006,
            "description": "An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\neach sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\nThe number of sounds is artificially limited by Sound in order to prevent over-saturation of a\nsingle sound, as well as to stay within hardware limitations, although the latter may disappear with better\nbrowser support.\n\nWhen a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\nsound that is already playing.\n#class SoundChannel",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the instances",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The number of instances allowed",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "is_constructor": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5029,
            "description": "A hash of channel instances indexed by source.\n#property channels",
            "type": "{Object}",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5037,
            "description": "Create a sound channel. Note that if the sound channel already exists, this will fail.\n#method create",
            "params": [
                {
                    "name": "src",
                    "description": "The source for the channel",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If the channels were created.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5053,
            "description": "Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n#method remove",
            "params": [
                {
                    "name": "src",
                    "description": "The source for the channel",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the channels were deleted.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5067,
            "description": "Delete all sound channels, stop and delete all related instances.\n#method removeAll",
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5078,
            "description": "Add an instance to a sound channel.\n#method add",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to add to the channel",
                    "type": "AbstractSoundInstance"
                },
                {
                    "name": "interrupt",
                    "description": "The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\nfor details on interrupt modes.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The success of the method call. If the channel is full, it will return false.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5092,
            "description": "Remove an instance from the channel.\n#method remove",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to remove from the channel",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "The success of the method call. If there is no channel, it will return false."
            },
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5105,
            "description": "Get the maximum number of sounds you can have in a channel.\n#method maxPerChannel",
            "return": {
                "description": "The maximum number of sounds you can have in a channel.",
                "type": "Number"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5113,
            "description": "Get a channel instance by its src.\n#method get",
            "params": [
                {
                    "name": "src",
                    "description": "The src to use to look up the channel",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5126,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5140,
            "description": "The source of the channel.\n#property src",
            "type": "{String}",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5147,
            "description": "The maximum number of instances in this channel.  -1 indicates no limit\n#property max",
            "type": "{Number}",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5154,
            "description": "The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n#property maxDefault",
            "type": "{Number}",
            "default": "100",
            "since": "0.4.0",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5163,
            "description": "The current number of active instances.\n#property length",
            "type": "{Number}",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5170,
            "description": "Initialize the channel.\n#method init",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the channel",
                    "type": "String"
                },
                {
                    "name": "max",
                    "description": "The maximum number of instances in the channel",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5184,
            "description": "Get an instance by index.\n#method get",
            "params": [
                {
                    "name": "index",
                    "description": "The index to return.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The AbstractSoundInstance at a specific instance.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5194,
            "description": "Add a new instance to the channel.\n#method add",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to add.",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "The success of the method call. If the channel is full, it will return false.",
                "type": "Boolean"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5207,
            "description": "Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n#method remove",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to remove",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "The success of the remove call. If the instance is not found in this channel, it will\nreturn false.",
                "type": "Boolean"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5222,
            "description": "Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n#method removeAll",
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5233,
            "description": "Get an available slot depending on interrupt value and if slots are available.\n#method getSlot",
            "params": [
                {
                    "name": "interrupt",
                    "description": "The interrupt value to use.",
                    "type": "String"
                },
                {
                    "name": "instance",
                    "description": "The sound instance that will go in the channel if successful.",
                    "type": "AbstractSoundInstance"
                }
            ],
            "return": {
                "description": "Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\nan existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.",
                "type": "Boolean"
            },
            "class": "Graphics.Sound",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5351,
            "description": "The source of the sound.",
            "itemtype": "property",
            "name": "src",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5359,
            "description": "The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "uniqueId",
            "type": "{String} | Number",
            "default": "-1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5367,
            "description": "The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "playState",
            "type": "{String}",
            "default": "null",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5375,
            "description": "A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\nThis allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.",
            "itemtype": "property",
            "name": "delayTimeoutId",
            "type": "{timeoutVariable}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5391,
            "description": "The volume of the sound, between 0 and 1.\n\nThe actual output volume of a sound can be calculated using:\n<code>myInstance.volume * createjs.Sound.getVolume();</code>",
            "itemtype": "property",
            "name": "volume",
            "type": "{Number}",
            "default": "1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5407,
            "description": "The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n\n<br />Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio.",
            "itemtype": "property",
            "name": "pan",
            "type": "{Number}",
            "default": "0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5422,
            "description": "Audio sprite property used to determine the starting offset.",
            "itemtype": "property",
            "name": "startTime",
            "type": "{Number}",
            "default": "0",
            "since": "0.6.1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5435,
            "description": "Sets or gets the length of the audio clip, value is in milliseconds.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "default": "0",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5449,
            "description": "Object that holds plugin specific resource need for audio playback.\nThis is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\nHTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.",
            "itemtype": "property",
            "name": "playbackResource",
            "type": "{Object}",
            "default": "null",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5465,
            "description": "The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.",
            "itemtype": "property",
            "name": "position",
            "type": "{Number}",
            "default": "0",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5479,
            "description": "The number of play loops remaining. Negative values will loop infinitely.",
            "itemtype": "property",
            "name": "loop",
            "type": "{Number}",
            "default": "0",
            "access": "public",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5494,
            "description": "Mutes or unmutes the current audio instance.",
            "itemtype": "property",
            "name": "muted",
            "type": "{Boolean}",
            "default": "false",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5508,
            "description": "Pauses or resumes the current audio instance.",
            "itemtype": "property",
            "name": "paused",
            "type": "{Boolean}",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5522,
            "description": "The event that is fired when playback has started successfully.",
            "itemtype": "event",
            "name": "succeeded",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5530,
            "description": "The event that is fired when playback is interrupted. This happens when another sound with the same\nsrc property is played using an interrupt value that causes this instance to stop playing.",
            "itemtype": "event",
            "name": "interrupted",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5539,
            "description": "The event that is fired when playback has failed. This happens when there are too many channels with the same\nsrc property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\nthe sound could not be played, perhaps due to a 404 error.",
            "itemtype": "event",
            "name": "failed",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5549,
            "description": "The event that is fired when a sound has completed playing but has loops remaining.",
            "itemtype": "event",
            "name": "loop",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5557,
            "description": "The event that is fired when playback completes. This means that the sound has finished playing in its\nentirety, including its loop iterations.",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5574,
            "description": "Play an instance. This method is intended to be called on SoundInstances that already exist (created\nwith the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n\n<h4>Example</h4>\n\n     var myInstance = createjs.Sound.createInstance(mySrc);\n     myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n\nNote that if this sound is already playing, this call will still set the passed in parameters.\n\n<b>Parameters Deprecated</b><br />\nThe parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "interrupt",
                    "description": "<b>This parameter will be renamed playProps in the next release.</b><br />\nThis parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\nincluding: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n<br /><strong>OR</strong><br />\n<b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\nif the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\nconstants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.",
                    "type": "String | Object",
                    "optional": true,
                    "optdefault": "\"none\"|options"
                },
                {
                    "name": "delay",
                    "description": "<b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "offset",
                    "description": "<b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "loop",
                    "description": "<b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\nloops), and -1 can be used for infinite playback.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "volume",
                    "description": "<b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\nagainst the individual volume.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "pan",
                    "description": "<b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\nNote that pan is not supported for HTML Audio.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5624,
            "description": "Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\nwill fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\nIf you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n    myInstance.stop();",
            "itemtype": "method",
            "name": "stop",
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5646,
            "description": "Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work",
            "itemtype": "method",
            "name": "destroy",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5659,
            "description": "Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.",
            "itemtype": "method",
            "name": "applyPlayProps",
            "params": [
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig or object containing the same properties.",
                    "type": "PlayPropsConfig | Object"
                }
            ],
            "since": "0.6.1",
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5683,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property,",
            "deprecated": true,
            "itemtype": "method",
            "name": "getPaused",
            "return": {
                "description": "If the instance is currently paused",
                "type": "Boolean"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5695,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "since": "0.6.0",
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5717,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The volume to set, between 0 and 1.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5734,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The current volume of the sound instance.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5745,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setMuted",
            "params": [
                {
                    "name": "value",
                    "description": "If the sound should be muted.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "A reference to itself, intended for chaining calls.",
                "type": "AbstractSoundInstance"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5761,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getMuted",
            "return": {
                "description": "If the sound is muted.",
                "type": "Boolean"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5773,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPan",
            "params": [
                {
                    "name": "value",
                    "description": "The pan value, between -1 (left) and 1 (right).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5788,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getPan",
            "return": {
                "description": "The value of the pan, between -1 (left) and 1 (right).",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5799,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getPosition",
            "return": {
                "description": "The position of the playhead in the sound, in milliseconds.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5813,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to place the playhead, in milliseconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5829,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getStartTime",
            "return": {
                "description": "The startTime of the sound instance in milliseconds.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5840,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setStartTime",
            "params": [
                {
                    "name": "value",
                    "description": "The new startTime time in milli seconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5855,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "The duration of the sound instance in milliseconds.",
                "type": "Number"
            },
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5866,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setDuration",
            "params": [
                {
                    "name": "value",
                    "description": "The new duration time in milli seconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5882,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPlayback",
            "params": [
                {
                    "name": "value",
                    "description": "The new playback resource.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns reference to itself for chaining calls",
                "type": "AbstractSoundInstance"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5897,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "setPlayback",
            "params": [
                {
                    "name": "value",
                    "description": "The new playback resource.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "playback resource used for playing audio",
                "type": "Object"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5910,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property",
            "deprecated": true,
            "itemtype": "method",
            "name": "getLoop",
            "return": {
                "description": "",
                "type": "Number"
            },
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5922,
            "description": "DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property,",
            "deprecated": true,
            "itemtype": "method",
            "name": "setLoop",
            "params": [
                {
                    "name": "value",
                    "description": "The number of times to loop after play.",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5946,
            "description": "A helper method that dispatches all events for AbstractSoundInstance.",
            "itemtype": "method",
            "name": "_sendEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The event type",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5957,
            "description": "Clean up the instance. Remove references and clean up any additional properties such as timers.",
            "itemtype": "method",
            "name": "_cleanUp",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5970,
            "description": "The sound has been interrupted.",
            "itemtype": "method",
            "name": "_interrupt",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 5981,
            "description": "Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\nsrc is loaded, otherwise playback will fail.",
            "itemtype": "method",
            "name": "_beginPlaying",
            "params": [
                {
                    "name": "playProps",
                    "description": "A PlayPropsConfig object.",
                    "type": "PlayPropsConfig"
                }
            ],
            "return": {
                "description": "If playback succeeded.",
                "type": "Boolean"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6012,
            "description": "Play has failed, which can happen for a variety of reasons.\nCleans up instance and dispatches failed event",
            "itemtype": "method",
            "name": "_playFailed",
            "access": "private",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6024,
            "description": "Audio has finished playing. Manually loop it if required.",
            "itemtype": "method",
            "name": "_handleSoundComplete",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6046,
            "description": "Handles starting playback when the sound is ready for playing.",
            "itemtype": "method",
            "name": "_handleSoundReady",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6055,
            "description": "Internal function used to update the volume based on the instance volume, master volume, instance mute value,\nand master mute value.",
            "itemtype": "method",
            "name": "_updateVolume",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6065,
            "description": "Internal function used to update the pan",
            "itemtype": "method",
            "name": "_updatePan",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6075,
            "description": "Internal function used to update the startTime of the audio.",
            "itemtype": "method",
            "name": "_updateStartTime",
            "access": "protected",
            "tagname": "",
            "since": "0.6.1",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6085,
            "description": "Internal function used to update the duration of the audio.",
            "itemtype": "method",
            "name": "_updateDuration",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6095,
            "description": "Internal function used to get the duration of the audio from the source we'll be playing.",
            "itemtype": "method",
            "name": "_updateDuration",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6105,
            "description": "Internal function that calculates the current position of the playhead and sets this._position to that value",
            "itemtype": "method",
            "name": "_calculateCurrentPosition",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6115,
            "description": "Internal function used to update the position of the playhead.",
            "itemtype": "method",
            "name": "_updatePosition",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6125,
            "description": "Internal function called when looping is removed during playback.",
            "itemtype": "method",
            "name": "_removeLooping",
            "params": [
                {
                    "name": "value",
                    "description": "The number of times to loop after play.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6136,
            "description": "Internal function called when looping is added during playback.",
            "itemtype": "method",
            "name": "_addLooping",
            "params": [
                {
                    "name": "value",
                    "description": "The number of times to loop after play.",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6147,
            "description": "Internal function called when pausing playback",
            "itemtype": "method",
            "name": "_pause",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6157,
            "description": "Internal function called when resuming playback",
            "itemtype": "method",
            "name": "_resume",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6167,
            "description": "Internal function called when stopping playback",
            "itemtype": "method",
            "name": "_handleStop",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6177,
            "description": "Internal function called when AbstractSoundInstance is being cleaned up",
            "itemtype": "method",
            "name": "_handleCleanUp",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6187,
            "description": "Internal function called when AbstractSoundInstance has played to end and is looping",
            "itemtype": "method",
            "name": "_handleLoop",
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.AbstractSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6221,
            "description": "The capabilities of the plugin.\nmethod and is used internally.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6232,
            "description": "Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6239,
            "description": "Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\nis currently loading, or has completed loading.  Can be used to store non boolean data after loading\nis complete (for example arrayBuffers for web audio).",
            "itemtype": "property",
            "name": "_audioSources",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6249,
            "description": "Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\nand properly destroy them if sources are removed",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6257,
            "description": "The internal master volume value of the plugin.",
            "itemtype": "property",
            "name": "_volume",
            "type": "{Number}",
            "default": "1",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6266,
            "description": "A reference to a loader class used by a plugin that must be set.",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6273,
            "description": "A reference to an AbstractSoundInstance class used by a plugin that must be set.",
            "type": "{Object}",
            "access": "protected",
            "tagname": ";",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6282,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6298,
            "description": "The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6308,
            "description": "Determine if the plugin can be used in the current browser/OS.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6320,
            "description": "Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\nNote all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\ncan use to assist with preloading.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "loadItem",
                    "description": "An Object containing the source of the audio\nNote that not every plugin will manage this value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A result object, containing a \"tag\" for preloading purposes.",
                "type": "Object"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6342,
            "description": "Internally preload a sound.",
            "itemtype": "method",
            "name": "preload",
            "params": [
                {
                    "name": "loader",
                    "description": "The sound URI to load.",
                    "type": "Loader"
                }
            ],
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6352,
            "description": "Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\nor has already finished loading.",
            "itemtype": "method",
            "name": "isPreloadStarted",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6363,
            "description": "Checks if preloading has finished for a specific source.",
            "itemtype": "method",
            "name": "isPreloadComplete",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to load.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6373,
            "description": "Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.",
            "itemtype": "method",
            "name": "removeSound",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to unload.",
                    "type": "String"
                }
            ],
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6390,
            "description": "Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.",
            "itemtype": "method",
            "name": "removeAllSounds",
            "params": [
                {
                    "name": "src",
                    "description": "The sound URI to unload.",
                    "type": "String"
                }
            ],
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6401,
            "description": "Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "src",
                    "description": "The sound source to use.",
                    "type": "String"
                },
                {
                    "name": "startTime",
                    "description": "Audio sprite property used to apply an offset, in milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Audio sprite property used to set the time the clip plays for, in milliseconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A sound instance for playback and control.",
                "type": "AbstractSoundInstance"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6419,
            "description": "Set the master volume of the plugin, which affects all SoundInstances.",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "value",
                    "description": "The volume to set, between 0 and 1.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If the plugin processes the setVolume call (true). The Sound class will affect all the\ninstances manually otherwise.",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6432,
            "description": "Get the master volume of the plugin, which affects all SoundInstances.",
            "itemtype": "method",
            "name": "getVolume",
            "return": {
                "description": "The volume level, between 0 and 1.",
                "type": "Number"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6441,
            "description": "Mute all sounds via the plugin.",
            "itemtype": "method",
            "name": "setMute",
            "params": [
                {
                    "name": "value",
                    "description": "If all sound should be muted or not. Note that plugin-level muting just looks up\nthe mute value of Sound {{#crossLink \"Sound/getMute\"}}{{/crossLink}}, so this property is not used here.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "If the mute call succeeds.",
                "type": "Boolean"
            },
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6460,
            "description": "Handles internal preload completion.",
            "itemtype": "method",
            "name": "_handlePreloadComplete",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6475,
            "description": "Handles internal preload erros",
            "itemtype": "method",
            "name": "_handlePreloadError",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6485,
            "description": "Set the gain value for master audio. Should not be called externally.",
            "itemtype": "method",
            "name": "_updateVolume",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.AbstractPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6525,
            "description": "web audio context required for decoding audio",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "static": 1,
            "class": "Graphics.WebAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6554,
            "description": "The audio has been decoded.",
            "itemtype": "method",
            "name": "handleAudioDecoded",
            "params": [
                {
                    "name": "decoded",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioLoader",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6596,
            "description": "NOTE this is only intended for use by advanced users.\n<br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "gainNode",
            "type": "{AudioGainNode}",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6606,
            "description": "NOTE this is only intended for use by advanced users.\n<br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "panNode",
            "type": "{AudioPannerNode}",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6618,
            "description": "NOTE this is only intended for use by advanced users.\n<br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "sourceNode",
            "type": "{AudioNode}",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6630,
            "description": "Timeout that is created internally to handle sound playing to completion.\nStored so we can remove it when stop, pause, or cleanup are called",
            "itemtype": "property",
            "name": "_soundCompleteTimeout",
            "type": "{timeoutVariable}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6641,
            "description": "NOTE this is only intended for use by very advanced users.\n_sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\nlooping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_sourceNodeNext",
            "type": "{AudioNode}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6654,
            "description": "Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.",
            "itemtype": "property",
            "name": "_playbackStartTime",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "since": "0.4.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6674,
            "description": "Note this is only intended for use by advanced users.\n<br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6684,
            "description": "Note this is only intended for use by advanced users.\n<br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \nThis is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_scratchBuffer",
            "type": "{AudioBufferSourceNode}",
            "static": 1,
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6694,
            "description": "Note this is only intended for use by advanced users.\n<br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>",
            "itemtype": "property",
            "name": "destinationNode",
            "type": "{AudioNode}",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6704,
            "description": "Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.",
            "itemtype": "property",
            "name": "_panningModel",
            "type": "{Number / String}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "since": "0.6.0",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6763,
            "description": "Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection",
            "itemtype": "method",
            "name": "_cleanUpAudioNode",
            "params": [
                {
                    "name": "audioNode",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "AudioNode"
            },
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6799,
            "description": "Creates an audio node using the current src and context, connects it to the gain node, and starts playback.",
            "itemtype": "method",
            "name": "_createAndPlayAudioNode",
            "params": [
                {
                    "name": "startTime",
                    "description": "The time to add this to the web audio context, in seconds.",
                    "type": "Number"
                },
                {
                    "name": "offset",
                    "description": "The amount of time into the src audio to start playback, in seconds.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "AudioNode"
            },
            "access": "protected",
            "tagname": "",
            "since": "0.4.1",
            "class": "Graphics.WebAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6930,
            "description": "Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.",
            "itemtype": "property",
            "name": "_panningModel",
            "type": "{Number / String}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6938,
            "description": "The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\nneed to be created within this context.",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6946,
            "description": "A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\nIt is connected to <code>context.destination</code>.\n\nCan be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.",
            "itemtype": "property",
            "name": "dynamicsCompressorNode",
            "type": "{AudioNode}",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6957,
            "description": "A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n\nCan be accessed by advanced users through createjs.Sound.activePlugin.gainNode.",
            "itemtype": "property",
            "name": "gainNode",
            "type": "{AudioGainNode}",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6983,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\nmethod and is used internally.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 6994,
            "description": "Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.",
            "itemtype": "property",
            "name": "_panningModel",
            "type": "{Number / String}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7003,
            "description": "The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\nneed to be created within this context.\n\nAdvanced users can set this to an existing context, but <b>must</b> do so before they call\n{{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "context",
            "type": "{AudioContext}",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7016,
            "description": "The scratch buffer that will be assigned to the buffer property of a source node on close.\nWorks around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n\nAdvanced users can set this to an existing source node, but <b>must</b> do so before they call\n{{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_scratchBuffer",
            "type": "{AudioBuffer}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7030,
            "description": "Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\nempty sound.",
            "itemtype": "property",
            "name": "_unlocked",
            "type": "{boolean}",
            "since": "0.6.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7042,
            "description": "Determine if the plugin can be used in the current browser/OS.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7058,
            "description": "Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\nrequire the first sound to be played inside of a user initiated event (touch/click).  This is called when\n{{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\nfor example).\n\n<h4>Example</h4>\n\n    function handleTouch(event) {\n        createjs.WebAudioPlugin.playEmptySound();\n    }",
            "itemtype": "method",
            "name": "playEmptySound",
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7084,
            "description": "Determine if XHR is supported, which is necessary for web audio.",
            "itemtype": "method",
            "name": "_isFileXHRSupported",
            "return": {
                "description": "If XHR is supported.",
                "type": "Boolean"
            },
            "since": "0.4.2",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7117,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7175,
            "description": "Set up compatibility if only deprecated web audio calls are supported.\nSee http://www.w3.org/TR/webaudio/#DeprecationNotes\nNeeded so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\ndon't support new calls.",
            "itemtype": "method",
            "name": "_compatibilitySetUp",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "since": "0.4.2",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7203,
            "description": "Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\na `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\nwill fail if the user presses for too long, indicating a scroll event instead of a click event.\n\nNote that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\na `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\nstick with `mousedown` and `touchend`.",
            "itemtype": "method",
            "name": "_unlock",
            "since": "0.6.2",
            "access": "private",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7233,
            "description": "Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.",
            "itemtype": "method",
            "name": "_addPropsToClasses",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "since": "0.6.0",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7251,
            "description": "Set the gain value for master audio. Should not be called externally.",
            "itemtype": "method",
            "name": "_updateVolume",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.WebAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7288,
            "description": "A hash lookup of each base audio tag, indexed by the audio source.",
            "itemtype": "property",
            "name": "_tags",
            "type": "{{}}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7297,
            "description": "An object pool for html audio tags",
            "itemtype": "property",
            "name": "_tagPool",
            "type": "{TagPool}",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7306,
            "description": "A hash lookup of if a base audio tag is available, indexed by the audio source",
            "itemtype": "property",
            "name": "_tagsUsed",
            "type": "{{}}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7316,
            "description": "Get an audio tag with the given source.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7340,
            "description": "Return an audio tag to the pool.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                },
                {
                    "name": "tag",
                    "description": "Audio tag to set.",
                    "type": "HTMLElement"
                }
            ],
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7356,
            "description": "Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "src",
                    "description": "The source for the tag",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the TagPool was deleted.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7372,
            "description": "Gets the duration of the src audio in milliseconds",
            "itemtype": "method",
            "name": "getDuration",
            "params": [
                {
                    "name": "src",
                    "description": "The source file used by the audio tag.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Duration of src in milliseconds",
                "type": "Number"
            },
            "static": 1,
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7389,
            "description": "The TagPool is an object pool for HTMLAudio tag instances.\n#class TagPool",
            "params": [
                {
                    "name": "src",
                    "description": "The source of the channel.",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7398,
            "description": "A list of all available tags in the pool.\n#property tags",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7412,
            "description": "Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n#method get",
            "return": {
                "description": "An HTML audio tag.",
                "type": "HTMLAudioElement"
            },
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7428,
            "description": "Put an HTMLAudioElement back in the pool for use.\n#method set",
            "params": [
                {
                    "name": "tag",
                    "description": "HTML audio tag",
                    "type": "HTMLAudioElement"
                }
            ],
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7448,
            "description": "Create an HTML audio tag.\n#method _createTag",
            "params": [
                {
                    "name": "src",
                    "description": "The source file to set for the audio tag.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an HTML audio tag.",
                "type": "HTMLElement"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioTagPool",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7514,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7524,
            "description": "Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7601,
            "description": "Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.",
            "itemtype": "method",
            "name": "_handleTagReady",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7643,
            "description": "Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener",
            "itemtype": "method",
            "name": "_handleSetPositionSeek",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7655,
            "description": "Timer used to loop audio sprites.\nNOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n(up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired",
            "itemtype": "method",
            "name": "_handleAudioSpriteLoop",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Graphics.HTMLAudioSoundInstance",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7778,
            "description": "This is no longer needed as we are now using object pooling for tags.\n\n<b>NOTE this property only exists as a limitation of HTML audio.</b>",
            "itemtype": "property",
            "name": "defaultNumChannels",
            "type": "{Number}",
            "default": "2",
            "since": "0.4.0",
            "deprecated": true,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7804,
            "description": "The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\nThe actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\nAudio sprites work around this limitation.",
            "itemtype": "property",
            "name": "MAX_INSTANCES",
            "type": "{Number}",
            "default": "30",
            "static": 1,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7815,
            "description": "Event constant for the \"canPlayThrough\" event for cleaner code.",
            "itemtype": "property",
            "name": "_AUDIO_READY",
            "type": "{String}",
            "default": "canplaythrough",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7825,
            "description": "Event constant for the \"ended\" event for cleaner code.",
            "itemtype": "property",
            "name": "_AUDIO_ENDED",
            "type": "{String}",
            "default": "ended",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7835,
            "description": "Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.",
            "itemtype": "property",
            "name": "_AUDIO_SEEKED",
            "type": "{String}",
            "default": "seeked",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7845,
            "description": "Event constant for the \"stalled\" event for cleaner code.",
            "itemtype": "property",
            "name": "_AUDIO_STALLED",
            "type": "{String}",
            "default": "stalled",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7855,
            "description": "Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\nThis event callsback ever 15 to 250ms and can be dropped by the browser for performance.",
            "itemtype": "property",
            "name": "_TIME_UPDATE",
            "type": "{String}",
            "default": "timeupdate",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7866,
            "description": "The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\nmethod. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for an overview of all\nof the available properties.",
            "itemtype": "property",
            "name": "_capabilities",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7879,
            "description": "Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\nbrowsers, but is disabled in iOS because of its limitations.",
            "itemtype": "method",
            "name": "isSupported",
            "return": {
                "description": "If the plugin can be initialized.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js",
            "line": 7891,
            "description": "Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\nmethod for an overview of plugin capabilities.",
            "itemtype": "method",
            "name": "_generateCapabilities",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.HTMLAudioPlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.min.js",
            "line": 13,
            "description": "SoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 40,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 76,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 152,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 159,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 168,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 180,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 193,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 202,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 212,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 221,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 231,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 241,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 251,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 262,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 276,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 286,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 295,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 305,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 319,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 328,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 341,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 422,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 429,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 438,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 453,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 477,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 510,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 556,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 586,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 600,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 622,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 676,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 687,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 707,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 717,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 788,
            "description": "In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\nuses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\ndispatches the tick when the time is within a certain threshold.\n\nThis mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\nbut does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\ngaining the benefits of that API (screen synch, background throttling).\n\nVariance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\nframerates of 10, 12, 15, 20, and 30 work well.\n\nFalls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF_SYNCHED",
            "static": 1,
            "type": "{String}",
            "default": "\"synched\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 810,
            "description": "In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\nBecause requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\nYou can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object's \"delta\" properties to make this easier.\n\nFalls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF",
            "static": 1,
            "type": "{String}",
            "default": "\"raf\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 826,
            "description": "In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\nprovide the benefits of requestAnimationFrame (screen synch, background throttling).",
            "itemtype": "property",
            "name": "TIMEOUT",
            "static": 1,
            "type": "{String}",
            "default": "\"timeout\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 839,
            "description": "Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n{{#crossLink \"Ticker/setPaused\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         console.log(\"Paused:\", event.paused, event.delta);\n     }",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether the ticker is currently paused.",
                    "type": "Boolean"
                },
                {
                    "name": "delta",
                    "description": "The time elapsed in ms since the last tick.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The total time in ms since Ticker was initialized.",
                    "type": "Number"
                },
                {
                    "name": "runTime",
                    "description": "The total time in ms that Ticker was not paused since it was initialized. For example,\n\tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 863,
            "description": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}, and will be removed in a future version. If true, timingMode will\nuse {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} by default.",
            "deprecated": true,
            "deprecationMessage": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "useRAF",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 874,
            "description": "Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n{{#crossLink \"Ticker/TIMEOUT\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF\"}}{{/crossLink}}, and\n{{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} for mode details.",
            "itemtype": "property",
            "name": "timingMode",
            "static": 1,
            "type": "{String}",
            "default": "Ticker.TIMEOUT",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 885,
            "description": "Specifies a maximum value for the delta property in the tick event object. This is useful when building time\nbased animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\nalert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n(ex. maxDelta=50 when running at 40fps).\n\nThis does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\nwhen using both delta and other values.\n\nIf 0, there is no maximum.",
            "itemtype": "property",
            "name": "maxDelta",
            "static": 1,
            "type": "{number}",
            "default": "0",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 902,
            "description": "When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\nof the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n{{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\ninfo.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     createjs.Ticker.paused = true;\n     function handleTick(event) {\n         console.log(event.paused,\n         \tcreatejs.Ticker.getTime(false),\n         \tcreatejs.Ticker.getTime(true));\n     }",
            "itemtype": "property",
            "name": "paused",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 942,
            "itemtype": "property",
            "name": "_inited",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 950,
            "itemtype": "property",
            "name": "_startTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 958,
            "itemtype": "property",
            "name": "_pausedTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 966,
            "description": "The number of ticks that have passed",
            "itemtype": "property",
            "name": "_ticks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 975,
            "description": "The number of ticks that have passed while Ticker has been paused",
            "itemtype": "property",
            "name": "_pausedTicks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 984,
            "itemtype": "property",
            "name": "_interval",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 992,
            "itemtype": "property",
            "name": "_lastTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1000,
            "itemtype": "property",
            "name": "_times",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1008,
            "itemtype": "property",
            "name": "_tickTimes",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1016,
            "description": "Stores the timeout or requestAnimationFrame id.",
            "itemtype": "property",
            "name": "_timerId",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1025,
            "description": "True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\nif that property changed and a tick hasn't fired.",
            "itemtype": "property",
            "name": "_raf",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1037,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setInterval",
            "static": 1,
            "params": [
                {
                    "name": "interval",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1050,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getInterval",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1061,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setFPS",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1072,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getFPS",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1083,
            "description": "Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\nNote that actual time between ticks may be more than specified depending on CPU load.\nThis property is ignored if the ticker is using the `RAF` timing mode.",
            "itemtype": "property",
            "name": "interval",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1092,
            "description": "Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n`framerate == 1000/interval`.",
            "itemtype": "property",
            "name": "framerate",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1108,
            "description": "Starts the tick. This is called automatically when the first listener is added.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1123,
            "description": "Stops the Ticker and removes all listeners. Use init() to restart the Ticker.",
            "itemtype": "method",
            "name": "reset",
            "static": 1,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1141,
            "description": "Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\nbecause it only measures the time spent within the tick execution stack. \n\nExample 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \nthe end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \nthere may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\nExample 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\none tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\nother than the tick is using ~80ms (another script, DOM rendering, etc).",
            "itemtype": "method",
            "name": "getMeasuredTickTime",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the average time spent in a tick.\nDefaults to the number of ticks per second. To get only the last tick's time, pass in 1.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The average time spent in a tick in milliseconds.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1168,
            "description": "Returns the actual frames / ticks per second.",
            "itemtype": "method",
            "name": "getMeasuredFPS",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the actual frames / ticks per second.\nDefaults to the number of ticks per second.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The actual frames / ticks per second. Depending on performance, this may differ\nfrom the target frames per second.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1186,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setPaused",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1198,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1210,
            "description": "Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\nReturns -1 if Ticker has not been initialized. For example, you could use\nthis in a time synchronized animation to determine the exact amount of time that has elapsed.",
            "itemtype": "method",
            "name": "getTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "If true only time elapsed while Ticker was not paused will be returned.\nIf false, the value returned will be total time elapsed since the first tick event listener was added.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Number of milliseconds that have elapsed since Ticker was initialized or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1224,
            "description": "Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object.",
            "itemtype": "method",
            "name": "getEventTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "[runTime=false] If true, the runTime property will be returned instead of time.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The time or runTime property from the most recent tick event or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1236,
            "description": "Returns the number of ticks that have been broadcast by Ticker.",
            "itemtype": "method",
            "name": "getTicks",
            "static": 1,
            "params": [
                {
                    "name": "pauseable",
                    "description": "Indicates whether to include ticks that would have been broadcast\nwhile Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\nIf false, tick events that would have been broadcast while Ticker was paused will be included in the return\nvalue. The default value is false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "of ticks that have been broadcast.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1252,
            "itemtype": "method",
            "name": "_handleSynch",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1267,
            "itemtype": "method",
            "name": "_handleRAF",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1278,
            "itemtype": "method",
            "name": "_handleTimeout",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1289,
            "itemtype": "method",
            "name": "_setupTick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1310,
            "itemtype": "method",
            "name": "_tick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1344,
            "itemtype": "method",
            "name": "_getTime",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1422,
            "description": "Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using {{#crossLink \"Ticker\"}}{{/crossLink}},\nthen setting this to true (the default) will cause this tween to be paused when <code>Ticker.setPaused(true)</code>\nis called. See the Tween {{#crossLink \"Tween/tick\"}}{{/crossLink}} method for more info. Can be set via the props\nparameter.",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1433,
            "description": "If true, the tween will loop when it reaches the end. Can be set via the props param.",
            "itemtype": "property",
            "name": "loop",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1441,
            "description": "Specifies the total duration of this tween in milliseconds (or ticks if useTicks is true).\nThis value is automatically updated as you modify the tween. Changing it directly could result in unexpected\nbehaviour.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "default": "0",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1452,
            "description": "Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\nyou specify data by setting it to a property of pluginData with the same name as the plugin class.",
            "example": [
                "\n\tmyTween.pluginData.PluginClassName = data;\n<br/>\nAlso, most plugins support a property to enable or disable them. This is typically the plugin class name followed by \"_enabled\".<br/>",
                "\n\tmyTween.pluginData.PluginClassName_enabled = false;<br/>\n<br/>\nSome plugins also store instance data in this object, usually in a property named _PluginClassName.\nSee the documentation for individual plugins for more details."
            ],
            "itemtype": "property",
            "name": "pluginData",
            "type": "{Object}",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1469,
            "description": "The target of this tween. This is the object on which the tweened properties will be changed. Changing\nthis property after the tween is created will not have any effect.",
            "itemtype": "property",
            "name": "target",
            "type": "{Object}",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1478,
            "description": "The current normalized position of the tween. This will always be a value between 0 and duration.\nChanging this property directly will have no effect.",
            "itemtype": "property",
            "name": "position",
            "type": "{Object}",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1487,
            "description": "Indicates the tween's current position is within a passive wait.",
            "itemtype": "property",
            "name": "passive",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1497,
            "itemtype": "property",
            "name": "_paused",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1505,
            "itemtype": "property",
            "name": "_curQueueProps",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1512,
            "itemtype": "property",
            "name": "_initQueueProps",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1519,
            "itemtype": "property",
            "name": "_steps",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1526,
            "itemtype": "property",
            "name": "_actions",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1533,
            "description": "Raw position.",
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1542,
            "description": "The position within the current step.",
            "itemtype": "property",
            "name": "_stepPosition",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1551,
            "description": "Normalized position.",
            "itemtype": "property",
            "name": "_prevPos",
            "type": "{Number}",
            "default": "-1",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1560,
            "itemtype": "property",
            "name": "_target",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1567,
            "itemtype": "property",
            "name": "_useTicks",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1575,
            "itemtype": "property",
            "name": "_inited",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1583,
            "description": "Indicates whether the tween is currently registered with Tween.",
            "itemtype": "property",
            "name": "_registered",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1613,
            "description": "Constant defining the none actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "NONE",
            "type": "Number",
            "default": "0",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1622,
            "description": "Constant defining the loop actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "LOOP",
            "type": "Number",
            "default": "1",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1631,
            "description": "Constant defining the reverse actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "REVERSE",
            "type": "Number",
            "default": "2",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1640,
            "description": "Constant returned by plugins to tell the tween not to use default assignment.",
            "itemtype": "property",
            "name": "IGNORE",
            "type": "Object",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1648,
            "itemtype": "property",
            "name": "_listeners",
            "type": "Array[Tween]",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1656,
            "itemtype": "property",
            "name": "_plugins",
            "type": "Object",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1666,
            "description": "Returns a new tween instance. This is functionally identical to using \"new Tween(...)\", but looks cleaner\nwith the chained syntax of TweenJS.\n<h4>Example</h4>\n\n\t\tvar tween = createjs.Tween.get(target);",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "target",
                    "description": "The target object that will have its properties tweened.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this tween instance (ex. `{loop:true, paused:true}`).\nAll properties default to `false`. Supported props are:\n<UL>\n   <LI> loop: sets the loop property on this tween.</LI>\n   <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n   <LI> ignoreGlobalPause: sets the {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}} property on\n   this tween.</LI>\n   <LI> override: if true, `createjs.Tween.removeTweens(target)` will be called to remove any other tweens with\n   the same target.\n   <LI> paused: indicates whether to start the tween paused.</LI>\n   <LI> position: indicates the initial position for this tween.</LI>\n   <LI> onChange: specifies a listener for the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event.</LI>\n</UL>",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "pluginData",
                    "description": "An object containing data for use by installed plugins. See individual plugins'\ndocumentation for details.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "override",
                    "description": "If true, any previous tweens on the same target will be removed. This is the\nsame as calling `Tween.removeTweens(target)`.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A reference to the created tween. Additional chained tweens, method calls, or callbacks can be\napplied to the returned tween instance.",
                "type": "Tween"
            },
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1701,
            "description": "Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\nmanually if you prefer to use your own \"heartbeat\" implementation.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The change in time in milliseconds since the last tick. Required unless all tweens have\n`useTicks` set to true.",
                    "type": "Number"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether a global pause is in effect. Tweens with {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}}\nwill ignore this, but all others will pause if this is `true`.",
                    "type": "Boolean"
                }
            ],
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1720,
            "description": "Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n{{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} events from the createjs {{#crossLink \"Ticker\"}}{{/crossLink}}.\nNo other events are handled in Tween.",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "event",
                    "description": "An event object passed in by the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}. Will\nusually be of type \"tick\".",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "since": "0.4.2",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1737,
            "description": "Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\nproperty is `true`.",
            "itemtype": "method",
            "name": "removeTweens",
            "params": [
                {
                    "name": "target",
                    "description": "The target object to remove existing tweens from.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1757,
            "description": "Stop and remove all existing tweens.",
            "itemtype": "method",
            "name": "removeAllTweens",
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1773,
            "description": "Indicates whether there are any active tweens (and how many) on the target object (if specified) or in general.",
            "itemtype": "method",
            "name": "hasActiveTweens",
            "params": [
                {
                    "name": "target",
                    "description": "The target to check for active tweens. If not specified, the return value will indicate\nif there are any active tweens on any target.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "If there are active tweens.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1786,
            "description": "Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"CSSPlugin\"}}{{/crossLink}}\nfor an example of how to write TweenJS plugins.",
            "itemtype": "method",
            "name": "installPlugin",
            "static": 1,
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "An array of properties that the plugin will handle.",
                    "type": "Array"
                }
            ],
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1810,
            "description": "Registers or unregisters a tween with the ticking system.",
            "itemtype": "method",
            "name": "_register",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween instance to register or unregister.",
                    "type": "Tween"
                },
                {
                    "name": "value",
                    "description": "If `true`, the tween is registered. If `false` the tween is unregistered.",
                    "type": "Boolean"
                }
            ],
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1841,
            "description": "Called whenever the tween's position changes.",
            "itemtype": "event",
            "name": "change",
            "since": "0.4.0",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1849,
            "description": "Queues a wait (essentially an empty tween).\n<h4>Example</h4>\n\n\t\t//This tween will wait 1s before alpha is faded to 0.\n\t\tcreatejs.Tween.get(target).wait(1000).to({alpha:0}, 1000);",
            "itemtype": "method",
            "name": "wait",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration of the wait in milliseconds (or in ticks if `useTicks` is true).",
                    "type": "Number"
                },
                {
                    "name": "passive",
                    "description": "Tween properties will not be updated during a passive wait. This\nis mostly useful for use with {{#crossLink \"Timeline\"}}{{/crossLink}} instances that contain multiple tweens\naffecting the same target at different times.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1869,
            "description": "Queues a tween from the current values to the target properties. Set duration to 0 to jump to these value.\nNumeric properties will be tweened from their current value in the tween to the target value. Non-numeric\nproperties will be set at the end of the specified duration.\n<h4>Example</h4>\n\n\t\tcreatejs.Tween.get(target).to({alpha:0}, 1000);",
            "itemtype": "method",
            "name": "to",
            "params": [
                {
                    "name": "props",
                    "description": "An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\nproperty of the target to 300).",
                    "type": "Object"
                },
                {
                    "name": "duration",
                    "description": "The duration of the wait in milliseconds (or in ticks if `useTicks` is true).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "ease",
                    "description": "The easing function to use for this tween. See the {{#crossLink \"Ease\"}}{{/crossLink}}\nclass for a list of built-in ease functions.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "\"linear\""
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1890,
            "description": "Queues an action to call the specified function.\n<h4>Example</h4>\n\n  \t//would call myFunction() after 1 second.\n  \tmyTween.wait(1000).call(myFunction);",
            "itemtype": "method",
            "name": "call",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call.",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": ". The parameters to call the function with. If this is omitted, then the function\n     will be called with a single param pointing to this tween.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "scope",
                    "description": ". The scope to call the function in. If omitted, it will be called in the target's\n     scope.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1910,
            "description": "Queues an action to set the specified props on the specified target. If target is null, it will use this tween's\ntarget.\n<h4>Example</h4>\n\n\t\tmyTween.wait(1000).set({visible:false},foo);",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "The properties to set (ex. `{visible:false}`).",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "The target to set the properties on. If omitted, they will be set on the tween's target.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1926,
            "description": "Queues an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n<h4>Example</h4>\n\n\t\tmyTween.to({x:100},500).play(otherTween);",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to play.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1941,
            "description": "Queues an action to pause the specified tween.",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to pause. If null, it pauses this tween.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 1952,
            "description": "Advances the tween to a specified position.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to seek to in milliseconds (or ticks if useTicks is true).",
                    "type": "Number"
                },
                {
                    "name": "actionsMode",
                    "description": "Specifies how actions are handled (ie. call, set, play, pause):\n<ul>\n     <li>{{#crossLink \"Tween/NONE:property\"}}{{/crossLink}} (0) - run no actions.</li>\n     <li>{{#crossLink \"Tween/LOOP:property\"}}{{/crossLink}} (1) - if new position is less than old, then run all\n     actions between old and duration, then all actions between 0 and new.</li>\n     <li>{{#crossLink \"Tween/REVERSE:property\"}}{{/crossLink}} (2) - if new position is less than old, run all\n     actions between them in reverse.</li>\n</ul>",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "return": {
                "description": "Returns `true` if the tween is complete (ie. the full tween has run & {{#crossLink \"Tween/loop:property\"}}{{/crossLink}}\nis `false`).",
                "type": "Boolean"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2022,
            "description": "Advances this tween by the specified amount of time in milliseconds (or ticks if`useTicks` is `true`).\nThis is normally called automatically by the Tween engine (via {{#crossLink \"Tween/tick\"}}{{/crossLink}}), but is\nexposed for advanced uses.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The time to advance in milliseconds (or ticks if `useTicks` is `true`).",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2034,
            "description": "Pauses or plays this tween.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether the tween should be paused (`true`) or played (`false`).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2053,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2062,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2071,
            "itemtype": "method",
            "name": "_updateTargetProps",
            "params": [
                {
                    "name": "step",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2115,
            "itemtype": "method",
            "name": "_runActions",
            "params": [
                {
                    "name": "startPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "endPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "includeStart",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2144,
            "itemtype": "method",
            "name": "_appendQueueProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2182,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2195,
            "itemtype": "method",
            "name": "_addStep",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2209,
            "itemtype": "method",
            "name": "_addAction",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2220,
            "itemtype": "method",
            "name": "_set",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2273,
            "description": "Causes this timeline to continue playing when a global pause is active.",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2280,
            "description": "The total duration of this timeline in milliseconds (or ticks if `useTicks `is `true`). This value is usually\nautomatically updated as you modify the timeline. See {{#crossLink \"Timeline/updateDuration\"}}{{/crossLink}}\nfor more information.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2291,
            "description": "If true, the timeline will loop when it reaches the end. Can be set via the props param.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2298,
            "description": "The current normalized position of the timeline. This will always be a value between 0 and\n{{#crossLink \"Timeline/duration:property\"}}{{/crossLink}}.\nChanging this property directly will have no effect.",
            "itemtype": "property",
            "name": "position",
            "type": "Object",
            "readonly": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2309,
            "itemtype": "property",
            "name": "_paused",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2316,
            "itemtype": "property",
            "name": "_tweens",
            "type": "Array[Tween]",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2323,
            "itemtype": "property",
            "name": "_labels",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2330,
            "itemtype": "property",
            "name": "_labelList",
            "type": "Array[Object]",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2337,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2345,
            "itemtype": "property",
            "name": "_prevPos",
            "type": "Number",
            "default": "-1",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2353,
            "itemtype": "property",
            "name": "_useTicks",
            "type": "Boolean",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2361,
            "description": "Indicates whether the timeline is currently registered with Tween.",
            "itemtype": "property",
            "name": "_registered",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2392,
            "description": "Called whenever the timeline's position changes.",
            "itemtype": "event",
            "name": "change",
            "since": "0.5.0",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2400,
            "description": "Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the\nnormal ticking system) and managed by this timeline. Adding a tween to multiple timelines will result in\nunexpected behaviour.",
            "itemtype": "method",
            "name": "addTween",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween(s) to add. Accepts multiple arguments.",
                    "type": "Tween",
                    "multiple": true
                }
            ],
            "return": {
                "description": "The first tween that was passed in.",
                "type": "Tween"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2424,
            "description": "Removes one or more tweens from this timeline.",
            "itemtype": "method",
            "name": "removeTween",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween(s) to remove. Accepts multiple arguments.",
                    "type": "Tween",
                    "multiple": true
                }
            ],
            "return": {
                "description": "Boolean Returns `true` if all of the tweens were successfully removed."
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2450,
            "description": "Adds a label that can be used with {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "label",
                    "description": "The label name.",
                    "type": "String"
                },
                {
                    "name": "position",
                    "description": "The position this label represents.",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2465,
            "description": "Defines labels for use with gotoAndPlay/Stop. Overwrites any previously set labels.",
            "itemtype": "method",
            "name": "setLabels",
            "params": [
                {
                    "name": "o",
                    "description": "An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}\nin the form `{labelName:time}` where time is in milliseconds (or ticks if `useTicks` is `true`).",
                    "type": "Object"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2475,
            "description": "Returns a sorted list of the labels defined on this timeline.",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "A sorted array of objects with label and position properties.",
                "type": "Array[Object]"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2493,
            "description": "Returns the name of the label on or immediately before the current position. For example, given a timeline with\ntwo labels, \"first\" on frame index 4, and \"second\" on frame 8, getCurrentLabel would return:\n<UL>\n\t\t<LI>null if the current position is 2.</LI>\n\t\t<LI>\"first\" if the current position is 4.</LI>\n\t\t<LI>\"first\" if the current position is 7.</LI>\n\t\t<LI>\"second\" if the current position is 15.</LI>\n</UL>",
            "itemtype": "method",
            "name": "getCurrentLabel",
            "return": {
                "description": "The name of the current label or null if there is no label",
                "type": "String"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2516,
            "description": "Unpauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if `useTicks` is `true`)\nor label to jump to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2527,
            "description": "Pauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if `useTicks` is `true`) or label\nto jump to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2538,
            "description": "Advances the timeline to the specified position.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to seek to in milliseconds (or ticks if `useTicks` is `true`).",
                    "type": "Number"
                },
                {
                    "name": "actionsMode",
                    "description": "parameter specifying how actions are handled. See the Tween {{#crossLink \"Tween/setPosition\"}}{{/crossLink}}\nmethod for more details.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the timeline is complete (ie. the full timeline has run & {{#crossLink \"Timeline/loop:property\"}}{{/crossLink}}\nis `false`).",
                "type": "Boolean"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2562,
            "description": "Pauses or plays this timeline.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether the tween should be paused (`true`) or played (`false`).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2572,
            "description": "Recalculates the duration of the timeline. The duration is automatically updated when tweens are added or removed,\nbut this method is useful if you modify a tween after it was added to the timeline.",
            "itemtype": "method",
            "name": "updateDuration",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2585,
            "description": "Advances this timeline by the specified amount of time in milliseconds (or ticks if `useTicks` is `true`).\nThis is normally called automatically by the Tween engine (via the {{#crossLink \"Tween/tick:event\"}}{{/crossLink}}\nevent), but is exposed for advanced uses.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The time to advance in milliseconds (or ticks if useTicks is true).",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2596,
            "description": "If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\ncorresponding frame label will be returned, or `null` if a matching label is not defined.",
            "itemtype": "method",
            "name": "resolve",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "A numeric position value or label string.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2608,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2617,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2626,
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "",
                    "type": "String | Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2636,
            "itemtype": "method",
            "name": "_calcPosition",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2686,
            "itemtype": "method",
            "name": "linear",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2694,
            "description": "Identical to linear.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2703,
            "description": "Mimics the simple -100 to 100 easing in Flash Pro.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "amount",
                    "description": "A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2720,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowIn",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2733,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2746,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowInOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2760,
            "itemtype": "method",
            "name": "quadIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2767,
            "itemtype": "method",
            "name": "quadOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2774,
            "itemtype": "method",
            "name": "quadInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2782,
            "itemtype": "method",
            "name": "cubicIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2789,
            "itemtype": "method",
            "name": "cubicOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2796,
            "itemtype": "method",
            "name": "cubicInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2804,
            "itemtype": "method",
            "name": "quartIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2811,
            "itemtype": "method",
            "name": "quartOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2818,
            "itemtype": "method",
            "name": "quartInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2826,
            "itemtype": "method",
            "name": "quintIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2833,
            "itemtype": "method",
            "name": "quintOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2840,
            "itemtype": "method",
            "name": "quintInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2848,
            "itemtype": "method",
            "name": "sineIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2858,
            "itemtype": "method",
            "name": "sineOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2868,
            "itemtype": "method",
            "name": "sineInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2878,
            "description": "Configurable \"back in\" ease.",
            "itemtype": "method",
            "name": "getBackIn",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2890,
            "itemtype": "method",
            "name": "backIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2898,
            "description": "Configurable \"back out\" ease.",
            "itemtype": "method",
            "name": "getBackOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2910,
            "itemtype": "method",
            "name": "backOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2918,
            "description": "Configurable \"back in out\" ease.",
            "itemtype": "method",
            "name": "getBackInOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2932,
            "itemtype": "method",
            "name": "backInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2940,
            "itemtype": "method",
            "name": "circIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2950,
            "itemtype": "method",
            "name": "circOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2960,
            "itemtype": "method",
            "name": "circInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2971,
            "itemtype": "method",
            "name": "bounceIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2981,
            "itemtype": "method",
            "name": "bounceOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 2999,
            "itemtype": "method",
            "name": "bounceInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3010,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticIn",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3026,
            "itemtype": "method",
            "name": "elasticIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3034,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3050,
            "itemtype": "method",
            "name": "elasticOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3058,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticInOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3074,
            "itemtype": "method",
            "name": "elasticInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3133,
            "itemtype": "property",
            "name": "priority",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3140,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3146,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3152,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3158,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3167,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3177,
            "itemtype": "method",
            "name": "init",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3192,
            "itemtype": "method",
            "name": "step",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3265,
            "itemtype": "method",
            "name": "testRotData",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3310,
            "itemtype": "method",
            "name": "tween",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3335,
            "description": "Determine the appropriate x/y/rotation information about a path for a given ratio along the path.\nAssumes a path object with all optional parameters specified.",
            "params": [
                {
                    "name": "data",
                    "description": "Data object you would pass to the \"guide:\" property in a Tween"
                },
                {
                    "name": "ratio",
                    "description": "0-1 Distance along path, values outside 0-1 are \"best guess\""
                },
                {
                    "name": "target",
                    "description": "Object to copy the results onto, will use a new object if not supplied."
                }
            ],
            "return": {
                "description": "The target object or a new object w/ the tweened properties",
                "type": "Object"
            },
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3405,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.TweenJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js",
            "line": 3413,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.TweenJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 40,
            "description": "Sets up the prototype chain and constructor property for a new class.\n\nThis should be called right after creating the class constructor.\n\n\tfunction MySubClass() {}\n\tcreatejs.extend(MySubClass, MySuperClass);\n\tMySubClass.prototype.doSomething = function() { }\n\n\tvar foo = new MySubClass();\n\tconsole.log(foo instanceof MySuperClass); // true\n\tconsole.log(foo.prototype.constructor === MySubClass); // true",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "The subclass.",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "The superclass to extend.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the subclass's new prototype.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 76,
            "description": "Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\nIt is recommended to use the super class's name as the prefix.\nAn alias to the super class's constructor is always added in the format `prefix_constructor`.\nThis allows the subclass to call super class methods without using `function.call`, providing better performance.\n\nFor example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\nwould add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\nprototype of `MySubClass` as `MySuperClass_draw`.\n\nThis should be called after the class's prototype is fully defined.\n\n\tfunction ClassA(name) {\n\t\tthis.name = name;\n\t}\n\tClassA.prototype.greet = function() {\n\t\treturn \"Hello \"+this.name;\n\t}\n\n\tfunction ClassB(name, punctuation) {\n\t\tthis.ClassA_constructor(name);\n\t\tthis.punctuation = punctuation;\n\t}\n\tcreatejs.extend(ClassB, ClassA);\n\tClassB.prototype.greet = function() {\n\t\treturn this.ClassA_greet()+this.punctuation;\n\t}\n\tcreatejs.promote(ClassB, \"ClassA\");\n\n\tvar foo = new ClassB(\"World\", \"!?!\");\n\tconsole.log(foo.greet()); // Hello World!?!",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "subclass",
                    "description": "The class to promote super class methods on.",
                    "type": "Function"
                },
                {
                    "name": "prefix",
                    "description": "The prefix to add to the promoted method names. Usually the name of the superclass.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the subclass.",
                "type": "Function"
            },
            "class": "Utility Methods",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 152,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 159,
            "description": "The object that generated an event.",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 168,
            "description": "The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\nalways be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\nis generated from childObj, then a listener on parentObj would receive the event with\ntarget=childObj (the original target) and currentTarget=parentObj (where the listener was added).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 180,
            "description": "For bubbling events, this indicates the current event phase:<OL>\n\t<LI> capture phase: starting from the top parent to the target</LI>\n\t<LI> at target phase: currently being dispatched from the target</LI>\n\t<LI> bubbling phase: from the target to the top parent</LI>\n</OL>",
            "itemtype": "property",
            "name": "eventPhase",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 193,
            "description": "Indicates whether the event will bubble through the display list.",
            "itemtype": "property",
            "name": "bubbles",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 202,
            "description": "Indicates whether the default behaviour of this event can be cancelled via\n{{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 212,
            "description": "The epoch time at which this event was created.",
            "itemtype": "property",
            "name": "timeStamp",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 221,
            "description": "Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "defaultPrevented",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 231,
            "description": "Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n{{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "propagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 241,
            "description": "Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\non this event.",
            "itemtype": "property",
            "name": "immediatePropagationStopped",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 251,
            "description": "Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.",
            "itemtype": "property",
            "name": "removed",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 262,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 276,
            "description": "Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\nMirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\ncancel the default behaviour associated with the event.",
            "itemtype": "method",
            "name": "preventDefault",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 286,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 295,
            "description": "Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n{{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\nMirrors the DOM event standard.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 305,
            "description": "Causes the active listener to be removed via removeEventListener();\n\n\t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t\t// do stuff...\n\t\t\tevt.remove(); // removes this listener.\n\t\t});",
            "itemtype": "method",
            "name": "remove",
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 319,
            "description": "Returns a clone of the Event instance.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a clone of the Event instance.",
                "type": "Event"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 328,
            "description": "Provides a chainable shortcut method for setting a number of properties on the instance.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "A generic object containing properties to copy to the instance.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance the method is called on (useful for chaining calls.)",
                "type": "Event"
            },
            "chainable": 1,
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 341,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Event",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 422,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 429,
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_captureListeners",
            "type": "Object",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 438,
            "description": "<strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\nSee {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\nfor details.\n\nThere is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "deprecated": true,
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 453,
            "description": "Static initializer to mix EventDispatcher methods into a target object or prototype.\n\n\t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t\tEventDispatcher.initialize(myObject); // add to a specific instance",
            "itemtype": "method",
            "name": "initialize",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object to inject EventDispatcher methods into. This can be an instance or a\nprototype.",
                    "type": "Object"
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 477,
            "description": "Adds the specified event listener. Note that adding multiple listeners to the same function will result in\nmultiple callbacks getting fired.\n\n<h4>Example</h4>\n\n     displayObject.addEventListener(\"click\", handleClick);\n     function handleClick(event) {\n        // Click happened.\n     }",
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the listener for chaining or assignment.",
                "type": "Function | Object"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 510,
            "description": "A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\nonly run once, associate arbitrary data with the listener, and remove the listener.\n\nThis method works by creating an anonymous wrapper function and subscribing it with addEventListener.\nThe wrapper function is returned for use with `removeEventListener` (or `off`).\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n{{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\nto `on` with the same params will create multiple listeners.\n\n<h4>Example</h4>\n\n\t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\n\t\tfunction handleClick(evt, data) {\n\t\t\tdata.count -= 1;\n\t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\n\t\t\tif (data.count == 0) {\n\t\t\t\talert(\"clicked 3 times!\");\n\t\t\t\tmyBtn.off(\"click\", listener);\n\t\t\t\t// alternately: evt.remove();\n\t\t\t}\n\t\t}",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "An object with a handleEvent method, or a function that will be called when\nthe event is dispatched.",
                    "type": "Function | Object"
                },
                {
                    "name": "scope",
                    "description": "The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "once",
                    "description": "If true, the listener will remove itself after the first time it is triggered.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Arbitrary data that will be included as the second parameter when the listener is called.",
                    "type": "*",
                    "optional": true
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.",
                "type": "Function"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 556,
            "description": "Removes the specified event listener.\n\n<b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\nfunction, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\nclosure will not work.\n\n<h4>Example</h4>\n\n     displayObject.removeEventListener(\"click\", handleClick);",
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 586,
            "description": "A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n.on method.\n\n<b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \n{{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function or object.",
                    "type": "Function | Object"
                },
                {
                    "name": "useCapture",
                    "description": "For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 600,
            "description": "Removes all listeners for the specified type, or all listeners of all types.\n\n<h4>Example</h4>\n\n     // Remove all listeners\n     displayObject.removeAllEventListeners();\n\n     // Remove all click listeners\n     displayObject.removeAllEventListeners(\"click\");",
            "itemtype": "method",
            "name": "removeAllEventListeners",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event. If omitted, all listeners for all types will be removed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 622,
            "description": "Dispatches the specified event to all listeners.\n\n<h4>Example</h4>\n\n     // Use a string event\n     this.dispatchEvent(\"complete\");\n\n     // Use an Event instance\n     var event = new createjs.Event(\"progress\");\n     this.dispatchEvent(event);",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "An object with a \"type\" property, or a string type.\nWhile a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\ndispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\nbe used to avoid event object instantiation for non-bubbling events that may not have any listeners.",
                    "type": "Object | String | Event"
                },
                {
                    "name": "bubbles",
                    "description": "Specifies the `bubbles` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cancelable",
                    "description": "Specifies the `cancelable` value when a string was passed to eventObj.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns false if `preventDefault()` was called on a cancelable event, true otherwise.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 676,
            "description": "Indicates whether there is at least one listener for the specified event type.",
            "itemtype": "method",
            "name": "hasEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 687,
            "description": "Indicates whether there is at least one listener for the specified event type on this object or any of its\nancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\nspecified type is dispatched from this object, it will trigger at least one listener.\n\nThis is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\nevent flow for a listener, not just this object.",
            "itemtype": "method",
            "name": "willTrigger",
            "params": [
                {
                    "name": "type",
                    "description": "The string type of the event.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if there is at least one listener for the specified event.",
                "type": "Boolean"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 707,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 717,
            "itemtype": "method",
            "name": "_dispatchEvent",
            "params": [
                {
                    "name": "eventObj",
                    "description": "",
                    "type": "Object | String | Event"
                },
                {
                    "name": "eventPhase",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 788,
            "description": "In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\nuses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\ndispatches the tick when the time is within a certain threshold.\n\nThis mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\nbut does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\ngaining the benefits of that API (screen synch, background throttling).\n\nVariance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\nframerates of 10, 12, 15, 20, and 30 work well.\n\nFalls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF_SYNCHED",
            "static": 1,
            "type": "{String}",
            "default": "\"synched\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 810,
            "description": "In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\nBecause requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\nYou can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object's \"delta\" properties to make this easier.\n\nFalls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\nsupported.",
            "itemtype": "property",
            "name": "RAF",
            "static": 1,
            "type": "{String}",
            "default": "\"raf\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 826,
            "description": "In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\nprovide the benefits of requestAnimationFrame (screen synch, background throttling).",
            "itemtype": "property",
            "name": "TIMEOUT",
            "static": 1,
            "type": "{String}",
            "default": "\"timeout\"",
            "readonly": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 839,
            "description": "Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n{{#crossLink \"Ticker/setPaused\"}}{{/crossLink}}.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     function handleTick(event) {\n         console.log(\"Paused:\", event.paused, event.delta);\n     }",
            "itemtype": "event",
            "name": "tick",
            "params": [
                {
                    "name": "target",
                    "description": "The object that dispatched the event.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The event type.",
                    "type": "String"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether the ticker is currently paused.",
                    "type": "Boolean"
                },
                {
                    "name": "delta",
                    "description": "The time elapsed in ms since the last tick.",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "The total time in ms since Ticker was initialized.",
                    "type": "Number"
                },
                {
                    "name": "runTime",
                    "description": "The total time in ms that Ticker was not paused since it was initialized. For example,\n\tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.",
                    "type": "Number"
                }
            ],
            "since": "0.6.0",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 863,
            "description": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}, and will be removed in a future version. If true, timingMode will\nuse {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} by default.",
            "deprecated": true,
            "deprecationMessage": "Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "useRAF",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 874,
            "description": "Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n{{#crossLink \"Ticker/TIMEOUT\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF\"}}{{/crossLink}}, and\n{{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} for mode details.",
            "itemtype": "property",
            "name": "timingMode",
            "static": 1,
            "type": "{String}",
            "default": "Ticker.TIMEOUT",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 885,
            "description": "Specifies a maximum value for the delta property in the tick event object. This is useful when building time\nbased animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\nalert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n(ex. maxDelta=50 when running at 40fps).\n\nThis does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\nwhen using both delta and other values.\n\nIf 0, there is no maximum.",
            "itemtype": "property",
            "name": "maxDelta",
            "static": 1,
            "type": "{number}",
            "default": "0",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 902,
            "description": "When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\nof the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n{{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\ninfo.\n\n<h4>Example</h4>\n\n     createjs.Ticker.addEventListener(\"tick\", handleTick);\n     createjs.Ticker.paused = true;\n     function handleTick(event) {\n         console.log(event.paused,\n         \tcreatejs.Ticker.getTime(false),\n         \tcreatejs.Ticker.getTime(true));\n     }",
            "itemtype": "property",
            "name": "paused",
            "static": 1,
            "type": "{Boolean}",
            "default": "false",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 942,
            "itemtype": "property",
            "name": "_inited",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 950,
            "itemtype": "property",
            "name": "_startTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 958,
            "itemtype": "property",
            "name": "_pausedTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 966,
            "description": "The number of ticks that have passed",
            "itemtype": "property",
            "name": "_ticks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 975,
            "description": "The number of ticks that have passed while Ticker has been paused",
            "itemtype": "property",
            "name": "_pausedTicks",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 984,
            "itemtype": "property",
            "name": "_interval",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 992,
            "itemtype": "property",
            "name": "_lastTime",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1000,
            "itemtype": "property",
            "name": "_times",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1008,
            "itemtype": "property",
            "name": "_tickTimes",
            "static": 1,
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1016,
            "description": "Stores the timeout or requestAnimationFrame id.",
            "itemtype": "property",
            "name": "_timerId",
            "static": 1,
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1025,
            "description": "True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\nif that property changed and a tick hasn't fired.",
            "itemtype": "property",
            "name": "_raf",
            "static": 1,
            "type": "{Boolean}",
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1037,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setInterval",
            "static": 1,
            "params": [
                {
                    "name": "interval",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1050,
            "description": "Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getInterval",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1061,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setFPS",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1072,
            "description": "Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getFPS",
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1083,
            "description": "Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\nNote that actual time between ticks may be more than specified depending on CPU load.\nThis property is ignored if the ticker is using the `RAF` timing mode.",
            "itemtype": "property",
            "name": "interval",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1092,
            "description": "Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n`framerate == 1000/interval`.",
            "itemtype": "property",
            "name": "framerate",
            "static": 1,
            "type": "{Number}",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1108,
            "description": "Starts the tick. This is called automatically when the first listener is added.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1123,
            "description": "Stops the Ticker and removes all listeners. Use init() to restart the Ticker.",
            "itemtype": "method",
            "name": "reset",
            "static": 1,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1141,
            "description": "Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\nbecause it only measures the time spent within the tick execution stack. \n\nExample 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \nthe end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \nthere may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\nExample 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\none tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\nother than the tick is using ~80ms (another script, DOM rendering, etc).",
            "itemtype": "method",
            "name": "getMeasuredTickTime",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the average time spent in a tick.\nDefaults to the number of ticks per second. To get only the last tick's time, pass in 1.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The average time spent in a tick in milliseconds.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1168,
            "description": "Returns the actual frames / ticks per second.",
            "itemtype": "method",
            "name": "getMeasuredFPS",
            "static": 1,
            "params": [
                {
                    "name": "ticks",
                    "description": "The number of previous ticks over which to measure the actual frames / ticks per second.\nDefaults to the number of ticks per second.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The actual frames / ticks per second. Depending on performance, this may differ\nfrom the target frames per second.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1186,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "setPaused",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1198,
            "description": "Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "deprecated": true,
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1210,
            "description": "Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\nReturns -1 if Ticker has not been initialized. For example, you could use\nthis in a time synchronized animation to determine the exact amount of time that has elapsed.",
            "itemtype": "method",
            "name": "getTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "If true only time elapsed while Ticker was not paused will be returned.\nIf false, the value returned will be total time elapsed since the first tick event listener was added.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Number of milliseconds that have elapsed since Ticker was initialized or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1224,
            "description": "Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\nevent object.",
            "itemtype": "method",
            "name": "getEventTime",
            "static": 1,
            "params": [
                {
                    "name": "runTime",
                    "description": "[runTime=false] If true, the runTime property will be returned instead of time.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The time or runTime property from the most recent tick event or -1.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1236,
            "description": "Returns the number of ticks that have been broadcast by Ticker.",
            "itemtype": "method",
            "name": "getTicks",
            "static": 1,
            "params": [
                {
                    "name": "pauseable",
                    "description": "Indicates whether to include ticks that would have been broadcast\nwhile Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\nIf false, tick events that would have been broadcast while Ticker was paused will be included in the return\nvalue. The default value is false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "of ticks that have been broadcast.",
                "type": "Number"
            },
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1252,
            "itemtype": "method",
            "name": "_handleSynch",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1267,
            "itemtype": "method",
            "name": "_handleRAF",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1278,
            "itemtype": "method",
            "name": "_handleTimeout",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1289,
            "itemtype": "method",
            "name": "_setupTick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1310,
            "itemtype": "method",
            "name": "_tick",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1344,
            "itemtype": "method",
            "name": "_getTime",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Ticker",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1422,
            "description": "Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using {{#crossLink \"Ticker\"}}{{/crossLink}},\nthen setting this to true (the default) will cause this tween to be paused when <code>Ticker.setPaused(true)</code>\nis called. See the Tween {{#crossLink \"Tween/tick\"}}{{/crossLink}} method for more info. Can be set via the props\nparameter.",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "default": "false",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1433,
            "description": "If true, the tween will loop when it reaches the end. Can be set via the props param.",
            "itemtype": "property",
            "name": "loop",
            "type": "{Boolean}",
            "default": "false",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1441,
            "description": "Specifies the total duration of this tween in milliseconds (or ticks if useTicks is true).\nThis value is automatically updated as you modify the tween. Changing it directly could result in unexpected\nbehaviour.",
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "default": "0",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1452,
            "description": "Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\nyou specify data by setting it to a property of pluginData with the same name as the plugin class.",
            "example": [
                "\n\tmyTween.pluginData.PluginClassName = data;\n<br/>\nAlso, most plugins support a property to enable or disable them. This is typically the plugin class name followed by \"_enabled\".<br/>",
                "\n\tmyTween.pluginData.PluginClassName_enabled = false;<br/>\n<br/>\nSome plugins also store instance data in this object, usually in a property named _PluginClassName.\nSee the documentation for individual plugins for more details."
            ],
            "itemtype": "property",
            "name": "pluginData",
            "type": "{Object}",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1469,
            "description": "The target of this tween. This is the object on which the tweened properties will be changed. Changing\nthis property after the tween is created will not have any effect.",
            "itemtype": "property",
            "name": "target",
            "type": "{Object}",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1478,
            "description": "The current normalized position of the tween. This will always be a value between 0 and duration.\nChanging this property directly will have no effect.",
            "itemtype": "property",
            "name": "position",
            "type": "{Object}",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1487,
            "description": "Indicates the tween's current position is within a passive wait.",
            "itemtype": "property",
            "name": "passive",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1497,
            "itemtype": "property",
            "name": "_paused",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1505,
            "itemtype": "property",
            "name": "_curQueueProps",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1512,
            "itemtype": "property",
            "name": "_initQueueProps",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1519,
            "itemtype": "property",
            "name": "_steps",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1526,
            "itemtype": "property",
            "name": "_actions",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1533,
            "description": "Raw position.",
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1542,
            "description": "The position within the current step.",
            "itemtype": "property",
            "name": "_stepPosition",
            "type": "{Number}",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1551,
            "description": "Normalized position.",
            "itemtype": "property",
            "name": "_prevPos",
            "type": "{Number}",
            "default": "-1",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1560,
            "itemtype": "property",
            "name": "_target",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1567,
            "itemtype": "property",
            "name": "_useTicks",
            "type": "{Boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1575,
            "itemtype": "property",
            "name": "_inited",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1583,
            "description": "Indicates whether the tween is currently registered with Tween.",
            "itemtype": "property",
            "name": "_registered",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1613,
            "description": "Constant defining the none actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "NONE",
            "type": "Number",
            "default": "0",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1622,
            "description": "Constant defining the loop actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "LOOP",
            "type": "Number",
            "default": "1",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1631,
            "description": "Constant defining the reverse actionsMode for use with setPosition.",
            "itemtype": "property",
            "name": "REVERSE",
            "type": "Number",
            "default": "2",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1640,
            "description": "Constant returned by plugins to tell the tween not to use default assignment.",
            "itemtype": "property",
            "name": "IGNORE",
            "type": "Object",
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1648,
            "itemtype": "property",
            "name": "_listeners",
            "type": "Array[Tween]",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1656,
            "itemtype": "property",
            "name": "_plugins",
            "type": "Object",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1666,
            "description": "Returns a new tween instance. This is functionally identical to using \"new Tween(...)\", but looks cleaner\nwith the chained syntax of TweenJS.\n<h4>Example</h4>\n\n\t\tvar tween = createjs.Tween.get(target);",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "target",
                    "description": "The target object that will have its properties tweened.",
                    "type": "Object"
                },
                {
                    "name": "props",
                    "description": "The configuration properties to apply to this tween instance (ex. `{loop:true, paused:true}`).\nAll properties default to `false`. Supported props are:\n<UL>\n   <LI> loop: sets the loop property on this tween.</LI>\n   <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n   <LI> ignoreGlobalPause: sets the {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}} property on\n   this tween.</LI>\n   <LI> override: if true, `createjs.Tween.removeTweens(target)` will be called to remove any other tweens with\n   the same target.\n   <LI> paused: indicates whether to start the tween paused.</LI>\n   <LI> position: indicates the initial position for this tween.</LI>\n   <LI> onChange: specifies a listener for the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event.</LI>\n</UL>",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "pluginData",
                    "description": "An object containing data for use by installed plugins. See individual plugins'\ndocumentation for details.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "override",
                    "description": "If true, any previous tweens on the same target will be removed. This is the\nsame as calling `Tween.removeTweens(target)`.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A reference to the created tween. Additional chained tweens, method calls, or callbacks can be\napplied to the returned tween instance.",
                "type": "Tween"
            },
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1701,
            "description": "Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\nmanually if you prefer to use your own \"heartbeat\" implementation.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The change in time in milliseconds since the last tick. Required unless all tweens have\n`useTicks` set to true.",
                    "type": "Number"
                },
                {
                    "name": "paused",
                    "description": "Indicates whether a global pause is in effect. Tweens with {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}}\nwill ignore this, but all others will pause if this is `true`.",
                    "type": "Boolean"
                }
            ],
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1720,
            "description": "Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n{{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} events from the createjs {{#crossLink \"Ticker\"}}{{/crossLink}}.\nNo other events are handled in Tween.",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "event",
                    "description": "An event object passed in by the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}. Will\nusually be of type \"tick\".",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "since": "0.4.2",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1737,
            "description": "Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\nproperty is `true`.",
            "itemtype": "method",
            "name": "removeTweens",
            "params": [
                {
                    "name": "target",
                    "description": "The target object to remove existing tweens from.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1757,
            "description": "Stop and remove all existing tweens.",
            "itemtype": "method",
            "name": "removeAllTweens",
            "static": 1,
            "since": "0.4.1",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1773,
            "description": "Indicates whether there are any active tweens (and how many) on the target object (if specified) or in general.",
            "itemtype": "method",
            "name": "hasActiveTweens",
            "params": [
                {
                    "name": "target",
                    "description": "The target to check for active tweens. If not specified, the return value will indicate\nif there are any active tweens on any target.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "If there are active tweens.",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1786,
            "description": "Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"CSSPlugin\"}}{{/crossLink}}\nfor an example of how to write TweenJS plugins.",
            "itemtype": "method",
            "name": "installPlugin",
            "static": 1,
            "params": [
                {
                    "name": "plugin",
                    "description": "The plugin class to install",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "An array of properties that the plugin will handle.",
                    "type": "Array"
                }
            ],
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1810,
            "description": "Registers or unregisters a tween with the ticking system.",
            "itemtype": "method",
            "name": "_register",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween instance to register or unregister.",
                    "type": "Tween"
                },
                {
                    "name": "value",
                    "description": "If `true`, the tween is registered. If `false` the tween is unregistered.",
                    "type": "Boolean"
                }
            ],
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1841,
            "description": "Called whenever the tween's position changes.",
            "itemtype": "event",
            "name": "change",
            "since": "0.4.0",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1849,
            "description": "Queues a wait (essentially an empty tween).\n<h4>Example</h4>\n\n\t\t//This tween will wait 1s before alpha is faded to 0.\n\t\tcreatejs.Tween.get(target).wait(1000).to({alpha:0}, 1000);",
            "itemtype": "method",
            "name": "wait",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration of the wait in milliseconds (or in ticks if `useTicks` is true).",
                    "type": "Number"
                },
                {
                    "name": "passive",
                    "description": "Tween properties will not be updated during a passive wait. This\nis mostly useful for use with {{#crossLink \"Timeline\"}}{{/crossLink}} instances that contain multiple tweens\naffecting the same target at different times.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1869,
            "description": "Queues a tween from the current values to the target properties. Set duration to 0 to jump to these value.\nNumeric properties will be tweened from their current value in the tween to the target value. Non-numeric\nproperties will be set at the end of the specified duration.\n<h4>Example</h4>\n\n\t\tcreatejs.Tween.get(target).to({alpha:0}, 1000);",
            "itemtype": "method",
            "name": "to",
            "params": [
                {
                    "name": "props",
                    "description": "An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\nproperty of the target to 300).",
                    "type": "Object"
                },
                {
                    "name": "duration",
                    "description": "The duration of the wait in milliseconds (or in ticks if `useTicks` is true).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "ease",
                    "description": "The easing function to use for this tween. See the {{#crossLink \"Ease\"}}{{/crossLink}}\nclass for a list of built-in ease functions.",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "\"linear\""
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1890,
            "description": "Queues an action to call the specified function.\n<h4>Example</h4>\n\n  \t//would call myFunction() after 1 second.\n  \tmyTween.wait(1000).call(myFunction);",
            "itemtype": "method",
            "name": "call",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call.",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": ". The parameters to call the function with. If this is omitted, then the function\n     will be called with a single param pointing to this tween.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "scope",
                    "description": ". The scope to call the function in. If omitted, it will be called in the target's\n     scope.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1910,
            "description": "Queues an action to set the specified props on the specified target. If target is null, it will use this tween's\ntarget.\n<h4>Example</h4>\n\n\t\tmyTween.wait(1000).set({visible:false},foo);",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "props",
                    "description": "The properties to set (ex. `{visible:false}`).",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "The target to set the properties on. If omitted, they will be set on the tween's target.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1926,
            "description": "Queues an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n<h4>Example</h4>\n\n\t\tmyTween.to({x:100},500).play(otherTween);",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to play.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls).",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1941,
            "description": "Queues an action to pause the specified tween.",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween to pause. If null, it pauses this tween.",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 1952,
            "description": "Advances the tween to a specified position.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to seek to in milliseconds (or ticks if useTicks is true).",
                    "type": "Number"
                },
                {
                    "name": "actionsMode",
                    "description": "Specifies how actions are handled (ie. call, set, play, pause):\n<ul>\n     <li>{{#crossLink \"Tween/NONE:property\"}}{{/crossLink}} (0) - run no actions.</li>\n     <li>{{#crossLink \"Tween/LOOP:property\"}}{{/crossLink}} (1) - if new position is less than old, then run all\n     actions between old and duration, then all actions between 0 and new.</li>\n     <li>{{#crossLink \"Tween/REVERSE:property\"}}{{/crossLink}} (2) - if new position is less than old, run all\n     actions between them in reverse.</li>\n</ul>",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "return": {
                "description": "Returns `true` if the tween is complete (ie. the full tween has run & {{#crossLink \"Tween/loop:property\"}}{{/crossLink}}\nis `false`).",
                "type": "Boolean"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2022,
            "description": "Advances this tween by the specified amount of time in milliseconds (or ticks if`useTicks` is `true`).\nThis is normally called automatically by the Tween engine (via {{#crossLink \"Tween/tick\"}}{{/crossLink}}), but is\nexposed for advanced uses.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The time to advance in milliseconds (or ticks if `useTicks` is `true`).",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2034,
            "description": "Pauses or plays this tween.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether the tween should be paused (`true`) or played (`false`).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "This tween instance (for chaining calls)",
                "type": "Tween"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2053,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2062,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2071,
            "itemtype": "method",
            "name": "_updateTargetProps",
            "params": [
                {
                    "name": "step",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2115,
            "itemtype": "method",
            "name": "_runActions",
            "params": [
                {
                    "name": "startPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "endPos",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "includeStart",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2144,
            "itemtype": "method",
            "name": "_appendQueueProps",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2182,
            "itemtype": "method",
            "name": "_cloneProps",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2195,
            "itemtype": "method",
            "name": "_addStep",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2209,
            "itemtype": "method",
            "name": "_addAction",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2220,
            "itemtype": "method",
            "name": "_set",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Tween",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2273,
            "description": "Causes this timeline to continue playing when a global pause is active.",
            "itemtype": "property",
            "name": "ignoreGlobalPause",
            "type": "Boolean",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2280,
            "description": "The total duration of this timeline in milliseconds (or ticks if `useTicks `is `true`). This value is usually\nautomatically updated as you modify the timeline. See {{#crossLink \"Timeline/updateDuration\"}}{{/crossLink}}\nfor more information.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2291,
            "description": "If true, the timeline will loop when it reaches the end. Can be set via the props param.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2298,
            "description": "The current normalized position of the timeline. This will always be a value between 0 and\n{{#crossLink \"Timeline/duration:property\"}}{{/crossLink}}.\nChanging this property directly will have no effect.",
            "itemtype": "property",
            "name": "position",
            "type": "Object",
            "readonly": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2309,
            "itemtype": "property",
            "name": "_paused",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2316,
            "itemtype": "property",
            "name": "_tweens",
            "type": "Array[Tween]",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2323,
            "itemtype": "property",
            "name": "_labels",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2330,
            "itemtype": "property",
            "name": "_labelList",
            "type": "Array[Object]",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2337,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2345,
            "itemtype": "property",
            "name": "_prevPos",
            "type": "Number",
            "default": "-1",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2353,
            "itemtype": "property",
            "name": "_useTicks",
            "type": "Boolean",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2361,
            "description": "Indicates whether the timeline is currently registered with Tween.",
            "itemtype": "property",
            "name": "_registered",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2392,
            "description": "Called whenever the timeline's position changes.",
            "itemtype": "event",
            "name": "change",
            "since": "0.5.0",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2400,
            "description": "Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the\nnormal ticking system) and managed by this timeline. Adding a tween to multiple timelines will result in\nunexpected behaviour.",
            "itemtype": "method",
            "name": "addTween",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween(s) to add. Accepts multiple arguments.",
                    "type": "Tween",
                    "multiple": true
                }
            ],
            "return": {
                "description": "The first tween that was passed in.",
                "type": "Tween"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2424,
            "description": "Removes one or more tweens from this timeline.",
            "itemtype": "method",
            "name": "removeTween",
            "params": [
                {
                    "name": "tween",
                    "description": "The tween(s) to remove. Accepts multiple arguments.",
                    "type": "Tween",
                    "multiple": true
                }
            ],
            "return": {
                "description": "Boolean Returns `true` if all of the tweens were successfully removed."
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2450,
            "description": "Adds a label that can be used with {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "label",
                    "description": "The label name.",
                    "type": "String"
                },
                {
                    "name": "position",
                    "description": "The position this label represents.",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2465,
            "description": "Defines labels for use with gotoAndPlay/Stop. Overwrites any previously set labels.",
            "itemtype": "method",
            "name": "setLabels",
            "params": [
                {
                    "name": "o",
                    "description": "An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}\nin the form `{labelName:time}` where time is in milliseconds (or ticks if `useTicks` is `true`).",
                    "type": "Object"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2475,
            "description": "Returns a sorted list of the labels defined on this timeline.",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "A sorted array of objects with label and position properties.",
                "type": "Array[Object]"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2493,
            "description": "Returns the name of the label on or immediately before the current position. For example, given a timeline with\ntwo labels, \"first\" on frame index 4, and \"second\" on frame 8, getCurrentLabel would return:\n<UL>\n\t\t<LI>null if the current position is 2.</LI>\n\t\t<LI>\"first\" if the current position is 4.</LI>\n\t\t<LI>\"first\" if the current position is 7.</LI>\n\t\t<LI>\"second\" if the current position is 15.</LI>\n</UL>",
            "itemtype": "method",
            "name": "getCurrentLabel",
            "return": {
                "description": "The name of the current label or null if there is no label",
                "type": "String"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2516,
            "description": "Unpauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if `useTicks` is `true`)\nor label to jump to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2527,
            "description": "Pauses this timeline and jumps to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The position in milliseconds (or ticks if `useTicks` is `true`) or label\nto jump to.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2538,
            "description": "Advances the timeline to the specified position.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "value",
                    "description": "The position to seek to in milliseconds (or ticks if `useTicks` is `true`).",
                    "type": "Number"
                },
                {
                    "name": "actionsMode",
                    "description": "parameter specifying how actions are handled. See the Tween {{#crossLink \"Tween/setPosition\"}}{{/crossLink}}\nmethod for more details.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns `true` if the timeline is complete (ie. the full timeline has run & {{#crossLink \"Timeline/loop:property\"}}{{/crossLink}}\nis `false`).",
                "type": "Boolean"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2562,
            "description": "Pauses or plays this timeline.",
            "itemtype": "method",
            "name": "setPaused",
            "params": [
                {
                    "name": "value",
                    "description": "Indicates whether the tween should be paused (`true`) or played (`false`).",
                    "type": "Boolean"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2572,
            "description": "Recalculates the duration of the timeline. The duration is automatically updated when tweens are added or removed,\nbut this method is useful if you modify a tween after it was added to the timeline.",
            "itemtype": "method",
            "name": "updateDuration",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2585,
            "description": "Advances this timeline by the specified amount of time in milliseconds (or ticks if `useTicks` is `true`).\nThis is normally called automatically by the Tween engine (via the {{#crossLink \"Tween/tick:event\"}}{{/crossLink}}\nevent), but is exposed for advanced uses.",
            "itemtype": "method",
            "name": "tick",
            "params": [
                {
                    "name": "delta",
                    "description": "The time to advance in milliseconds (or ticks if useTicks is true).",
                    "type": "Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2596,
            "description": "If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\ncorresponding frame label will be returned, or `null` if a matching label is not defined.",
            "itemtype": "method",
            "name": "resolve",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "A numeric position value or label string.",
                    "type": "String|Number"
                }
            ],
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2608,
            "description": "Returns a string representation of this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "a string representation of the instance.",
                "type": "String"
            },
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2617,
            "itemtype": "method",
            "name": "clone",
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2626,
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "",
                    "type": "String | Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2636,
            "itemtype": "method",
            "name": "_calcPosition",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "Graphics.Timeline",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2686,
            "itemtype": "method",
            "name": "linear",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2694,
            "description": "Identical to linear.",
            "itemtype": "method",
            "name": "none",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2703,
            "description": "Mimics the simple -100 to 100 easing in Flash Pro.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "amount",
                    "description": "A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2720,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowIn",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2733,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2746,
            "description": "Configurable exponential ease.",
            "itemtype": "method",
            "name": "getPowInOut",
            "params": [
                {
                    "name": "pow",
                    "description": "The exponent to use (ex. 3 would return a cubic ease).",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2760,
            "itemtype": "method",
            "name": "quadIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2767,
            "itemtype": "method",
            "name": "quadOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2774,
            "itemtype": "method",
            "name": "quadInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2782,
            "itemtype": "method",
            "name": "cubicIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2789,
            "itemtype": "method",
            "name": "cubicOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2796,
            "itemtype": "method",
            "name": "cubicInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2804,
            "itemtype": "method",
            "name": "quartIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2811,
            "itemtype": "method",
            "name": "quartOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2818,
            "itemtype": "method",
            "name": "quartInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2826,
            "itemtype": "method",
            "name": "quintIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2833,
            "itemtype": "method",
            "name": "quintOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2840,
            "itemtype": "method",
            "name": "quintInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2848,
            "itemtype": "method",
            "name": "sineIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2858,
            "itemtype": "method",
            "name": "sineOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2868,
            "itemtype": "method",
            "name": "sineInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2878,
            "description": "Configurable \"back in\" ease.",
            "itemtype": "method",
            "name": "getBackIn",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2890,
            "itemtype": "method",
            "name": "backIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2898,
            "description": "Configurable \"back out\" ease.",
            "itemtype": "method",
            "name": "getBackOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2910,
            "itemtype": "method",
            "name": "backOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2918,
            "description": "Configurable \"back in out\" ease.",
            "itemtype": "method",
            "name": "getBackInOut",
            "params": [
                {
                    "name": "amount",
                    "description": "The strength of the ease.",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2932,
            "itemtype": "method",
            "name": "backInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2940,
            "itemtype": "method",
            "name": "circIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2950,
            "itemtype": "method",
            "name": "circOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2960,
            "itemtype": "method",
            "name": "circInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2971,
            "itemtype": "method",
            "name": "bounceIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2981,
            "itemtype": "method",
            "name": "bounceOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 2999,
            "itemtype": "method",
            "name": "bounceInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3010,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticIn",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3026,
            "itemtype": "method",
            "name": "elasticIn",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3034,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3050,
            "itemtype": "method",
            "name": "elasticOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3058,
            "description": "Configurable elastic ease.",
            "itemtype": "method",
            "name": "getElasticInOut",
            "params": [
                {
                    "name": "amplitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3074,
            "itemtype": "method",
            "name": "elasticInOut",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graphics.Ease",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3133,
            "itemtype": "property",
            "name": "priority",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3140,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3146,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3152,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3158,
            "itemtype": "property",
            "name": "temporary variable storage",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3167,
            "description": "Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.",
            "itemtype": "method",
            "name": "install",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3177,
            "itemtype": "method",
            "name": "init",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3192,
            "itemtype": "method",
            "name": "step",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3265,
            "itemtype": "method",
            "name": "testRotData",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3310,
            "itemtype": "method",
            "name": "tween",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3335,
            "description": "Determine the appropriate x/y/rotation information about a path for a given ratio along the path.\nAssumes a path object with all optional parameters specified.",
            "params": [
                {
                    "name": "data",
                    "description": "Data object you would pass to the \"guide:\" property in a Tween"
                },
                {
                    "name": "ratio",
                    "description": "0-1 Distance along path, values outside 0-1 are \"best guess\""
                },
                {
                    "name": "target",
                    "description": "Object to copy the results onto, will use a new object if not supplied."
                }
            ],
            "return": {
                "description": "The target object or a new object w/ the tweened properties",
                "type": "Object"
            },
            "static": 1,
            "class": "Graphics.MotionGuidePlugin",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3405,
            "description": "The version string for this release.",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "class": "Graphics.TweenJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js",
            "line": 3413,
            "description": "The build date for this release in UTC format.",
            "itemtype": "property",
            "name": "buildDate",
            "type": "String",
            "static": 1,
            "class": "Graphics.TweenJS",
            "namespace": "Graphics"
        },
        {
            "file": "Scripts\\objects\\button.js",
            "line": 10,
            "class": "",
            "namespace": "Graphics"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: methdos",
            "line": " Scripts\\core\\game.js:22"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\core\\game.js:22"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:1256"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:1256"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:1963"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:2136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:2222"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:2285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:2368"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:2379"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:2394"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:3290"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:4932"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:5328"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6063"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6105"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6265"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6309"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6407"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6420"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6469"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6482"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6566"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6735"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6899"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6960"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6971"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:7047"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:7204"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:7217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:7274"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:7287"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:1963"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:2136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:2222"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:2285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:2368"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:2379"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:2394"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:3290"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:4932"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:5328"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6063"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6105"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6265"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6309"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6407"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6420"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6469"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6482"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6566"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6735"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6899"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6960"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6971"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:7047"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:7204"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:7217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:7274"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:7287"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js:516"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js:516"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:1181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:1267"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:1330"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:1413"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:1424"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:1439"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:2335"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:3259"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:3471"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:4218"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:4898"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5683"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:1181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:1267"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:1330"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:1413"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:1424"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:1439"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:2335"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:3259"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:3471"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:4218"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:4898"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5683"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js:1224"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js:1224"
        },
        {
            "message": "Missing item type\nthis is the main game function",
            "line": " Scripts\\core\\game.js:22"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:5160"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:7667"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:7675"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:8853"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:9665"
        },
        {
            "message": "Missing item type\nSprite object pool.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:9965"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:9975"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:9984"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12029"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12037"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12042"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12050"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12334"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12342"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12349"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12491"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12496"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12615"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12620"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:12627"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:13056"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:13061"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-0.8.2.combined.js:13067"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:5160"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:7667"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:7675"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:8853"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:9665"
        },
        {
            "message": "Missing item type\nSprite object pool.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:9965"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:9975"
        },
        {
            "message": "Missing item type\nDocced in superclass.",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:9984"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12029"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12037"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12042"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12050"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12334"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12342"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12349"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12491"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12496"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12615"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12620"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:12627"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:13056"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:13061"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\easeljs-NEXT.combined.js:13067"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\webgl-0.8.2.combined.js:596"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\lib\\EaselJS\\lib\\webgl-NEXT.combined.js:596"
        },
        {
            "message": "Missing item type\nThe attribute the items loaded using tags use for the source.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:2627"
        },
        {
            "message": "Missing item type\nDetermines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:3412"
        },
        {
            "message": "Missing item type\nTry and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\nloading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\nand plain text can not be loaded with tags, so it will default the the correct type instead of using the\nuser-defined type.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:4528"
        },
        {
            "message": "Missing item type\nThe callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\nevents.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:5638"
        },
        {
            "message": "Missing item type\nThe callback that is fired when a loader encounters an error from an internal file load operation. This enables\nloaders like M",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:5651"
        },
        {
            "message": "Missing item type\nRemove unneeded references from a loader.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:5894"
        },
        {
            "message": "Missing item type\nCreate a new video tag",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-0.6.2.combined.js:6960"
        },
        {
            "message": "Missing item type\nThe attribute the items loaded using tags use for the source.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:2627"
        },
        {
            "message": "Missing item type\nDetermines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:3412"
        },
        {
            "message": "Missing item type\nTry and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\nloading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\nand plain text can not be loaded with tags, so it will default the the correct type instead of using the\nuser-defined type.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:4528"
        },
        {
            "message": "Missing item type\nThe callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\nto maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\nevents.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:5638"
        },
        {
            "message": "Missing item type\nThe callback that is fired when a loader encounters an error from an internal file load operation. This enables\nloaders like M",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:5651"
        },
        {
            "message": "Missing item type\nRemove unneeded references from a loader.",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:5894"
        },
        {
            "message": "Missing item type\nCreate a new video tag",
            "line": " Scripts\\lib\\PreloadJS\\lib\\preloadjs-NEXT.combined.js:6960"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js:205"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.combined.js:215"
        },
        {
            "message": "Missing item type\nSoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-0.6.2.min.js:13"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js:205"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.combined.js:215"
        },
        {
            "message": "Missing item type\nSoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "line": " Scripts\\lib\\SoundJS\\lib\\cordovaaudioplugin-NEXT.min.js:13"
        },
        {
            "message": "Missing item type\nID used to facilitate communication with flash.\nNot doc'd because this should not be altered externally\n#property flashId",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js:970"
        },
        {
            "message": "Missing item type\nA reference to the Flash instance that gets created.\n#property flash",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js:988"
        },
        {
            "message": "Missing item type\nA list of loader instances that tried to load before _flash was set\n#property _preloadInstances",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js:995"
        },
        {
            "message": "Missing item type\nSet the Flash instance on the class, and start loading on any instances that had load called\nbefore flash was ready\n#method setFlash",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js:1003"
        },
        {
            "message": "Missing item type\nCalled from Flash.  Lets us know flash has finished playing a sound.\n#method handleSoundFinished",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js:1119"
        },
        {
            "message": "Missing item type\nCalled from Flash.  Lets us know that flash has played a sound to completion and is looping it.\n#method handleSoundLoop",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.combined.js:1129"
        },
        {
            "message": "Missing item type\nSoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-0.6.2.min.js:13"
        },
        {
            "message": "Missing item type\nID used to facilitate communication with flash.\nNot doc'd because this should not be altered externally\n#property flashId",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js:970"
        },
        {
            "message": "Missing item type\nA reference to the Flash instance that gets created.\n#property flash",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js:988"
        },
        {
            "message": "Missing item type\nA list of loader instances that tried to load before _flash was set\n#property _preloadInstances",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js:995"
        },
        {
            "message": "Missing item type\nSet the Flash instance on the class, and start loading on any instances that had load called\nbefore flash was ready\n#method setFlash",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js:1003"
        },
        {
            "message": "Missing item type\nCalled from Flash.  Lets us know flash has finished playing a sound.\n#method handleSoundFinished",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js:1119"
        },
        {
            "message": "Missing item type\nCalled from Flash.  Lets us know that flash has played a sound to completion and is looping it.\n#method handleSoundLoop",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.combined.js:1129"
        },
        {
            "message": "Missing item type\nSoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "line": " Scripts\\lib\\SoundJS\\lib\\flashaudioplugin-NEXT.min.js:13"
        },
        {
            "message": "Missing item type\nThe attribute the items loaded using tags use for the source.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:1672"
        },
        {
            "message": "Missing item type\nDetermines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:2457"
        },
        {
            "message": "Missing item type\nUsed to dispatch error events from internal preloading.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:4150"
        },
        {
            "message": "Missing item type\nAn internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\neach sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\nThe number of sounds is artificially limited by Sound in order to prevent over-saturation of a\nsingle sound, as well as to stay within hardware limitations, although the latter may disappear with better\nbrowser support.\n\nWhen a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\nsound that is already playing.\n#class SoundChannel",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5006"
        },
        {
            "message": "Missing item type\nA hash of channel instances indexed by source.\n#property channels",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5029"
        },
        {
            "message": "Missing item type\nCreate a sound channel. Note that if the sound channel already exists, this will fail.\n#method create",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5037"
        },
        {
            "message": "Missing item type\nDelete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n#method remove",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5053"
        },
        {
            "message": "Missing item type\nDelete all sound channels, stop and delete all related instances.\n#method removeAll",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5067"
        },
        {
            "message": "Missing item type\nAdd an instance to a sound channel.\n#method add",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5078"
        },
        {
            "message": "Missing item type\nRemove an instance from the channel.\n#method remove",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5092"
        },
        {
            "message": "Missing item type\nGet the maximum number of sounds you can have in a channel.\n#method maxPerChannel",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5105"
        },
        {
            "message": "Missing item type\nGet a channel instance by its src.\n#method get",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5113"
        },
        {
            "message": "Missing item type\nThe source of the channel.\n#property src",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5140"
        },
        {
            "message": "Missing item type\nThe maximum number of instances in this channel.  -1 indicates no limit\n#property max",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5147"
        },
        {
            "message": "Missing item type\nThe default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n#property maxDefault",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5154"
        },
        {
            "message": "Missing item type\nThe current number of active instances.\n#property length",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5163"
        },
        {
            "message": "Missing item type\nInitialize the channel.\n#method init",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5170"
        },
        {
            "message": "Missing item type\nGet an instance by index.\n#method get",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5184"
        },
        {
            "message": "Missing item type\nAdd a new instance to the channel.\n#method add",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5194"
        },
        {
            "message": "Missing item type\nRemove an instance from the channel, either when it has finished playing, or it has been interrupted.\n#method remove",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5207"
        },
        {
            "message": "Missing item type\nStop playback and remove all instances from the channel.  Usually in response to a delete call.\n#method removeAll",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5222"
        },
        {
            "message": "Missing item type\nGet an available slot depending on interrupt value and if slots are available.\n#method getSlot",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:5233"
        },
        {
            "message": "Missing item type\nObject hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:6232"
        },
        {
            "message": "Missing item type\nObject hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\nand properly destroy them if sources are removed",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:6249"
        },
        {
            "message": "Missing item type\nA reference to a loader class used by a plugin that must be set.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:6266"
        },
        {
            "message": "Missing item type\nA reference to an AbstractSoundInstance class used by a plugin that must be set.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:6273"
        },
        {
            "message": "Missing item type\nThe TagPool is an object pool for HTMLAudio tag instances.\n#class TagPool",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:7389"
        },
        {
            "message": "Missing item type\nA list of all available tags in the pool.\n#property tags",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:7398"
        },
        {
            "message": "Missing item type\nGet an HTMLAudioElement for immediate playback. This takes it out of the pool.\n#method get",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:7412"
        },
        {
            "message": "Missing item type\nPut an HTMLAudioElement back in the pool for use.\n#method set",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:7428"
        },
        {
            "message": "Missing item type\nCreate an HTML audio tag.\n#method _createTag",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:7448"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:7514"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.combined.js:7524"
        },
        {
            "message": "Missing item type\nSoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-0.6.2.min.js:13"
        },
        {
            "message": "Missing item type\nThe attribute the items loaded using tags use for the source.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:1672"
        },
        {
            "message": "Missing item type\nDetermines what the tags initial style.visibility was, so we can set it correctly after a load.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:2457"
        },
        {
            "message": "Missing item type\nUsed to dispatch error events from internal preloading.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:4150"
        },
        {
            "message": "Missing item type\nAn internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\neach sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\nThe number of sounds is artificially limited by Sound in order to prevent over-saturation of a\nsingle sound, as well as to stay within hardware limitations, although the latter may disappear with better\nbrowser support.\n\nWhen a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\nsound that is already playing.\n#class SoundChannel",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5006"
        },
        {
            "message": "Missing item type\nA hash of channel instances indexed by source.\n#property channels",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5029"
        },
        {
            "message": "Missing item type\nCreate a sound channel. Note that if the sound channel already exists, this will fail.\n#method create",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5037"
        },
        {
            "message": "Missing item type\nDelete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n#method remove",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5053"
        },
        {
            "message": "Missing item type\nDelete all sound channels, stop and delete all related instances.\n#method removeAll",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5067"
        },
        {
            "message": "Missing item type\nAdd an instance to a sound channel.\n#method add",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5078"
        },
        {
            "message": "Missing item type\nRemove an instance from the channel.\n#method remove",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5092"
        },
        {
            "message": "Missing item type\nGet the maximum number of sounds you can have in a channel.\n#method maxPerChannel",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5105"
        },
        {
            "message": "Missing item type\nGet a channel instance by its src.\n#method get",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5113"
        },
        {
            "message": "Missing item type\nThe source of the channel.\n#property src",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5140"
        },
        {
            "message": "Missing item type\nThe maximum number of instances in this channel.  -1 indicates no limit\n#property max",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5147"
        },
        {
            "message": "Missing item type\nThe default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n#property maxDefault",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5154"
        },
        {
            "message": "Missing item type\nThe current number of active instances.\n#property length",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5163"
        },
        {
            "message": "Missing item type\nInitialize the channel.\n#method init",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5170"
        },
        {
            "message": "Missing item type\nGet an instance by index.\n#method get",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5184"
        },
        {
            "message": "Missing item type\nAdd a new instance to the channel.\n#method add",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5194"
        },
        {
            "message": "Missing item type\nRemove an instance from the channel, either when it has finished playing, or it has been interrupted.\n#method remove",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5207"
        },
        {
            "message": "Missing item type\nStop playback and remove all instances from the channel.  Usually in response to a delete call.\n#method removeAll",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5222"
        },
        {
            "message": "Missing item type\nGet an available slot depending on interrupt value and if slots are available.\n#method getSlot",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:5233"
        },
        {
            "message": "Missing item type\nObject hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:6232"
        },
        {
            "message": "Missing item type\nObject hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\nand properly destroy them if sources are removed",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:6249"
        },
        {
            "message": "Missing item type\nA reference to a loader class used by a plugin that must be set.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:6266"
        },
        {
            "message": "Missing item type\nA reference to an AbstractSoundInstance class used by a plugin that must be set.",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:6273"
        },
        {
            "message": "Missing item type\nThe TagPool is an object pool for HTMLAudio tag instances.\n#class TagPool",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:7389"
        },
        {
            "message": "Missing item type\nA list of all available tags in the pool.\n#property tags",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:7398"
        },
        {
            "message": "Missing item type\nGet an HTMLAudioElement for immediate playback. This takes it out of the pool.\n#method get",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:7412"
        },
        {
            "message": "Missing item type\nPut an HTMLAudioElement back in the pool for use.\n#method set",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:7428"
        },
        {
            "message": "Missing item type\nCreate an HTML audio tag.\n#method _createTag",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:7448"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterVolume",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:7514"
        },
        {
            "message": "Missing item type\nCalled by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\nundoc'd because it is not meant to be used outside of Sound\n#method setMasterMute",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.combined.js:7524"
        },
        {
            "message": "Missing item type\nSoundJS FlashAudioPlugin also includes swfobject (http://code.google.com/p/swfobject/)",
            "line": " Scripts\\lib\\SoundJS\\lib\\soundjs-NEXT.min.js:13"
        },
        {
            "message": "Missing item type\nDetermine the appropriate x/y/rotation information about a path for a given ratio along the path.\nAssumes a path object with all optional parameters specified.",
            "line": " Scripts\\lib\\TweenJS\\lib\\tweenjs-0.6.2.combined.js:3335"
        },
        {
            "message": "Missing item type\nDetermine the appropriate x/y/rotation information about a path for a given ratio along the path.\nAssumes a path object with all optional parameters specified.",
            "line": " Scripts\\lib\\TweenJS\\lib\\tweenjs-NEXT.combined.js:3335"
        },
        {
            "message": "Missing item type",
            "line": " Scripts\\objects\\button.js:10"
        }
    ]
}